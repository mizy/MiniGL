!function(Q,F){"object"==typeof exports&&"object"==typeof module?module.exports=F():"function"==typeof define&&define.amd?define([],F):"object"==typeof exports?exports.MiniGL=F():Q.MiniGL=F()}(self,(function(){return(()=>{"use strict";var __webpack_modules__={349:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (/* binding */ _assertThisInitialized)\n/* harmony export */ });\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n  }\n\n  return self;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzPzI1N2UiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQWU7QUFDZjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIzNDkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuXG4gIHJldHVybiBzZWxmO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///349\n')},610:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (/* binding */ _classCallCheck)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError("Cannot call a class as a function");\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2suanM/ZDRlYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjYxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///610\n')},991:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (/* binding */ _createClass)\n/* harmony export */ });\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if ("value" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanM/YmVlMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBLGlCQUFpQixrQkFBa0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI5OTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICByZXR1cm4gQ29uc3RydWN0b3I7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///991\n')},156:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (/* binding */ _defineProperty)\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkuanM/YWRlMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjE1Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///156\n')},608:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (/* binding */ _getPrototypeOf)\n/* harmony export */ });\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZ2V0UHJvdG90eXBlT2YuanM/N2U4NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNjA4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pO1xuICB9O1xuICByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///608\n')},255:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Z": () => (/* binding */ _inherits)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== "function" && superClass !== null) {\n    throw new TypeError("Super expression must either be null or a function");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2V0UHJvdG90eXBlT2YuanM/YjM4MCIsIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHMuanM/MjYyZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEM7O0FDUGlEO0FBQ2xDO0FBQ2Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxrQkFBa0IsZUFBYztBQUNoQyIsImZpbGUiOiIyNTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgcmV0dXJuIG87XG4gIH07XG5cbiAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn0iLCJpbXBvcnQgc2V0UHJvdG90eXBlT2YgZnJvbSBcIi4vc2V0UHJvdG90eXBlT2YuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO1xuICB9XG5cbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgY29uc3RydWN0b3I6IHtcbiAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbiAgaWYgKHN1cGVyQ2xhc3MpIHNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///255\n')},70:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (/* binding */ _possibleConstructorReturn)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(484);\n/* harmony import */ var _assertThisInitialized_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(349);\n\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__/* .default */ .Z)(call) === "object" || typeof call === "function")) {\n    return call;\n  }\n\n  return (0,_assertThisInitialized_js__WEBPACK_IMPORTED_MODULE_1__/* .default */ .Z)(self);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybi5qcz85OWRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQW9EO0FBQ1c7QUFDaEQ7QUFDZixlQUFlLCtFQUFPO0FBQ3RCO0FBQ0E7O0FBRUEsU0FBUywyRUFBcUI7QUFDOUIiLCJmaWxlIjoiNzAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX3R5cGVvZiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy90eXBlb2ZcIjtcbmltcG9ydCBhc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSBcIi4vYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7XG4gICAgcmV0dXJuIGNhbGw7XG4gIH1cblxuICByZXR1cm4gYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///70\n')},18:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Z": () => (/* binding */ _toConsumableArray)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === "string") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === "Object" && o.constructor) n = o.constructor.name;\n  if (n === "Map" || n === "Set") return Array.from(o);\n  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js\nfunction _nonIterableSpread() {\n  throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\n\n\n\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlMaWtlVG9BcnJheS5qcz82Yjc1Iiwid2VicGFjazovL01pbmlHTC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hcnJheVdpdGhvdXRIb2xlcy5qcz82MDA1Iiwid2VicGFjazovL01pbmlHTC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pdGVyYWJsZVRvQXJyYXkuanM/ZGI5MCIsIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanM/MDZjNSIsIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vbm9uSXRlcmFibGVTcHJlYWQuanM/MzQyNyIsIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkuanM/MjkwOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWU7QUFDZjs7QUFFQSx3Q0FBd0MsU0FBUztBQUNqRDtBQUNBOztBQUVBO0FBQ0EsQzs7QUNScUQ7QUFDdEM7QUFDZixpQ0FBaUMsaUJBQWdCO0FBQ2pELEM7O0FDSGU7QUFDZjtBQUNBLEM7O0FDRnFEO0FBQ3RDO0FBQ2Y7QUFDQSxvQ0FBb0MsaUJBQWdCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLHNGQUFzRixpQkFBZ0I7QUFDdEcsQzs7QUNSZTtBQUNmO0FBQ0EsQzs7QUNGdUQ7QUFDSjtBQUNzQjtBQUNsQjtBQUN4QztBQUNmLFNBQVMsa0JBQWlCLFNBQVMsZ0JBQWUsU0FBUywyQkFBMEIsU0FBUyxrQkFBaUI7QUFDL0ciLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikge1xuICBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDtcblxuICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHtcbiAgICBhcnIyW2ldID0gYXJyW2ldO1xuICB9XG5cbiAgcmV0dXJuIGFycjI7XG59IiwiaW1wb3J0IGFycmF5TGlrZVRvQXJyYXkgZnJvbSBcIi4vYXJyYXlMaWtlVG9BcnJheS5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShhcnIpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikge1xuICBpZiAodHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBpdGVyW1N5bWJvbC5pdGVyYXRvcl0gIT0gbnVsbCB8fCBpdGVyW1wiQEBpdGVyYXRvclwiXSAhPSBudWxsKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTtcbn0iLCJpbXBvcnQgYXJyYXlMaWtlVG9BcnJheSBmcm9tIFwiLi9hcnJheUxpa2VUb0FycmF5LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7XG4gIGlmICghbykgcmV0dXJuO1xuICBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG4gIHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTtcbiAgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTtcbiAgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7XG4gIGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59IiwiaW1wb3J0IGFycmF5V2l0aG91dEhvbGVzIGZyb20gXCIuL2FycmF5V2l0aG91dEhvbGVzLmpzXCI7XG5pbXBvcnQgaXRlcmFibGVUb0FycmF5IGZyb20gXCIuL2l0ZXJhYmxlVG9BcnJheS5qc1wiO1xuaW1wb3J0IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IGZyb20gXCIuL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzXCI7XG5pbXBvcnQgbm9uSXRlcmFibGVTcHJlYWQgZnJvbSBcIi4vbm9uSXRlcmFibGVTcHJlYWQuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgcmV0dXJuIGFycmF5V2l0aG91dEhvbGVzKGFycikgfHwgaXRlcmFibGVUb0FycmF5KGFycikgfHwgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBub25JdGVyYWJsZVNwcmVhZCgpO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///18\n')},484:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (/* binding */ _typeof)\n/* harmony export */ });\nfunction _typeof(obj) {\n  "@babel/helpers - typeof";\n\n  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mLmpzPzUzY2EiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQWU7QUFDZjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjQ4NC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gIFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtcblxuICBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHtcbiAgICBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgICAgIHJldHVybiB0eXBlb2Ygb2JqO1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIF90eXBlb2Yob2JqKTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///484\n')},33:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(484);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(610);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(991);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(156);\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(628);\n\n\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* .default */ .Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n/**\n * Base 基类方便继承以实现其他类型的情况\n */\n\nvar Base = /*#__PURE__*/function () {\n  // 是否需要重绘\n  function Base(config) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__/* .default */ .Z)(this, Base);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* .default */ .Z)(this, "vSize", 2);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* .default */ .Z)(this, "offset", 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* .default */ .Z)(this, "depthMask", true);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* .default */ .Z)(this, "depthTest", true);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* .default */ .Z)(this, "transparent", true);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* .default */ .Z)(this, "uniformsNeedUpdate", true);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* .default */ .Z)(this, "uniformLocations", {});\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* .default */ .Z)(this, "visible", true);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* .default */ .Z)(this, "uniformData", {\n      z: {\n        value: 1,\n        type: \'uniform1f\'\n      }\n    });\n\n    this.init(config);\n  }\n\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__/* .default */ .Z)(Base, [{\n    key: "init",\n    value: function init() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.config = Object.assign({\n        type: \'ok\'\n      }, config);\n      this.buffers = [];\n      this.buffersSize = []; // 初始化数据数组\n\n      this.indices = [];\n      this.vertex = []; // 初始化模型转换矩阵，这个矩阵按需引用\n\n      this.matrix = gl_matrix__WEBPACK_IMPORTED_MODULE_3__/* .create */ .Ue();\n\n      if (config.shaders) {\n        this.shaders = _objectSpread(_objectSpread({}, this.shaders), config.shaders);\n      }\n\n      if (config.miniGL) {\n        config.miniGL.canvas.add(this);\n      }\n    }\n  }, {\n    key: "setMatrix",\n    value: function setMatrix(matrix) {\n      gl_matrix__WEBPACK_IMPORTED_MODULE_3__/* .copy */ .JG(this.matrix, matrix);\n    }\n  }, {\n    key: "setData",\n    value: function setData(data) {\n      this.vertex = data;\n      this.setBufferData(data, \'position\', 2);\n    }\n  }, {\n    key: "setUniformData",\n    value: function setUniformData() {\n      if (!this.uniformData || !this.uniformsNeedUpdate) return;\n\n      for (var key in this.uniformData) {\n        var item = this.uniformData[key];\n        this.setUniform(key, item);\n      } // this.uniformsNeedUpdate = false;\n\n    }\n    /**\n     * @param  {} texture\n     * @param  {} key=\'u_Sampler\'\n     */\n\n  }, {\n    key: "setTexture",\n    value: function setTexture(texture) {\n      var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'u_Sampler\';\n      this.uniformData[key] = {\n        type: \'uniform1i\',\n        // image\n        value: 0,\n        // 0号纹理传递\n        texture: texture.webglTexture ? texture.webglTexture : texture\n      };\n      this.texture = texture;\n      this.uniformsNeedUpdate = true;\n    }\n  }, {\n    key: "setUniform",\n    value: function setUniform(key, item) {\n      var gl = this.gl;\n      var value = item.value,\n          type = item.type,\n          texture = item.texture,\n          _item$textureUnit = item.textureUnit,\n          textureUnit = _item$textureUnit === void 0 ? 0 : _item$textureUnit; // 矩阵\n\n      if (type.indexOf(\'uniformMatrix\') > -1) {\n        gl[type](this.getUniformLocation(key), false, value); // 图形数据\n      } else if (texture) {\n        // 激活纹理单元0，这里可以配置激活多个纹理单元，用来完成一个shader里多个纹理叠加处理的后期效果\n        gl.activeTexture(gl["TEXTURE".concat(textureUnit)]); // 绑定纹理到单元0上\n\n        gl.bindTexture(gl.TEXTURE_2D, item.texture); // 传值\n\n        gl[type](this.getUniformLocation(key), value); // 行列数据\n      } else if (type.slice(-1) === \'v\' || (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_4__/* .default */ .Z)(value) !== \'object\') {\n        gl[type](this.getUniformLocation(key), value);\n      } else {\n        gl[type](this.getUniformLocation(key), value[0] || value, value[1], value[2], value[3]);\n      }\n\n      this.uniformData[key] = item;\n    }\n    /**\n     * 新的缓存数据\n     * @param  {} data\n     * @param  {} name\n     */\n\n  }, {\n    key: "setBufferData",\n    value: function setBufferData(data, name, size) {\n      // 没有的话初始化复用一个\n      if (!this.buffers[name]) {\n        this.buffers[name] = this.gl.createBuffer();\n      }\n\n      this.buffersSize[name] = size; // 顶点buffer\n\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.buffers[name]);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(data), this.gl.STATIC_DRAW);\n    }\n  }, {\n    key: "setIndices",\n    value: function setIndices(indices) {\n      this.indices = indices; // 顶点buffer\n\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indicesPointer);\n      this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), this.gl.STATIC_DRAW);\n    } // 生成shader程序\n\n  }, {\n    key: "initShader",\n    value: function initShader() {\n      var gl = this.gl; // 加载shader\n\n      var vertexShaderObject = this.loadShader(this.shaders.vertex, this.gl.VERTEX_SHADER);\n      var fragmentShaderObject = this.loadShader(this.shaders.fragment, this.gl.FRAGMENT_SHADER); // 创建程序\n\n      var shaderProgram = this.gl.createProgram();\n      this.gl.attachShader(shaderProgram, vertexShaderObject);\n      this.gl.attachShader(shaderProgram, fragmentShaderObject);\n      this.gl.linkProgram(shaderProgram);\n\n      if (!this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS)) {\n        console.error(\'shaderProgram Error: \', gl.getError(), gl.getProgramParameter(shaderProgram, 35715), gl.getProgramInfoLog(shaderProgram).trim());\n        console.error(\'fragmentLog:\', gl.getShaderInfoLog(vertexShaderObject).trim(), this.addLineNumbers(gl.getShaderSource(vertexShaderObject)));\n        console.error(\'vertexLog:\', gl.getShaderInfoLog(fragmentShaderObject).trim(), this.addLineNumbers(gl.getShaderSource(fragmentShaderObject)));\n        return;\n      }\n\n      this.shaderProgram = shaderProgram;\n    }\n  }, {\n    key: "addLineNumbers",\n    value: function addLineNumbers(string) {\n      var lines = string.split(\'\\n\');\n\n      for (var i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + \': \' + lines[i];\n      }\n\n      return lines.join(\'\\n\');\n    } // 获取顶点变量地址\n\n  }, {\n    key: "getAttribLocation",\n    value: function getAttribLocation(name) {\n      return this.gl.getAttribLocation(this.shaderProgram, name);\n    } // 获取uniform变量地址\n\n  }, {\n    key: "getUniformLocation",\n    value: function getUniformLocation(name) {\n      // 缓存会每秒快20ms左右，节省一帧的时机\n      if (this.uniformLocations[name]) return this.uniformLocations[name];\n      this.uniformLocations[name] = this.gl.getUniformLocation(this.shaderProgram, name);\n      return this.uniformLocations[name];\n    } // 加载shader\n\n  }, {\n    key: "loadShader",\n    value: function loadShader(shaderStr, type) {\n      var shader = this.gl.createShader(type);\n      this.gl.shaderSource(shader, shaderStr);\n      this.gl.compileShader(shader);\n      return shader;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      if (!this.shaders) return; // 2D 只需要两个坐标轴标识位置\n\n      var vLen = Math.ceil(this.vertex.length / this.vSize); // 几个点\n\n      var offset = 0; // 从数据第几位开始偏移\n\n      var normalize = false;\n\n      for (var key in this.buffers) {\n        var bufferData = this.buffers[key];\n        var bufferPosition = this.getAttribLocation(key); // 分别绑定数据到shader程序中\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData);\n        this.gl.vertexAttribPointer(bufferPosition, this.buffersSize[key], this.gl.FLOAT, normalize, 0, offset);\n        this.gl.enableVertexAttribArray(bufferPosition);\n      } // 加载shader程序\n\n\n      this.gl.useProgram(this.shaderProgram);\n      this.setUniformData(); // 渲染\n\n      if (this.vertex.length) {\n        this.gl.drawArrays(this.gl[this.drawType], this.offset, vLen);\n      }\n    }\n  }, {\n    key: "afterRender",\n    value: function afterRender() {}\n  }, {\n    key: "onAdd",\n    value: function onAdd(miniGL) {\n      this.miniGL = miniGL; // 获取顶点数据内存里的指针\n\n      this.gl = miniGL.gl; // 没有初始化的情况\n\n      if (!this.indicesPointer) {\n        this.indicesPointer = this.gl.createBuffer();\n      }\n\n      if (this.shaders && !this.shaderProgram) {\n        this.initShader();\n      }\n    }\n  }, {\n    key: "translate",\n    value: function translate(x, y) {\n      gl_matrix__WEBPACK_IMPORTED_MODULE_3__/* .translate */ .Iu(this.matrix, this.matrix, [x, y]);\n    }\n  }, {\n    key: "scale",\n    value: function scale(x, y) {\n      y = y || x;\n      gl_matrix__WEBPACK_IMPORTED_MODULE_3__/* .scale */ .bA(this.matrix, this.matrix, [x, y]);\n    } // 销毁shader\n\n  }, {\n    key: "destroy",\n    value: function destroy() {\n      var _this = this;\n\n      var shaders = this.gl.getAttachedShaders(this.shaderProgram);\n      shaders.forEach(function (item) {\n        _this.gl.deleteShader(item);\n      });\n      this.gl.deleteBuffer(this.indicesPointer);\n      this.gl.deleteProgram(this.shaderProgram);\n      this.parent = undefined;\n      this.dispose();\n    } // 释放buffer空间\n\n  }, {\n    key: "dispose",\n    value: function dispose() {\n      for (var key in this.buffers) {\n        this.gl.deleteBuffer(this.buffers[key]);\n      }\n\n      for (var _key in this.uniformData) {\n        if (this.uniformData[_key].texture) {\n          this.gl.deleteTexture(this.uniformData[_key].texture);\n        }\n      }\n\n      this.buffers = {};\n    }\n  }]);\n\n  return Base;\n}();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Base);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///33\n')},947:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": () => (/* binding */ Mesh_InstanceMesh)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 5 modules\nvar toConsumableArray = __webpack_require__(18);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\nvar classCallCheck = __webpack_require__(610);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js\nvar createClass = __webpack_require__(991);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\nvar assertThisInitialized = __webpack_require__(349);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js + 1 modules\nvar inherits = __webpack_require__(255);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\nvar possibleConstructorReturn = __webpack_require__(70);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\nvar getPrototypeOf = __webpack_require__(608);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(156);\n;// CONCATENATED MODULE: ./src/Shaders/instanceMeshShader.js\n/* harmony default export */ const instanceMeshShader = ({\n  vertexShader: \"\\n\\tprecision lowp float;\\n\\tattribute vec2 position;\\n    attribute vec4 color;\\n    attribute vec3 instanceOffset;\\n\\tvarying vec4 vColor;\\n\\tuniform mat3 transform;\\n    uniform float z;\\n\\tvoid main()\\n\\t{\\n\\t\\tvColor = color;\\n        vColor.a = instanceOffset.z;\\n\\n\\t\\tvec3 mPosition = transform * vec3(vec2(position.x+instanceOffset.x,position.y+instanceOffset.y),z);\\n\\t\\tgl_Position = vec4(mPosition.xy,z,1.0);\\n\\t}\\n\\t\",\n  fragmentShader: \"\\n\\tprecision lowp float;\\n\\tvarying vec4 vColor;\\n\\tvoid main()\\n\\t{\\n\\t\\tgl_FragColor = vColor;\\n\\t}\\n\\t\"\n});\n// EXTERNAL MODULE: ./src/Utils/LoadTexture.js\nvar LoadTexture = __webpack_require__(816);\n// EXTERNAL MODULE: ./src/Mesh/Base.js\nvar Base = __webpack_require__(33);\n;// CONCATENATED MODULE: ./src/Mesh/InstanceMesh.js\n\n\n\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar InstanceMesh = /*#__PURE__*/function (_Base) {\n  (0,inherits/* default */.Z)(InstanceMesh, _Base);\n\n  var _super = _createSuper(InstanceMesh);\n\n  // array.BYTES_PER_ELEMENT * indicesEachLength\n  function InstanceMesh() {\n    var _this;\n\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      // 一个值对应几个对象\n      instanceDivisor: 1\n    };\n\n    (0,classCallCheck/* default */.Z)(this, InstanceMesh);\n\n    _this = _super.call(this, config);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), \"drawType\", 'TRIANGLES');\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), \"offset\", 0);\n\n    _this.shaders = {\n      vertex: instanceMeshShader.vertexShader,\n      fragment: instanceMeshShader.fragmentShader\n    };\n    _this.uniformData = {\n      z: {\n        value: config.z || 1,\n        type: 'uniform1f'\n      }\n    };\n\n    _this.init(config);\n\n    _this.vSize = 2;\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(InstanceMesh, [{\n    key: \"setMap\",\n    value: function setMap(src) {\n      var _this2 = this;\n\n      return (0,LoadTexture/* default */.Z)(this.gl, src).then(function (texture) {\n        _this2.uniformData['map'] = {\n          type: 'uniform1i',\n          // image\n          value: 0,\n          // 0号纹理传递\n          texture: texture\n        };\n        _this2.uniformsNeedUpdate = true;\n      });\n    }\n  }, {\n    key: \"setData\",\n    value: function setData(data, indices) {\n      this.dispose();\n      var points = [];\n      var colors = [];\n      this.data = data;\n      data.forEach(function (item) {\n        var coord = [item.position.x, item.position.y];\n        var color = item.color || [0, 0.1, 0.2, 1];\n        colors.push.apply(colors, (0,toConsumableArray/* default */.Z)(color));\n        points.push.apply(points, coord);\n      });\n      this.vertex = points;\n      this.setBufferData(points, 'position', 2);\n      this.setBufferData(colors, 'color', 4);\n      this.setIndices(indices);\n    }\n  }, {\n    key: \"setBufferDatas\",\n    value: function setBufferDatas(_ref) {\n      var position = _ref.position,\n          color = _ref.color,\n          indices = _ref.indices,\n          uvs = _ref.uvs;\n      var viewport = this.miniGL.viewport;\n      this.dispose();\n      this.vertex = position;\n      this.setBufferData(position, 'position', 2);\n      this.setBufferData(color, 'color', 4);\n      this.setBufferData(uvs, 'uv', 2);\n      this.setIndices(indices);\n    }\n  }, {\n    key: \"setIndices\",\n    value: function setIndices(input) {\n      var indices = []; // 支持显示网格线\n\n      if (this.config.wireFrame && this.drawType === 'TRIANGLES') {\n        for (var i = 0; i < input.length - 2; i += 3) {\n          indices.push(input[i], input[i + 1], input[i + 1], input[i + 2], input[i + 2], input[i]);\n        }\n      } else {\n        indices = input;\n      }\n\n      this.indices = indices;\n      this.count = !this.count ? indices.length : this.count; // 顶点buffer\n\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indicesPointer);\n      this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), this.gl.STATIC_DRAW);\n    } // 设置实例数组\n\n  }, {\n    key: \"setInstanceData\",\n    value: function setInstanceData(instanceData) {\n      this.instanceData = instanceData;\n      var eachLength = instanceData[0].length;\n      var arr = [];\n      this.instanceData.forEach(function (item) {\n        arr.push.apply(arr, (0,toConsumableArray/* default */.Z)(item));\n      });\n      this.setBufferData(arr, 'instanceOffset', eachLength);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // 2D 只需要两个坐标轴标识位置\n      var offset = 0; // 从数据第几位开始偏移\n\n      var normalize = false; // 分别绑定数据到shader程序中\n\n      for (var key in this.buffers) {\n        var bufferData = this.buffers[key];\n        var bufferPosition = this.getAttribLocation(key); // 分别绑定数据到shader程序中\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData); // 绑定数据\n        // 挂载到对应的指针上\n\n        this.gl.vertexAttribPointer(bufferPosition, this.buffersSize[key], this.gl.FLOAT, normalize, 0, offset);\n        this.gl.enableVertexAttribArray(bufferPosition);\n      } // 加载实例偏移数组，这里写死instanceOffset的数据指针名，注意不要导致命名冲突了\n\n\n      this.gl.vertexAttribDivisor(this.getAttribLocation('instanceOffset'), this.config.instanceDivisor); // 使用顶点数据\n\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indicesPointer); // 加载shader程序\n\n      this.gl.useProgram(this.shaderProgram); // 配置uniform\n\n      this.setUniformData(); // 渲染\n\n      if (this.indices.length) {\n        var drawType = this.config.wireFrame ? 'LINES' : this.gl[this.drawType]; // offset必须乘以类型数组的长度，意味着要从内存中数据的对应字节数开始算 根据类型乘对应的TypeArray.BYTES_PER_ELEMENT\n\n        this.gl.drawElementsInstanced(drawType, this.count, this.gl.UNSIGNED_SHORT, this.offset, this.instanceData.length);\n      }\n    }\n  }]);\n\n  return InstanceMesh;\n}(Base/* default */.Z);\n\n/* harmony default export */ const Mesh_InstanceMesh = (InstanceMesh);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///947\n")},323:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Z": () => (/* binding */ Mesh_Line)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 5 modules\nvar toConsumableArray = __webpack_require__(18);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\nvar classCallCheck = __webpack_require__(610);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js\nvar createClass = __webpack_require__(991);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\nvar assertThisInitialized = __webpack_require__(349);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js + 1 modules\nvar inherits = __webpack_require__(255);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\nvar possibleConstructorReturn = __webpack_require__(70);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\nvar getPrototypeOf = __webpack_require__(608);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(156);\n;// CONCATENATED MODULE: ./src/Shaders/line.js\n/* harmony default export */ const line = ({\n  // shader中进行坐标转换会不会快？CPU只会调用一次，GPU每帧都要重复去运算，2d情况下没有相机，\n  // 没有坐标因相机而变化的情况，所以不用再shader中运算，可以减少cpu的调用率\n  // 发现还是会大规模常常对坐标进行替换，那还是放进shader中运算吧\n  vertexShader: "\\n\\tprecision highp float;\\n\\tattribute vec2 position;\\n\\tattribute vec4 color;\\n    uniform mat3 transform;\\n    uniform mat3 modelView;\\n\\tuniform float z;\\n\\tvarying vec4 vColor;\\n\\tvoid main()\\n\\t{\\n\\t\\tvColor = color;\\n\\t\\tvec3 mPosition = transform * modelView * vec3(position,1.);\\n\\t\\tgl_Position = vec4(mPosition.xy,z,1.);\\n\\t}\\n\\t",\n  fragmentShader: "\\n\\tprecision highp float;\\n\\tvarying vec4 vColor;\\n\\tvoid main()\\n\\t{\\n\\t\\tgl_FragColor = vColor;\\n\\t}\\n\\t"\n});\n// EXTERNAL MODULE: ./src/Mesh/Base.js\nvar Base = __webpack_require__(33);\n;// CONCATENATED MODULE: ./src/Mesh/Line.js\n\n\n\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar Line = /*#__PURE__*/function (_Base) {\n  (0,inherits/* default */.Z)(Line, _Base);\n\n  var _super = _createSuper(Line);\n\n  function Line(config) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, Line);\n\n    config = Object.assign({\n      z: 1\n    }, config);\n    _this = _super.call(this, config);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "drawType", \'LINE_STRIP\');\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "shaders", {\n      vertex: line.vertexShader,\n      fragment: line.fragmentShader\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "offset", 0);\n\n    _this.uniformData = {\n      z: {\n        value: Math.min(config.z, 1),\n        type: \'uniform1f\'\n      }\n    };\n\n    _this.init(config);\n\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(Line, [{\n    key: "setData",\n    value: function setData(data) {\n      var _this2 = this;\n\n      this.dispose();\n      var points = [];\n      this.data = data;\n      var colors = [];\n      data.forEach(function (item) {\n        points.push(item.position.x, item.position.y);\n        colors.push.apply(colors, (0,toConsumableArray/* default */.Z)(item.color || _this2.config.color || [1, 1, 0, 1]));\n      });\n      this.vertex = points;\n      this.setBufferData(points, \'position\', 2);\n      this.setBufferData(colors, \'color\', 4);\n    }\n  }]);\n\n  return Line;\n}(Base/* default */.Z);\n\n/* harmony default export */ const Mesh_Line = (Line);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9zcmMvU2hhZGVycy9saW5lLmpzP2Q2ZmEiLCJ3ZWJwYWNrOi8vTWluaUdMLy4vc3JjL01lc2gvTGluZS5qcz85YzBkIl0sIm5hbWVzIjpbInZlcnRleFNoYWRlciIsImZyYWdtZW50U2hhZGVyIiwiTGluZSIsImNvbmZpZyIsIk9iamVjdCIsImFzc2lnbiIsInoiLCJ2ZXJ0ZXgiLCJsaW5lU2hhZGVyIiwiZnJhZ21lbnQiLCJ1bmlmb3JtRGF0YSIsInZhbHVlIiwiTWF0aCIsIm1pbiIsInR5cGUiLCJpbml0IiwiZGF0YSIsImRpc3Bvc2UiLCJwb2ludHMiLCJjb2xvcnMiLCJmb3JFYWNoIiwiaXRlbSIsInB1c2giLCJwb3NpdGlvbiIsIngiLCJ5IiwiY29sb3IiLCJzZXRCdWZmZXJEYXRhIiwiQmFzZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwyQ0FBZTtBQUNkO0FBQ0E7QUFDQTtBQUNBQSxjQUFZLHdWQUpFO0FBb0JkQyxnQkFBYztBQXBCQSxDQUFmLEU7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDQUE7QUFDQTs7SUFFTUMsSTs7Ozs7QUFRTCxnQkFBWUMsTUFBWixFQUFvQjtBQUFBOztBQUFBOztBQUNuQkEsVUFBTSxHQUFHQyxNQUFNLENBQUNDLE1BQVAsQ0FBYztBQUN0QkMsT0FBQyxFQUFFO0FBRG1CLEtBQWQsRUFFTkgsTUFGTSxDQUFUO0FBR0EsOEJBQU1BLE1BQU47O0FBSm1CLG1HQVBULFlBT1M7O0FBQUEsa0dBTlY7QUFDVEksWUFBTSxFQUFFQyxpQkFEQztBQUVUQyxjQUFRLEVBQUVELG1CQUF5QlA7QUFGMUIsS0FNVTs7QUFBQSxpR0FGYixDQUVhOztBQUtuQixVQUFLUyxXQUFMLEdBQW1CO0FBQ2xCSixPQUFDLEVBQUU7QUFDRkssYUFBSyxFQUFFQyxJQUFJLENBQUNDLEdBQUwsQ0FBU1YsTUFBTSxDQUFDRyxDQUFoQixFQUFtQixDQUFuQixDQURMO0FBRUZRLFlBQUksRUFBRTtBQUZKO0FBRGUsS0FBbkI7O0FBTUEsVUFBS0MsSUFBTCxDQUFVWixNQUFWOztBQVhtQjtBQVluQjs7OztXQUVELGlCQUFRYSxJQUFSLEVBQWM7QUFBQTs7QUFDYixXQUFLQyxPQUFMO0FBQ0EsVUFBTUMsTUFBTSxHQUFHLEVBQWY7QUFDQSxXQUFLRixJQUFMLEdBQVlBLElBQVo7QUFDQSxVQUFNRyxNQUFNLEdBQUcsRUFBZjtBQUNBSCxVQUFJLENBQUNJLE9BQUwsQ0FBYSxVQUFBQyxJQUFJLEVBQUU7QUFDbEJILGNBQU0sQ0FBQ0ksSUFBUCxDQUFZRCxJQUFJLENBQUNFLFFBQUwsQ0FBY0MsQ0FBMUIsRUFBNkJILElBQUksQ0FBQ0UsUUFBTCxDQUFjRSxDQUEzQztBQUNBTixjQUFNLENBQUNHLElBQVAsT0FBQUgsTUFBTSx1Q0FBVUUsSUFBSSxDQUFDSyxLQUFMLElBQWMsTUFBSSxDQUFDdkIsTUFBTCxDQUFZdUIsS0FBMUIsSUFBbUMsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLENBQTdDLEVBQU47QUFDQSxPQUhEO0FBSUEsV0FBS25CLE1BQUwsR0FBY1csTUFBZDtBQUNBLFdBQUtTLGFBQUwsQ0FBbUJULE1BQW5CLEVBQTJCLFVBQTNCLEVBQXVDLENBQXZDO0FBQ0EsV0FBS1MsYUFBTCxDQUFtQlIsTUFBbkIsRUFBMkIsT0FBM0IsRUFBb0MsQ0FBcEM7QUFDQTs7OztFQWxDaUJTLG1COztBQXFDbkIsZ0RBQWUxQixJQUFmIiwiZmlsZSI6IjMyMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcblx0Ly8gc2hhZGVy5Lit6L+b6KGM5Z2Q5qCH6L2s5o2i5Lya5LiN5Lya5b+r77yfQ1BV5Y+q5Lya6LCD55So5LiA5qyh77yMR1BV5q+P5bin6YO96KaB6YeN5aSN5Y676L+Q566X77yMMmTmg4XlhrXkuIvmsqHmnInnm7jmnLrvvIxcblx0Ly8g5rKh5pyJ5Z2Q5qCH5Zug55u45py66ICM5Y+Y5YyW55qE5oOF5Ya177yM5omA5Lul5LiN55So5YaNc2hhZGVy5Lit6L+Q566X77yM5Y+v5Lul5YeP5bCRY3B155qE6LCD55So546HXG5cdC8vIOWPkeeOsOi/mOaYr+S8muWkp+inhOaooeW4uOW4uOWvueWdkOagh+i/m+ihjOabv+aNou+8jOmCo+i/mOaYr+aUvui/m3NoYWRlcuS4rei/kOeul+WQp1xuXHR2ZXJ0ZXhTaGFkZXI6IGBcblx0cHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xuXHRhdHRyaWJ1dGUgdmVjMiBwb3NpdGlvbjtcblx0YXR0cmlidXRlIHZlYzQgY29sb3I7XG4gICAgdW5pZm9ybSBtYXQzIHRyYW5zZm9ybTtcbiAgICB1bmlmb3JtIG1hdDMgbW9kZWxWaWV3O1xuXHR1bmlmb3JtIGZsb2F0IHo7XG5cdHZhcnlpbmcgdmVjNCB2Q29sb3I7XG5cdHZvaWQgbWFpbigpXG5cdHtcblx0XHR2Q29sb3IgPSBjb2xvcjtcblx0XHR2ZWMzIG1Qb3NpdGlvbiA9IHRyYW5zZm9ybSAqIG1vZGVsVmlldyAqIHZlYzMocG9zaXRpb24sMS4pO1xuXHRcdGdsX1Bvc2l0aW9uID0gdmVjNChtUG9zaXRpb24ueHkseiwxLik7XG5cdH1cblx0YCxcblxuXHRmcmFnbWVudFNoYWRlcjogYFxuXHRwcmVjaXNpb24gaGlnaHAgZmxvYXQ7XG5cdHZhcnlpbmcgdmVjNCB2Q29sb3I7XG5cdHZvaWQgbWFpbigpXG5cdHtcblx0XHRnbF9GcmFnQ29sb3IgPSB2Q29sb3I7XG5cdH1cblx0YFxufTtcbiIsImltcG9ydCBsaW5lU2hhZGVyIGZyb20gJy4uL1NoYWRlcnMvbGluZSc7XG5pbXBvcnQgQmFzZSBmcm9tICcuL0Jhc2UnO1xuXG5jbGFzcyBMaW5lIGV4dGVuZHMgQmFzZSB7XG5cdGRyYXdUeXBlID0gJ0xJTkVfU1RSSVAnO1xuXHRzaGFkZXJzID0ge1xuXHRcdHZlcnRleDogbGluZVNoYWRlci52ZXJ0ZXhTaGFkZXIsXG5cdFx0ZnJhZ21lbnQ6IGxpbmVTaGFkZXIuZnJhZ21lbnRTaGFkZXJcblx0fVxuXHRvZmZzZXQ9MDtcblxuXHRjb25zdHJ1Y3Rvcihjb25maWcpIHtcblx0XHRjb25maWcgPSBPYmplY3QuYXNzaWduKHtcblx0XHRcdHo6IDFcblx0XHR9LCBjb25maWcpO1xuXHRcdHN1cGVyKGNvbmZpZyk7XG5cdFx0dGhpcy51bmlmb3JtRGF0YSA9IHtcblx0XHRcdHo6IHtcblx0XHRcdFx0dmFsdWU6IE1hdGgubWluKGNvbmZpZy56LCAxKSxcblx0XHRcdFx0dHlwZTogJ3VuaWZvcm0xZidcblx0XHRcdH1cblx0XHR9O1xuXHRcdHRoaXMuaW5pdChjb25maWcpO1xuXHR9XG5cblx0c2V0RGF0YShkYXRhKSB7XG5cdFx0dGhpcy5kaXNwb3NlKCk7XG5cdFx0Y29uc3QgcG9pbnRzID0gW107XG5cdFx0dGhpcy5kYXRhID0gZGF0YTtcblx0XHRjb25zdCBjb2xvcnMgPSBbXTtcblx0XHRkYXRhLmZvckVhY2goaXRlbT0+e1xuXHRcdFx0cG9pbnRzLnB1c2goaXRlbS5wb3NpdGlvbi54LCBpdGVtLnBvc2l0aW9uLnkpO1xuXHRcdFx0Y29sb3JzLnB1c2goLi4uKGl0ZW0uY29sb3IgfHwgdGhpcy5jb25maWcuY29sb3IgfHwgWzEsIDEsIDAsIDFdKSk7XG5cdFx0fSk7XG5cdFx0dGhpcy52ZXJ0ZXggPSBwb2ludHM7XG5cdFx0dGhpcy5zZXRCdWZmZXJEYXRhKHBvaW50cywgJ3Bvc2l0aW9uJywgMik7XG5cdFx0dGhpcy5zZXRCdWZmZXJEYXRhKGNvbG9ycywgJ2NvbG9yJywgNCk7XG5cdH1cblxufVxuZXhwb3J0IGRlZmF1bHQgTGluZTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///323\n')},776:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(610);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(991);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(156);\n\n\n\n\nvar Texture = /*#__PURE__*/function () {\n  /**\n   * @param {Boolean} 是否支持预乘，默认为true，会提前乘好rgb*a，不需要再次乘alpha\n   */\n  function Texture(miniGL) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__/* .default */ .Z)(this, Texture);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__/* .default */ .Z)(this, "premultiplyAlpha", true);\n\n    this.miniGL = miniGL;\n    this.canvas = document.createElement(\'canvas\');\n    this.ctx = this.canvas.getContext(\'2d\');\n    document.body.appendChild(this.canvas);\n  }\n\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__/* .default */ .Z)(Texture, [{\n    key: "lg2",\n    value: function lg2(n) {\n      return Math.log(n) / Math.log(2);\n    }\n  }, {\n    key: "create",\n    value: function create(_ref) {\n      var image = _ref.image,\n          rect = _ref.rect,\n          _ref$reverseY = _ref.reverseY,\n          reverseY = _ref$reverseY === void 0 ? true : _ref$reverseY,\n          name = _ref.name;\n\n      if (rect) {\n        this.canvas.width = rect.width;\n        this.canvas.height = rect.height;\n        this.canvas.setAttribute(\'data-name\', name);\n        this.ctx.drawImage(image, -rect.x, -rect.y);\n        image = this.canvas;\n      }\n\n      var gl = this.miniGL.gl;\n      var texture = gl.createTexture(); // 挂载当前的空材质开始操作\n\n      gl.bindTexture(gl.TEXTURE_2D, texture); // 这个在读取图片数据前使用\n\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha); // 灌入图形数据\n\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image); // 反转y轴\n\n      if (reverseY) {\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, reverseY);\n      } // 支持缩小纹理\n\n\n      gl.generateMipmap(gl.TEXTURE_2D); // 放大缩小的时候都使用线性插值，减少颗粒感\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE); // 取消挂载\n\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      this.webglTexture = texture;\n      return texture;\n    }\n    /**\n     * 更新材质数据\n     * @param {*} texture\n     * @param {*} image\n     */\n\n  }, {\n    key: "update",\n    value: function update(texture, image) {\n      var gl = this.miniGL.gl;\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    }\n  }]);\n\n  return Texture;\n}();\n\n;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Texture);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9zcmMvVGV4dHVyZS9UZXh0dXJlLmpzPzE4Y2QiXSwibmFtZXMiOlsiVGV4dHVyZSIsIm1pbmlHTCIsImNhbnZhcyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImN0eCIsImdldENvbnRleHQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJuIiwiTWF0aCIsImxvZyIsImltYWdlIiwicmVjdCIsInJldmVyc2VZIiwibmFtZSIsIndpZHRoIiwiaGVpZ2h0Iiwic2V0QXR0cmlidXRlIiwiZHJhd0ltYWdlIiwieCIsInkiLCJnbCIsInRleHR1cmUiLCJjcmVhdGVUZXh0dXJlIiwiYmluZFRleHR1cmUiLCJURVhUVVJFXzJEIiwicGl4ZWxTdG9yZWkiLCJVTlBBQ0tfUFJFTVVMVElQTFlfQUxQSEFfV0VCR0wiLCJwcmVtdWx0aXBseUFscGhhIiwidGV4SW1hZ2UyRCIsIlJHQkEiLCJVTlNJR05FRF9CWVRFIiwiVU5QQUNLX0ZMSVBfWV9XRUJHTCIsImdlbmVyYXRlTWlwbWFwIiwidGV4UGFyYW1ldGVyaSIsIlRFWFRVUkVfTUFHX0ZJTFRFUiIsIkxJTkVBUiIsIlRFWFRVUkVfTUlOX0ZJTFRFUiIsIkxJTkVBUl9NSVBNQVBfTElORUFSIiwiVEVYVFVSRV9XUkFQX1MiLCJDTEFNUF9UT19FREdFIiwiVEVYVFVSRV9XUkFQX1QiLCJ3ZWJnbFRleHR1cmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7SUFBTUEsTztBQUNGO0FBQ0o7QUFDQTtBQUVJLG1CQUFZQyxNQUFaLEVBQW9CO0FBQUE7O0FBQUEsc0hBREQsSUFDQzs7QUFDaEIsU0FBS0EsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsU0FBS0MsTUFBTCxHQUFjQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsUUFBdkIsQ0FBZDtBQUNBLFNBQUtDLEdBQUwsR0FBVyxLQUFLSCxNQUFMLENBQVlJLFVBQVosQ0FBdUIsSUFBdkIsQ0FBWDtBQUNBSCxZQUFRLENBQUNJLElBQVQsQ0FBY0MsV0FB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LENBQUNHLFdBQUgsQ0FBZUgsRUFBRSxDQUFDSSxVQUFsQixFQUE4QkgsT0FBOUI7QUFDQUQsUUFBRSxDQUFDUSxVQUFILENBQWNSLEVBQUUsQ0FBQ0ksVUFBakIsRUFBNkIsQ0FBN0IsRUFBZ0NKLEVBQUUsQ0FBQ1MsSUFBbkMsRUFBeUNULEVBQUUsQ0FBQ1MsSUFBNUMsRUFBa0RULEVBQUUsQ0FBQ1UsYUFBckQsRUFBb0VwQixLQUFwRTtBQUNIOzs7Ozs7QUFDSjtBQUNELGlFQUFlWixPQUFmIiwiZmlsZSI6Ijc3Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFRleHR1cmUge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7Qm9vbGVhbn0g5piv5ZCm5pSv5oyB6aKE5LmY77yM6buY6K6k5Li6dHJ1Ze+8jOS8muaPkOWJjeS5mOWlvXJnYiph77yM5LiN6ZyA6KaB5YaN5qyh5LmYYWxwaGFcbiAgICAgKi9cbiAgICBwcmVtdWx0aXBseUFscGhhID0gdHJ1ZTtcbiAgICBjb25zdHJ1Y3RvcihtaW5pR0wpIHtcbiAgICAgICAgdGhpcy5taW5pR0wgPSBtaW5pR0w7XG4gICAgICAgIHRoaXMuY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XG4gICAgICAgIHRoaXMuY3R4ID0gdGhpcy5jYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLmNhbnZhcyk7XG4gICAgfVxuICAgIGxnMihuKSB7XG5cdFx0cmV0dXJuIE1hdGgubG9nKG4pIC8gTWF0aC5sb2coMik7XG5cdH1cbiAgICBjcmVhdGUoe2ltYWdlLCByZWN0LCByZXZlcnNlWSA9IHRydWUsIG5hbWV9KSB7XG4gICAgICAgIGlmIChyZWN0KSB7XG4gICAgICAgICAgICB0aGlzLmNhbnZhcy53aWR0aCA9IHJlY3Qud2lkdGg7XG4gICAgICAgICAgICB0aGlzLmNhbnZhcy5oZWlnaHQgPSByZWN0LmhlaWdodDtcbiAgICAgICAgICAgIHRoaXMuY2FudmFzLnNldEF0dHJpYnV0ZSgnZGF0YS1uYW1lJywgbmFtZSk7XG4gICAgICAgICAgICB0aGlzLmN0eC5kcmF3SW1hZ2UoaW1hZ2UsIC1yZWN0LngsIC1yZWN0LnkpO1xuICAgICAgICAgICAgaW1hZ2UgPSB0aGlzLmNhbnZhcztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBnbCA9IHRoaXMubWluaUdMLmdsO1xuICAgICAgICBjb25zdCB0ZXh0dXJlID0gZ2wuY3JlYXRlVGV4dHVyZSgpO1xuXG4gICAgICAgIC8vIOaMgui9veW9k+WJjeeahOepuuadkOi0qOW8gOWni+aTjeS9nFxuICAgICAgICBnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELCB0ZXh0dXJlKTtcbiAgICAgICAgLy8g6L+Z5Liq5Zyo6K+75Y+W5Zu+54mH5pWw5o2u5YmN5L2/55SoXG4gICAgICAgIGdsLnBpeGVsU3RvcmVpKGdsLlVOUEFDS19QUkVNVUxUSVBMWV9BTFBIQV9XRUJHTCwgdGhpcy5wcmVtdWx0aXBseUFscGhhKTtcbiAgICAgICAgLy8g54GM5YWl5Zu+5b2i5pWw5o2uXG4gICAgICAgIGdsLnRleEltYWdlMkQoZ2wuVEVYVFVSRV8yRCwgMCwgZ2wuUkdCQSwgZ2wuUkdCQSwgZ2wuVU5TSUdORURfQllURSwgaW1hZ2UpO1xuICAgICAgICAvLyDlj43ovax56L20XG4gICAgICAgIGlmIChyZXZlcnNlWSkge1xuICAgICAgICAgICAgZ2wucGl4ZWxTdG9yZWkoZ2wuVU5QQUNLX0ZMSVBfWV9XRUJHTCwgcmV2ZXJzZVkpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8g5pSv5oyB57yp5bCP57q555CGXG4gICAgICAgIGdsLmdlbmVyYXRlTWlwbWFwKGdsLlRFWFRVUkVfMkQpO1xuXG4gICAgICAgIC8vIOaUvuWkp+e8qeWwj+eahOaXtuWAmemDveS9v+eUqOe6v+aAp+aPkuWAvO+8jOWHj+Wwkemil+eykuaEn1xuICAgICAgICBnbC50ZXhQYXJhbWV0ZXJpKGdsLlRFWFRVUkVfMkQsIGdsLlRFWFRVUkVfTUFHX0ZJTFRFUiwgZ2wuTElORUFSKTtcbiAgICAgICAgZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFXzJELCBnbC5URVhUVVJFX01JTl9GSUxURVIsIGdsLkxJTkVBUl9NSVBNQVBfTElORUFSKTtcbiAgICAgICAgZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFXzJELCBnbC5URVhUVVJFX1dSQVBfUywgZ2wuQ0xBTVBfVE9fRURHRSk7XG4gICAgICAgIGdsLnRleFBhcmFtZXRlcmkoZ2wuVEVYVFVSRV8yRCwgZ2wuVEVYVFVSRV9XUkFQX1QsIGdsLkNMQU1QX1RPX0VER0UpO1xuXG4gICAgICAgIC8vIOWPlua2iOaMgui9vVxuICAgICAgICBnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELCBudWxsKTtcbiAgICAgICAgdGhpcy53ZWJnbFRleHR1cmUgPSB0ZXh0dXJlO1xuICAgICAgICByZXR1cm4gdGV4dHVyZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDmm7TmlrDmnZDotKjmlbDmja5cbiAgICAgKiBAcGFyYW0geyp9IHRleHR1cmVcbiAgICAgKiBAcGFyYW0geyp9IGltYWdlXG4gICAgICovXG4gICAgdXBkYXRlKHRleHR1cmUsIGltYWdlKSB7XG4gICAgICAgIGNvbnN0IGdsID0gdGhpcy5taW5pR0wuZ2w7XG4gICAgICAgIGdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsIHRleHR1cmUpO1xuICAgICAgICBnbC50ZXhJbWFnZTJEKGdsLlRFWFRVUkVfMkQsIDAsIGdsLlJHQkEsIGdsLlJHQkEsIGdsLlVOU0lHTkVEX0JZVEUsIGltYWdlKTtcbiAgICB9XG59O1xuZXhwb3J0IGRlZmF1bHQgVGV4dHVyZTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///776\n')},816:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (/* binding */ loadTexture)\n/* harmony export */ });\n/* harmony import */ var _Loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(905);\n\nfunction loadTexture(gl, imagePath) {\n  function lg2(n) {\n    return Math.log(n) / Math.log(2);\n  }\n\n  return (0,_Loader__WEBPACK_IMPORTED_MODULE_0__.loadImage)(imagePath).then(function (image) {\n    var texture = gl.createTexture(); // 挂载当前的空材质开始操作\n\n    gl.bindTexture(gl.TEXTURE_2D, texture); // 灌入图形数据\n\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image); // 反转y轴\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1); // 支持放大缩小渐进加载和插值算法，整数倍情况\n\n    if (lg2(image.width) === 0 && lg2(image.height) === 0) {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\n      gl.generateMipmap(gl.TEXTURE_2D);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    } // 取消挂载\n\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return texture;\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9zcmMvVXRpbHMvTG9hZFRleHR1cmUuanM/YjkyYiJdLCJuYW1lcyI6WyJsb2FkVGV4dHVyZSIsImdsIiwiaW1hZ2VQYXRoIiwibGcyIiwibiIsIk1hdGgiLCJsb2ciLCJsb2FkSW1hZ2UiLCJ0aGVuIiwiaW1hZ2UiLCJ0ZXh0dXJlIiwiY3JlYXRlVGV4dHVyZSIsImJpbmRUZXh0dXJlIiwiVEVYVFVSRV8yRCIsInRleEltYWdlMkQiLCJSR0JBIiwiVU5TSUdORURfQllURSIsInBpeGVsU3RvcmVpIiwiVU5QQUNLX0ZMSVBfWV9XRUJHTCIsIndpZHRoIiwiaGVpZ2h0IiwidGV4UGFyYW1ldGVyaSIsIlRFWFRVUkVfTUFHX0ZJTFRFUiIsIkxJTkVBUiIsIlRFWFRVUkVfTUlOX0ZJTFRFUiIsIkxJTkVBUl9NSVBNQVBfTkVBUkVTVCIsImdlbmVyYXRlTWlwbWFwIiwiVEVYVFVSRV9XUkFQX1MiLCJDTEFNUF9UT19FREdFIiwiVEVYVFVSRV9XUkFQX1QiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNlLFNBQVNBLFdBQVQsQ0FBcUJDLEVBQXJCLEVBQXlCQyxTQUF6QixFQUFvQztBQUNsRCxXQUFTQyxHQUFULENBQWFDLENBQWIsRUFBZ0I7QUFDZixXQUFPQyxJQUFJLENBQUNDLEdBQUwsQ0FBU0YsQ0FBVCxJQUFjQyxJQUFJLENBQUNDLEdBQUwsQ0FBUyxDQUFULENBQXJCO0FBQ0E7O0FBQ0QsU0FBT0Msa0RBQVMsQ0FBQ0wsU0FBRCxDQUFULENBQXFCTSxJQUFyQixDQUEwQixVQUFBQyxLQUFLLEVBQUU7QUFDakMsUUFBTUMsT0FBTyxHQUFHVCxFQUFFLENBQUNVLGFBQUgsRUFBaEIsQ0FEaUMsQ0FHakM7O0FBQ0FWLE1BQUUsQ0FBQ1csV0FBSCxDQUFlWCxFQUFFLENBQUNZLFVBQWxCLEVBQThCSCxPQUE5QixFQUppQyxDQUtqQzs7QUFDQVQsTUFBRSxDQUFDYSxVQUFILENBQWNiLEVBQUUsQ0FBQ1ksVUFBakIsRUFBNkIsQ0FBN0IsRUFBZ0NaLEVBQUUsQ0FBQ2MsSUFBbkMsRUFBeUNkLEVBQUUsQ0FBQ2MsSUFBNUMsRUFBa0RkLEVBQUUsQ0FBQ2UsYUFBckQsRUFBb0VQLEtBQXBFLEVBTmlDLENBT2pDOztBQUNBUixNQUFFLENBQUNnQixXQUFILENBQWVoQixFQUFFLENBQUNpQixtQkFBbEIsRUFBdUMsQ0FBdkMsRUFSaUMsQ0FVakM7O0FBQ0EsUUFBSWYsR0FBRyxDQUFDTSxLQUFLLENBQUNVLEtBQVAsQ0FBSCxLQUFxQixDQUFyQixJQUEwQmhCLEdBQUcsQ0FBQ00sS0FBSyxDQUFDVyxNQUFQLENBQUgsS0FBc0IsQ0FBcEQsRUFBdUQ7QUFDbkRuQixRQUFFLENBQUNvQixhQUFILENBQWlCcEIsRUFBRSxDQUFDWSxVQUFwQixFQUFnQ1osRUFBRSxDQUFDcUIsa0JBQW5DLEVBQXVEckIsRUFBRSxDQUFDc0IsTUFBMUQ7QUFDQXRCLFFBQUUsQ0FBQ29CLGFBQUgsQ0FBaUJwQixFQUFFLENBQUNZLFVBQXBCLEVBQWdDWixFQUFFLENBQUN1QixrQkFBbkMsRUFBdUR2QixFQUFFLENBQUN3QixxQkFBMUQ7QUFDQXhCLFFBQUUsQ0FBQ3lCLGNBQUgsQ0FBa0J6QixFQUFFLENBQUNZLFVBQXJCO0FBQ0gsS0FKRCxNQUlPO0FBQ0haLFFBQUUsQ0FBQ29CLGFBQUgsQ0FBaUJwQixFQUFFLENBQUNZLFVBQXBCLEVBQWdDWixFQUFFLENBQUNxQixrQkFBbkMsRUFBdURyQixFQUFFLENBQUNzQixNQUExRDtBQUNBdEIsUUFBRSxDQUFDb0IsYUFBSCxDQUFpQnBCLEVBQUUsQ0FBQ1ksVUFBcEIsRUFBZ0NaLEVBQUUsQ0FBQ3VCLGtCQUFuQyxFQUF1RHZCLEVBQUUsQ0FBQ3NCLE1BQTFEO0FBQ0F0QixRQUFFLENBQUNvQixhQUFILENBQWlCcEIsRUFBRSxDQUFDWSxVQUFwQixFQUFnQ1osRUFBRSxDQUFDMEIsY0FBbkMsRUFBbUQxQixFQUFFLENBQUMyQixhQUF0RDtBQUNBM0IsUUFBRSxDQUFDb0IsYUFBSCxDQUFpQnBCLEVBQUUsQ0FBQ1ksVUFBcEIsRUFBZ0NaLEVBQUUsQ0FBQzRCLGNBQW5DLEVBQW1ENUIsRUFBRSxDQUFDMkIsYUFBdEQ7QUFDSCxLQXBCZ0MsQ0FzQmpDOzs7QUFDQTNCLE1BQUUsQ0FBQ1csV0FBSCxDQUFlWCxFQUFFLENBQUNZLFVBQWxCLEVBQThCLElBQTlCO0FBQ0EsV0FBT0gsT0FBUDtBQUNILEdBekJHLENBQVA7QUEwQkEiLCJmaWxlIjoiODE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtsb2FkSW1hZ2V9IGZyb20gJy4vTG9hZGVyJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxvYWRUZXh0dXJlKGdsLCBpbWFnZVBhdGgpIHtcblx0ZnVuY3Rpb24gbGcyKG4pIHtcblx0XHRyZXR1cm4gTWF0aC5sb2cobikgLyBNYXRoLmxvZygyKTtcblx0fVxuXHRyZXR1cm4gbG9hZEltYWdlKGltYWdlUGF0aCkudGhlbihpbWFnZT0+e1xuICAgICAgICBjb25zdCB0ZXh0dXJlID0gZ2wuY3JlYXRlVGV4dHVyZSgpO1xuXG4gICAgICAgIC8vIOaMgui9veW9k+WJjeeahOepuuadkOi0qOW8gOWni+aTjeS9nFxuICAgICAgICBnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELCB0ZXh0dXJlKTtcbiAgICAgICAgLy8g54GM5YWl5Zu+5b2i5pWw5o2uXG4gICAgICAgIGdsLnRleEltYWdlMkQoZ2wuVEVYVFVSRV8yRCwgMCwgZ2wuUkdCQSwgZ2wuUkdCQSwgZ2wuVU5TSUdORURfQllURSwgaW1hZ2UpO1xuICAgICAgICAvLyDlj43ovax56L20XG4gICAgICAgIGdsLnBpeGVsU3RvcmVpKGdsLlVOUEFDS19GTElQX1lfV0VCR0wsIDEpO1xuXG4gICAgICAgIC8vIOaUr+aMgeaUvuWkp+e8qeWwj+a4kOi/m+WKoOi9veWSjOaPkuWAvOeul+azle+8jOaVtOaVsOWAjeaDheWGtVxuICAgICAgICBpZiAobGcyKGltYWdlLndpZHRoKSA9PT0gMCAmJiBsZzIoaW1hZ2UuaGVpZ2h0KSA9PT0gMCkge1xuICAgICAgICAgICAgZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFXzJELCBnbC5URVhUVVJFX01BR19GSUxURVIsIGdsLkxJTkVBUik7XG4gICAgICAgICAgICBnbC50ZXhQYXJhbWV0ZXJpKGdsLlRFWFRVUkVfMkQsIGdsLlRFWFRVUkVfTUlOX0ZJTFRFUiwgZ2wuTElORUFSX01JUE1BUF9ORUFSRVNUKTtcbiAgICAgICAgICAgIGdsLmdlbmVyYXRlTWlwbWFwKGdsLlRFWFRVUkVfMkQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFXzJELCBnbC5URVhUVVJFX01BR19GSUxURVIsIGdsLkxJTkVBUik7XG4gICAgICAgICAgICBnbC50ZXhQYXJhbWV0ZXJpKGdsLlRFWFRVUkVfMkQsIGdsLlRFWFRVUkVfTUlOX0ZJTFRFUiwgZ2wuTElORUFSKTtcbiAgICAgICAgICAgIGdsLnRleFBhcmFtZXRlcmkoZ2wuVEVYVFVSRV8yRCwgZ2wuVEVYVFVSRV9XUkFQX1MsIGdsLkNMQU1QX1RPX0VER0UpO1xuICAgICAgICAgICAgZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFXzJELCBnbC5URVhUVVJFX1dSQVBfVCwgZ2wuQ0xBTVBfVE9fRURHRSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyDlj5bmtojmjILovb1cbiAgICAgICAgZ2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV8yRCwgbnVsbCk7XG4gICAgICAgIHJldHVybiB0ZXh0dXJlO1xuICAgIH0pO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///816\n')},905:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"load\": () => (/* binding */ load),\n/* harmony export */   \"loadImage\": () => (/* binding */ loadImage)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(156);\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* .default */ .Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * 加载资源\n * @param  {} url\n * @param  {} option={}\n */\nfunction load(url) {\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (option.type === 'image') {\n    return loadImage(url);\n  }\n\n  option = Object.assign({\n    method: 'GET',\n    headers: {}\n  }, option);\n  return fetch(url, _objectSpread({}, option)).then(function (res) {\n    if (option.responseType) {\n      return res[option.responseType]();\n    }\n\n    return res.json();\n  });\n}\n/**\n * 加载图片\n * @param  {} url\n */\n\n\nfunction loadImage(url) {\n  return new Promise(function (resolve, reject) {\n    var image = new Image();\n    image.src = url;\n\n    image.onload = function () {\n      resolve(image);\n    };\n\n    image.onerror = function (e) {\n      reject(e);\n    };\n  });\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9zcmMvVXRpbHMvTG9hZGVyLmpzPzhlZTAiXSwibmFtZXMiOlsibG9hZCIsInVybCIsIm9wdGlvbiIsInR5cGUiLCJsb2FkSW1hZ2UiLCJPYmplY3QiLCJhc3NpZ24iLCJtZXRob2QiLCJoZWFkZXJzIiwiZmV0Y2giLCJ0aGVuIiwicmVzIiwicmVzcG9uc2VUeXBlIiwianNvbiIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiaW1hZ2UiLCJJbWFnZSIsInNyYyIsIm9ubG9hZCIsIm9uZXJyb3IiLCJlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBU0EsSUFBVCxDQUFjQyxHQUFkLEVBQWdDO0FBQUEsTUFBYkMsTUFBYSx1RUFBSixFQUFJOztBQUM1QixNQUFJQSxNQUFNLENBQUNDLElBQVAsS0FBZ0IsT0FBcEIsRUFBNkI7QUFDekIsV0FBT0MsU0FBUyxDQUFDSCxHQUFELENBQWhCO0FBQ0g7O0FBQ0RDLFFBQU0sR0FBR0csTUFBTSxDQUFDQyxNQUFQLENBQWM7QUFDbkJDLFVBQU0sRUFBRSxLQURXO0FBRW5CQyxXQUFPLEVBQUU7QUFGVSxHQUFkLEVBR05OLE1BSE0sQ0FBVDtBQUlBLFNBQU9PLEtBQUssQ0FBQ1IsR0FBRCxvQkFBVUMsTUFBVixFQUFMLENBQXdCUSxJQUF4QixDQUE2QixVQUFBQyxHQUFHLEVBQUU7QUFDckMsUUFBSVQsTUFBTSxDQUFDVSxZQUFYLEVBQXlCO0FBQ3JCLGFBQU9ELEdBQUcsQ0FBQ1QsTUFBTSxDQUFDVSxZQUFSLENBQUgsRUFBUDtBQUNIOztBQUNELFdBQU9ELEdBQUcsQ0FBQ0UsSUFBSixFQUFQO0FBQ0gsR0FMTSxDQUFQO0FBTUg7QUFDRDtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EsU0FBU1QsU0FBVCxDQUFtQkgsR0FBbkIsRUFBd0I7QUFDckIsU0FBTyxJQUFJYSxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQW1CO0FBQ2pDLFFBQUlDLEtBQUssR0FBRyxJQUFJQyxLQUFKLEVBQVo7QUFDQUQsU0FBSyxDQUFDRSxHQUFOLEdBQVlsQixHQUFaOztBQUNBZ0IsU0FBSyxDQUFDRyxNQUFOLEdBQWUsWUFBSTtBQUNmTCxhQUFPLENBQUNFLEtBQUQsQ0FBUDtBQUNILEtBRkQ7O0FBR0FBLFNBQUssQ0FBQ0ksT0FBTixHQUFnQixVQUFDQyxDQUFELEVBQUs7QUFDakJOLFlBQU0sQ0FBQ00sQ0FBRCxDQUFOO0FBQ0gsS0FGRDtBQUdKLEdBVE0sQ0FBUDtBQVVGIiwiZmlsZSI6IjkwNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICog5Yqg6L296LWE5rqQXG4gKiBAcGFyYW0gIHt9IHVybFxuICogQHBhcmFtICB7fSBvcHRpb249e31cbiAqL1xuZnVuY3Rpb24gbG9hZCh1cmwsIG9wdGlvbiA9IHt9KSB7XG4gICAgaWYgKG9wdGlvbi50eXBlID09PSAnaW1hZ2UnKSB7XG4gICAgICAgIHJldHVybiBsb2FkSW1hZ2UodXJsKTtcbiAgICB9XG4gICAgb3B0aW9uID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgIGhlYWRlcnM6IHt9XG4gICAgfSwgb3B0aW9uKTtcbiAgICByZXR1cm4gZmV0Y2godXJsLCB7Li4ub3B0aW9ufSkudGhlbihyZXM9PntcbiAgICAgICAgaWYgKG9wdGlvbi5yZXNwb25zZVR5cGUpIHtcbiAgICAgICAgICAgIHJldHVybiByZXNbb3B0aW9uLnJlc3BvbnNlVHlwZV0oKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICB9KTtcbn1cbi8qKlxuICog5Yqg6L295Zu+54mHXG4gKiBAcGFyYW0gIHt9IHVybFxuICovXG5mdW5jdGlvbiBsb2FkSW1hZ2UodXJsKSB7XG4gICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCk9PntcbiAgICAgICAgbGV0IGltYWdlID0gbmV3IEltYWdlKCk7XG4gICAgICAgIGltYWdlLnNyYyA9IHVybDtcbiAgICAgICAgaW1hZ2Uub25sb2FkID0gKCk9PntcbiAgICAgICAgICAgIHJlc29sdmUoaW1hZ2UpO1xuICAgICAgICB9O1xuICAgICAgICBpbWFnZS5vbmVycm9yID0gKGUpPT57XG4gICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgIH07XG4gICB9KTtcbn1cbmV4cG9ydCB7XG4gICAgbG9hZCwgbG9hZEltYWdlXG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///905\n")},88:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(905);\n\nvar Util = {\n  Loader: _Loader__WEBPACK_IMPORTED_MODULE_0__\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Util);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9zcmMvVXRpbHMvaW5kZXguanM/YzY3MyJdLCJuYW1lcyI6WyJVdGlsIiwiTG9hZGVyIl0sIm1hcHBpbmdzIjoiOzs7O0FBQ0E7QUFDQSxJQUFNQSxJQUFJLEdBQUc7QUFDVEMsUUFBTSxFQUFOQSxvQ0FBTUE7QUFERyxDQUFiO0FBR0EsaUVBQWVELElBQWYiLCJmaWxlIjoiODguanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCAqIGFzIExvYWRlciBmcm9tICcuL0xvYWRlcic7XG5jb25zdCBVdGlsID0ge1xuICAgIExvYWRlclxufTtcbmV4cG9ydCBkZWZhdWx0IFV0aWw7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///88\n')},324:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ src)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\nvar classCallCheck = __webpack_require__(610);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js\nvar createClass = __webpack_require__(991);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\nvar assertThisInitialized = __webpack_require__(349);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js + 1 modules\nvar inherits = __webpack_require__(255);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\nvar possibleConstructorReturn = __webpack_require__(70);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\nvar getPrototypeOf = __webpack_require__(608);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(156);\n;// CONCATENATED MODULE: ./src/Base.js\n\n\n\n\n/**\n * 图层基础类\n * @class\n */\nvar Base = /*#__PURE__*/function () {\n  function Base() {\n    (0,classCallCheck/* default */.Z)(this, Base);\n\n    (0,defineProperty/* default */.Z)(this, "layers", []);\n\n    (0,defineProperty/* default */.Z)(this, "_listeners", {});\n  }\n\n  (0,createClass/* default */.Z)(Base, [{\n    key: "on",\n    value:\n    /**\n     * 事件监听,用法同jQuery.on\n     */\n    function on(type, listener) {\n      var listeners = this._listeners;\n\n      if (listeners[type] === undefined) {\n        listeners[type] = [];\n      }\n\n      if (listeners[type].indexOf(listener) === -1) {\n        listeners[type].push(listener);\n      }\n    }\n    /**\n     * 触发事件\n     * @example\n     * this.fire("change",event)\n     */\n\n  }, {\n    key: "fire",\n    value: function fire(type, event) {\n      var listeners = this._listeners;\n      var listenerArray = listeners[type];\n\n      if (listenerArray !== undefined) {\n        var array = listenerArray.slice(0);\n\n        for (var i = 0, l = array.length; i < l; i++) {\n          array[i].call(this, event);\n        }\n      }\n    }\n    /**\n     * 关闭事件\n     * @example\n     * this.off(\'change\',onChange)\n     */\n\n  }, {\n    key: "off",\n    value: function off(type, listener) {\n      var listeners = this._listeners;\n      var listenerArray = listeners[type];\n\n      if (listenerArray !== undefined) {\n        if (listener) {\n          var index = listenerArray.indexOf(listener);\n\n          if (index !== -1) {\n            listenerArray.splice(index, 1);\n          }\n        } else {\n          this._listeners[type] = [];\n        }\n      }\n    }\n  }, {\n    key: "initConfig",\n    value: function initConfig(config) {}\n    /**\n     * 地图添加图层时调用,由子类实现\n     * @param {Map} map\n     */\n\n  }, {\n    key: "onAdd",\n    value: function onAdd(map) {\n      this.miniGL = map;\n    }\n    /**\n     * 地图每帧调用该函数\n     */\n\n  }, {\n    key: "update",\n    value: function update() {}\n    /**\n     * 移除图层时调用\n     */\n\n  }, {\n    key: "onRemove",\n    value: function onRemove() {\n      this._listeners = {};\n    }\n    /**\n     * 添加图层\n     * @param {Layer} layer - 图层\n     */\n\n  }, {\n    key: "addLayer",\n    value: function addLayer(layer) {\n      layer.id = ++this._layerid;\n      this.layers.push(layer);\n      layer.onAdd(this); // 初始化layer\n    }\n    /**\n     * 删除图层\n     * @param {Layer} layer - 图层\n     */\n\n  }, {\n    key: "removeLayer",\n    value: function removeLayer(layer) {\n      for (var x in this.layers) {\n        if (this.layers[x].id === layer.id) {\n          this.layers[x].onRemove && this.layers[x].onRemove();\n          this.layers.splice(x, 1);\n          return;\n        }\n      }\n    }\n    /**\n     * 获取图层通过id\n     */\n\n  }, {\n    key: "getLayerById",\n    value: function getLayerById(id) {\n      for (var i = 0; i < this.layers.length; i++) {\n        if (this.layers[i].id === id) return this.layers[i];\n      }\n    }\n  }]);\n\n  return Base;\n}();\n\n/* harmony default export */ const src_Base = (Base);\n// EXTERNAL MODULE: ./node_modules/gl-matrix/esm/mat3.js + 1 modules\nvar mat3 = __webpack_require__(628);\n;// CONCATENATED MODULE: ./src/View/Viewport.js\n\n\n\n/**\n * @class\n */\n\nvar ViewPort = /*#__PURE__*/function () {\n  function ViewPort(config) {\n    (0,classCallCheck/* default */.Z)(this, ViewPort);\n\n    this.miniGL = config.miniGL;\n    this.gl = this.miniGL.gl;\n    this.config = Object.assign({}, config.config);\n    this.transform = mat3/* create */.Ue(); // 2d视图转换矩阵\n\n    this.convertTransform = mat3/* create */.Ue(); // 空间转换矩阵\n\n    this.scale = 1;\n    this.translate = [0, 0];\n    this.rotation = Math.PI * 2; // 弧度\n  }\n  /**\n   * @param  {} x=0\n   * @param  {} y=0\n   */\n\n\n  (0,createClass/* default */.Z)(ViewPort, [{\n    key: "convertScreenToClip",\n    value: function convertScreenToClip() {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return {\n        x: x * 2 / this.width - 1,\n        y: 1 - y * 2 / this.height\n      };\n    }\n    /**\n     * @param  {} x=0\n     * @param  {} y=0\n     */\n\n  }, {\n    key: "convertClipToScreen",\n    value: function convertClipToScreen() {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return {\n        x: (x + 1) * this.width / 2,\n        y: (1 - y) * this.height / 2\n      };\n    }\n    /**\n     * 重新布局\n     */\n\n  }, {\n    key: "resize",\n    value: function resize() {\n      var ratio = window.devicePixelRatio;\n      this.pixelRatio = ratio;\n      var width = this.config.width || this.miniGL.container.clientWidth;\n      var height = this.config.height || this.miniGL.container.clientHeight;\n      var renderWidth = width * ratio;\n      var renderHeight = height * ratio;\n      this.miniGL.canvasDOM.width = renderWidth;\n      this.miniGL.canvasDOM.height = renderHeight;\n      this.miniGL.canvasDOM.style.width = width + \'px\';\n      this.miniGL.canvasDOM.style.height = height + \'px\';\n      this.gl.viewport(0, 0, renderWidth, renderHeight);\n      this.renderWidth = renderWidth;\n      this.renderHeight = renderHeight;\n      this.width = width;\n      this.height = height;\n      this.ratio = width / height;\n      this.makeMatrix();\n    }\n  }, {\n    key: "makeMatrix",\n    value: function makeMatrix() {\n      // 计算好坐标转换矩阵\n      var transform = mat3/* create */.Ue();\n      mat3/* scale */.bA(transform, transform, [2 / this.width, -2 / this.height]); // gl-matrix会以初次进行换算的坐标系为基准空间，来进行换算\n      // 也就是说每次进行转换的时候，都是在原矩阵上做计算和转换，而不只是改变矩阵的值\n\n      mat3/* translate */.Iu(transform, transform, [-this.width / 2, -this.height / 2]);\n      this.matrix = transform;\n      mat3/* copy */.JG(this.transform, transform);\n    }\n  }]);\n\n  return ViewPort;\n}();\n\n/* harmony default export */ const Viewport = (ViewPort);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 5 modules\nvar toConsumableArray = __webpack_require__(18);\n;// CONCATENATED MODULE: ./src/Shaders/mesh.js\n/* harmony default export */ const mesh = ({\n  vertexShader: "\\n\\tprecision highp float;\\n\\tattribute vec2 position;\\n\\tattribute vec4 color;\\n\\tvarying vec4 vColor;\\n    uniform mat3 transform;\\n    uniform mat3 modelView;\\n\\tuniform float z;\\n\\tvoid main()\\n\\t{\\n\\t\\tvColor = color;\\n\\t\\tvec3 mPosition = transform * modelView * vec3(position,1.);\\n\\t\\tgl_Position = vec4(mPosition.xy,z,1.0);\\n\\t\\t\\n\\t}\\n\\t",\n  fragmentShader: "\\n\\tprecision highp float;\\n\\tvarying vec4 vColor;\\n\\tvoid main()\\n\\t{\\n\\t\\tgl_FragColor = vColor;\\n\\t}\\n\\t"\n});\n// EXTERNAL MODULE: ./src/Mesh/Base.js\nvar Mesh_Base = __webpack_require__(33);\n;// CONCATENATED MODULE: ./src/Mesh/Mesh.js\n\n\n\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar Mesh = /*#__PURE__*/function (_Base) {\n  (0,inherits/* default */.Z)(Mesh, _Base);\n\n  var _super = _createSuper(Mesh);\n\n  // array.BYTES_PER_ELEMENT * indicesEachLength\n  function Mesh() {\n    var _this;\n\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      wireFrame: false\n    };\n\n    (0,classCallCheck/* default */.Z)(this, Mesh);\n\n    _this = _super.call(this, config);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "drawType", \'TRIANGLES\');\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "offset", 0);\n\n    _this.shaders = {\n      vertex: mesh.vertexShader,\n      fragment: mesh.fragmentShader\n    };\n    _this.uniformData.z = {\n      value: config.z || 1,\n      type: \'uniform1f\'\n    };\n\n    _this.init(config);\n\n    _this.vSize = 2;\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(Mesh, [{\n    key: "setMap",\n    value: function setMap(src) {\n      var _this2 = this;\n\n      return this.loadTexture(this.gl, src).then(function (texture) {\n        _this2.setData(texture);\n      });\n    }\n  }, {\n    key: "setData",\n    value: function setData(data, indices) {\n      this.dispose();\n      var points = [];\n      var colors = [];\n      this.data = data;\n      data.forEach(function (item) {\n        var coord = [item.position.x, item.position.y];\n        var color = item.color || [1, 1, 0, 1];\n        colors.push.apply(colors, (0,toConsumableArray/* default */.Z)(color));\n        points.push.apply(points, coord);\n      });\n      this.vertex = points;\n      this.setBufferData(points, \'position\', 2);\n      this.setBufferData(colors, \'color\', 4);\n      this.setIndices(indices);\n    }\n  }, {\n    key: "setBufferDatas",\n    value: function setBufferDatas(_ref) {\n      var position = _ref.position,\n          color = _ref.color,\n          indices = _ref.indices,\n          uvs = _ref.uvs;\n      var viewport = this.miniGL.viewport;\n      this.dispose();\n      this.vertex = position;\n      this.setBufferData(position, \'position\', 2);\n      this.setBufferData(color, \'color\', 4);\n      this.setBufferData(uvs, \'uv\', 2);\n      this.setIndices(indices);\n    }\n  }, {\n    key: "setIndices",\n    value: function setIndices(input) {\n      var indices = []; // 支持显示网格线\n\n      if (this.config.wireFrame && this.drawType === \'TRIANGLES\') {\n        for (var i = 0; i < input.length - 2; i += 3) {\n          indices.push(input[i], input[i + 1], input[i + 1], input[i + 2], input[i + 2], input[i]);\n        }\n      } else {\n        indices = input;\n      }\n\n      this.indices = indices; // 顶点buffer\n\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indicesPointer);\n      this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), this.gl.STATIC_DRAW);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      // 2D 只需要两个坐标轴标识位置\n      var offset = 0; // 从数据第几位开始偏移\n\n      var normalize = false; // 分别绑定数据到shader程序中\n\n      for (var key in this.buffers) {\n        var bufferData = this.buffers[key];\n        var bufferPosition = this.getAttribLocation(key); // 分别绑定数据到shader程序中\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData);\n        this.gl.vertexAttribPointer(bufferPosition, this.buffersSize[key], this.gl.FLOAT, normalize, 0, offset);\n        this.gl.enableVertexAttribArray(bufferPosition);\n      } // 使用顶点数据\n\n\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indicesPointer); // 加载shader程序\n\n      this.gl.useProgram(this.shaderProgram);\n      this.setUniformData(); // 渲染\n\n      if (this.indices.length) {\n        var drawType = this.config.wireFrame ? \'LINES\' : this.gl[this.drawType]; // offset必须乘以类型数组的长度，意味着要从内存中数据的对应字节数开始算 根据类型乘对应的BYTES_PER_ELEMENT\n\n        this.gl.drawElements(drawType, this.indices.length, this.gl.UNSIGNED_SHORT, this.offset);\n      }\n    }\n  }]);\n\n  return Mesh;\n}(Mesh_Base/* default */.Z);\n\n/* harmony default export */ const Mesh_Mesh = (Mesh);\n;// CONCATENATED MODULE: ./src/Shaders/point.js\n/* harmony default export */ const point = ({\n  vertexShader: function vertexShader(config) {\n    return "\\n\\t\\tprecision mediump float;\\n\\t\\tattribute vec2 position;\\n\\t\\tattribute vec4 color;\\n\\t\\tattribute float size;\\n\\t\\tattribute float initTime;\\n\\t\\tuniform float z;\\n\\t\\tuniform mat3 transform;\\n\\t\\tvarying vec4 vColor;\\n\\t\\tuniform float t;\\n        uniform float pixelRatio;\\n\\t\\tvarying float vTime;\\n\\t\\t\\n\\t\\tvoid main()\\n\\t\\t{\\n\\t\\t\\tvColor = color;\\n\\t\\t\\tgl_PointSize = size * pixelRatio;\\n\\t\\t\\tvec3 mPosition = transform * vec3(position,1.);\\n\\t\\t\\tgl_Position = vec4(mPosition.xy,z,1.);\\n\\t\\t\\tvTime = initTime;\\n\\t\\t}\\n\\t\\t";\n  },\n  fragmentShader: function fragmentShader(_ref) {\n    var isRound = _ref.isRound,\n        map = _ref.map,\n        isGradual = _ref.isGradual;\n    console.log(isRound);\n    return "\\n\\t\\tprecision mediump float;\\n\\t\\tuniform float t;\\n\\t\\tuniform float antialias;\\n\\t\\tuniform sampler2D map;\\n\\t\\tvarying float vTime;\\n\\t\\tvarying vec4 vColor;\\n\\t\\tvoid main()\\n\\t\\t{\\n\\t\\t\\tfloat distance = distance(gl_PointCoord, vec2(0.5, 0.5));\\n\\t\\t".concat(isRound ? "\\n\\t\\t\\tif (distance <= 0.5){" : \'\', "\\n\\t\\t\\t").concat(map ? "\\n\\t\\t\\t\\tvec4 texelColor = texture2D( map, gl_PointCoord ); \\n\\t\\t\\t\\tgl_FragColor = texelColor;\\n\\t\\t\\t\\t".concat(isGradual ? "\\n\\t\\t\\t\\tgl_FragColor.w *= sin(t+vTime)*0.75/2. + 1.-0.75/2." : \'\', ";\\n\\t\\t\\t\\tif(texelColor.w<=0.01){\\n\\t\\t\\t\\t\\tdiscard;\\n\\t\\t\\t\\t}\\n\\t\\t\\t") : "\\n\\t\\t\\t\\tgl_FragColor = vColor;\\n\\t\\t\\t\\t".concat(isGradual ? "\\n\\t\\t\\t\\tgl_FragColor.w = 1. - distance*2.;\\n\\t\\t\\t\\tgl_FragColor.w *= sin(t+vTime)*0.75/2. + 1.-0.75/2. ;" : \'\', "\\n\\t\\t\\t"), "\\n\\t\\t").concat(isRound ? "\\n\\t\\t\\t\\tfloat smoothSideRatio = smoothstep(0.,antialias,(0.5-distance));\\n\\t\\t\\t\\tgl_FragColor.w *= smoothSideRatio;\\n\\t\\t\\t}else{\\n\\t\\t\\t\\tdiscard;\\n\\t\\t\\t}\\n\\t\\t" : \'\', "\\n\\t\\t}\\n\\t\\t");\n  }\n});\n;// CONCATENATED MODULE: ./src/Mesh/Point.js\n\n\n\n\n\n\n\n\n\nfunction Point_createSuper(Derived) { var hasNativeReflectConstruct = Point_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction Point_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar Point = /*#__PURE__*/function (_Base) {\n  (0,inherits/* default */.Z)(Point, _Base);\n\n  var _super = Point_createSuper(Point);\n\n  function Point(config) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, Point);\n\n    config = Object.assign({\n      isRound: true,\n      initTime: false\n    }, config);\n    _this = _super.call(this, config);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "drawType", \'POINTS\');\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "vertex", []);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "offset", 0);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "vSize", 2);\n\n    _this.shaders = {\n      vertex: config.vertexShader || point.vertexShader(config),\n      fragment: config.fragmentShader || point.fragmentShader(config)\n    };\n    _this.uniformData = {\n      z: {\n        value: 1,\n        type: \'uniform1f\'\n      },\n      t: {\n        value: 1,\n        type: \'uniform1f\'\n      },\n      antialias: {\n        value: 0.1,\n        type: \'uniform1f\'\n      }\n    };\n\n    _this.init(config);\n\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(Point, [{\n    key: "setData",\n    value: function setData(data) {\n      var _this2 = this;\n\n      this.dispose();\n      var points = [];\n      var colors = [];\n      var size = [];\n      var vTime = [];\n      this.data = data;\n      data.forEach(function (item) {\n        points.push(item.position.x, item.position.y);\n        colors.push.apply(colors, (0,toConsumableArray/* default */.Z)(item.color || [1, 0, 0, 1]));\n        size.push(item.size || 10);\n        vTime.push(item.initTime || _this2.config.initTime || 2 * Math.random() * Math.PI);\n      });\n      this.vertex = points;\n      this.setBufferData(points, \'position\', 2);\n      this.setBufferData(colors, \'color\', 4);\n      this.setBufferData(size, \'size\', 1);\n      this.setBufferData(vTime, \'initTime\', 1);\n    }\n  }, {\n    key: "setBufferDatas",\n    value: function setBufferDatas(_ref) {\n      var position = _ref.position,\n          color = _ref.color,\n          size = _ref.size,\n          initTime = _ref.initTime;\n      var viewport = this.miniGL.viewport;\n      this.dispose();\n      this.uniformData.transform = {\n        value: viewport.transform,\n        type: \'uniformMatrix3fv\'\n      };\n      this.vertex = position;\n      this.setBufferData(position, \'position\', 2);\n      this.setBufferData(color, \'color\', 4);\n      this.setBufferData(size, \'size\', 1);\n\n      if (initTime) {\n        this.setBufferData(initTime, \'initTime\', 1);\n      }\n    }\n  }]);\n\n  return Point;\n}(Mesh_Base/* default */.Z);\n\n/* harmony default export */ const Mesh_Point = (Point);\n// EXTERNAL MODULE: ./src/Mesh/Line.js + 1 modules\nvar Line = __webpack_require__(323);\n;// CONCATENATED MODULE: ./src/Shaders/widthLine.js\n/* harmony default export */ const widthLine = ({\n  // 先求连接线然后再求垂线\n  // 求出等比放大的值\n  vertexShader: "\\n\\tprecision lowp float;\\n\\tattribute vec2 now;\\n\\tattribute vec2 pre;\\n\\tattribute vec2 next;\\n\\tattribute float side;\\n\\tuniform float width;\\n\\tuniform float aspect;\\n\\tuniform mat3 transform;\\n\\tuniform float offset;\\n\\tvarying float vSide;\\n\\tvoid main()\\n\\t{\\n\\t\\tvSide = side;\\n\\n\\t\\t// \\u5148\\u8F6C\\u6362\\u5750\\u6807\\u7CFB\\n\\t\\tvec2 mNow = (transform*vec3(now,1.)).xy;\\n\\t\\tvec2 mNext = (transform*vec3(next,1.)).xy;\\n\\t\\tvec2 mPre = (transform*vec3(pre,1.)).xy;\\n\\t\\tvec2 _now = vec2(mNow);\\n\\t\\tvec2 _next = vec2(mNext);\\n\\t\\tvec2 _pre =  vec2(mPre);\\n\\t\\n\\t\\t// \\u5148\\u628A\\u672C\\u5750\\u6807\\u7CFB\\u7684\\u5750\\u6807\\u653E\\u5927\\uFF0C\\u548C\\u771F\\u5B9E\\u7684\\u5916\\u754C\\u5750\\u6807\\u4E00\\u6837,\\u8FD9\\u6837\\u6C42\\u51FA\\u6765\\u7684\\u76F8\\u5BF9\\u5411\\u91CF\\u662F\\u51C6\\u786E\\u7684\\uFF0C\\u5982\\u679C\\u5728\\u540E\\u9762\\u4E4B\\u95F4\\u5BF9normal\\u8FDB\\u884C\\u53D8\\u5316\\uFF0C\\u5C31\\u4F1A\\u5F97\\u51FA\\u9519\\u8BEF\\u7684\\u7ED3\\u679C\\n\\t\\t_now.x *= aspect;\\n\\t\\t_next.x *= aspect;\\n\\t\\t_pre.x *= aspect;\\n\\t\\t\\n\\t\\tvec2 point0_1 = normalize(_now - _pre);\\n\\t\\tvec2 point2_1 = normalize(_next - _now);\\n\\t\\tvec2 point2_1_0v = normalize(point2_1 + point0_1);\\n\\t\\t\\n\\t\\tvec2 normal = vec2( -point2_1_0v.y , point2_1_0v.x );\\n\\t\\tvec2 offsets = offset*normal;\\n\\n\\t\\t//\\u8FD9\\u4E2A\\u7B97\\u6CD5\\u4E0B\\u5148\\u653E\\u5927,\\u6C42\\u51FA\\u7684Normal\\u6BD4\\u4F8B\\u5728\\u653E\\u5927\\u7684\\u5750\\u6807\\u7CFB\\u4E0B\\u662F\\u5BF9\\u7684\\uFF0C\\u6839\\u636E\\u8FD9\\u4E2Anormal\\u6C42\\u51FA\\u653E\\u5927\\u7684\\u6BD4\\u4F8B\\n\\t\\tfloat ratio = sqrt(1.0 - pow(dot(normal,point0_1),2.0));\\n\\t\\tvec2 dir = normal * width/ratio * .5 * side + offsets;\\n\\n\\t\\t// \\u5F97\\u51FA\\u7684x\\u5750\\u6807\\u4F1A\\u88AB\\u653E\\u5927\\uFF0C\\u8FD9\\u91CC\\u8981\\u9664\\u6389,\\u8BB0\\u5F97\\u8981\\u7528\\u8F6C\\u6362\\u540E\\u5750\\u6807\\u8FDB\\u884C\\u52A0\\u51CF\\n\\t\\tgl_Position = vec4(mNow.x + dir.x/aspect,mNow.y+dir.y , 1., 1.);\\n\\t}\\n\\t",\n  fragmentShader: "\\n\\tprecision lowp float;\\n\\tuniform vec4 color;\\n\\tvarying float vSide;\\n\\tvoid main()\\n\\t{\\n\\t\\tfloat smoothSideRatio = max(0.1,smoothstep(0.,0.4,(1. - abs(vSide))));\\n\\t\\tgl_FragColor = color;\\n\\t\\tgl_FragColor.w = smoothSideRatio;\\n\\t}\\n\\t"\n});\n;// CONCATENATED MODULE: ./src/Mesh/WidthLine.js\n\n\n\n\n\n\n\n\nfunction WidthLine_createSuper(Derived) { var hasNativeReflectConstruct = WidthLine_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction WidthLine_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar WidthLine = /*#__PURE__*/function (_Base) {\n  (0,inherits/* default */.Z)(WidthLine, _Base);\n\n  var _super = WidthLine_createSuper(WidthLine);\n\n  // "TRIANGLE_STRIP";\n  function WidthLine(config) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, WidthLine);\n\n    _this = _super.call(this);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "drawType", \'TRIANGLES\');\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "shaders", {\n      vertex: widthLine.vertexShader,\n      fragment: widthLine.fragmentShader\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "offset", 0);\n\n    config = Object.assign({\n      width: 20,\n      z: 1,\n      offset: 0\n    }, config);\n    _this.uniformData = {\n      z: {\n        value: config.z || 1,\n        type: \'uniform1f\'\n      }\n    };\n\n    _this.init(config);\n\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(WidthLine, [{\n    key: "setData",\n    value: function setData(data) {\n      var viewport = this.miniGL.viewport;\n      if (!data.length && data.length < 2) return console.warn(\'need input data.length >= 2\');\n      this.uniformData.color = {\n        value: this.config.color || [1, 0, 1, 1],\n        type: \'uniform4fv\'\n      };\n      this.uniformData.width = {\n        value: 2 * this.config.width / this.miniGL.viewport.height,\n        type: \'uniform1f\'\n      };\n      this.uniformData.offset = {\n        value: 2 * this.config.offset / this.miniGL.viewport.height,\n        type: \'uniform1f\'\n      };\n      this.data = data;\n      var points = [];\n      data.forEach(function (item) {\n        points.push(item.position.x, item.position.y);\n      }); // 生产双倍点for两个边\n\n      var res = this.calcSidePoints(points);\n      this.setBufferData(res.nowData, \'now\', 2);\n      this.setBufferData(res.preData, \'pre\', 2);\n      this.setBufferData(res.nextData, \'next\', 2);\n      this.setBufferData(res.side, \'side\', 1); // 生成顶点\n\n      var indices = [];\n      var indicesLength = res.nowData.length / 2; // TRIANGLES情况\n\n      for (var i = 0; i < indicesLength - 2; i += 2) {\n        indices.push(i);\n        indices.push(i + 1);\n        indices.push(i + 2);\n        indices.push(i + 2);\n        indices.push(i + 1);\n        indices.push(i + 3);\n      } // Strip退化方案太反人类，不hack 了\n      // for (let i = 0; i < indicesLength; i++) {\n      // \t//012 213 233 336 366 667 678\n      // \t// 4 =>3 5=>6 //退化过程\n      // \t// data[length - 1],\n      // \tindices.push(i);\n      // }\n\n\n      this.setIndices(indices);\n      this.res = res;\n    }\n  }, {\n    key: "addData",\n    value: function addData(data) {}\n  }, {\n    key: "calcSidePoints",\n    value: function calcSidePoints() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var length = data.length;\n      var side = [];\n      var nextData = [];\n      var preData = [];\n      var nowData = []; // 生产双倍点for两个边\n\n      for (var i = 0; i < length; i += 2) {\n        side.push(1, -1);\n        nowData.push(data[i], data[i + 1], data[i], data[i + 1]);\n      }\n\n      var next = [2 * data[length - 2] - data[length - 4], 2 * data[length - 1] - data[length - 3]];\n      nextData = [].concat(nowData, next, next);\n      nextData.splice(0, 4);\n      var pre = [2 * data[0] - data[2], 2 * data[1] - data[3]];\n      preData = [].concat(pre, pre, nowData);\n      return {\n        nowData: nowData,\n        preData: preData,\n        side: side,\n        nextData: nextData\n      };\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      // 2D 只需要两个坐标轴标识位置\n      var offset = 0; // 从数据第几位开始偏移\n\n      var normalize = false;\n\n      for (var key in this.buffers) {\n        var bufferData = this.buffers[key];\n        var bufferPosition = this.getAttribLocation(key); // 分别绑定数据到shader程序中\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData);\n        this.gl.vertexAttribPointer(bufferPosition, this.buffersSize[key], this.gl.FLOAT, normalize, 0, offset); // todo:webgl2.0 实例数组能减少同样形状但渲染不同的高性能方案\n\n        this.gl.enableVertexAttribArray(bufferPosition);\n      } // 使用顶点数据\n\n\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indicesPointer); // 加载shader程序\n\n      this.gl.useProgram(this.shaderProgram);\n      this.setUniformData(); // 渲染\n\n      if (this.indices.length) {\n        this.gl.drawElements(this.gl[this.drawType], this.indices.length, this.gl.UNSIGNED_SHORT, this.offset);\n      }\n    }\n  }]);\n\n  return WidthLine;\n}(Mesh_Base/* default */.Z);\n\n/* harmony default export */ const Mesh_WidthLine = (WidthLine);\n;// CONCATENATED MODULE: ./src/View/Canvas.js\n\n\n\n\n\n\n\n\n/**\n * @class\n */\n\nvar Canvas = /*#__PURE__*/function () {\n  function Canvas(config) {\n    var _this = this;\n\n    (0,classCallCheck/* default */.Z)(this, Canvas);\n\n    (0,defineProperty/* default */.Z)(this, "update", function () {\n      var time = new Date().getTime();\n      var delta = time - _this.beforeTime;\n      _this.beforeTime = time;\n\n      _this.render(delta);\n\n      requestAnimationFrame(_this.update);\n    });\n\n    this.index = 0;\n    this.meshes = [];\n    this.miniGL = config.miniGL;\n    this.gl = this.miniGL.gl; // 基础渲染以下类，其他形状让让用户自己new\n    // 牺牲一些性能，渲染多次drawElements来避免通过退化三角形合并形状，导致的事件处理困难（需要分层处理合并的图层，然后按照像素去检测，比较恶心）\n\n    this.mesh = new Mesh_Mesh(config.meshConfig);\n    this.point = new Mesh_Point(config.pointConfig);\n    this.line = new Line/* default */.Z(config.lineConfig);\n    this.widthLine = new Mesh_WidthLine(config.widthLineConfig);\n    this.add(this.mesh);\n    this.add(this.point);\n    this.add(this.line);\n    this.add(this.widthLine);\n  }\n\n  (0,createClass/* default */.Z)(Canvas, [{\n    key: "dispose",\n    value: function dispose() {\n      var _this2 = this;\n\n      this.meshes.forEach(function (item) {\n        _this2.remove(item);\n\n        item.destroy && item.destroy();\n      });\n      this.meshes = [];\n    }\n  }, {\n    key: "toDataUrl",\n    value: function toDataUrl() {\n      return this.gl.canvas.toDataUrl();\n    }\n  }, {\n    key: "add",\n    value:\n    /**\n     * @param  {} mesh\n     * @param  {} [key]\n     * @returns {String} key\n     */\n    function add(mesh) {\n      this.meshes.push(mesh);\n      mesh.onAdd && mesh.onAdd(this.miniGL);\n      mesh.parent = this;\n      return mesh;\n    }\n  }, {\n    key: "remove",\n    value: function remove(child) {\n      var index = this.meshes.indexOf(child);\n      this.meshes.splice(index, 1);\n    }\n  }, {\n    key: "addChild",\n    value: function addChild() {\n      var _this$add;\n\n      (_this$add = this.add).call.apply(_this$add, [this].concat(Array.prototype.slice.call(arguments)));\n    }\n  }, {\n    key: "removeChild",\n    value: function removeChild() {\n      var _this$remove;\n\n      (_this$remove = this.remove).call.apply(_this$remove, [this].concat(Array.prototype.slice.call(arguments)));\n    }\n  }, {\n    key: "render",\n    value: function render(delta) {\n      var gl = this.gl;\n      this.miniGL.fire(\'beforerender\', delta); // 清空\n\n      gl.clearDepth(1.0); // gl.enable(gl.DEPTH_TEST);\n\n      gl.disable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n      gl.disable(gl.CULL_FACE);\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n      for (var key in this.meshes) {\n        this.renderMesh(this.meshes[key], delta);\n      }\n    }\n    /**\n     * @param  {} mesh\n     * @param  {} delta\n     * @param  {} parentMatrix 一级级传下来的矩阵\n     */\n\n  }, {\n    key: "renderMesh",\n    value: function renderMesh(mesh, delta, parentMatrix) {\n      var _this3 = this;\n\n      var gl = this.gl;\n      var blendMode = (mesh.texture || {}).premultiplyAlpha ? \'ONE\' : \'SRC_ALPHA\';\n      gl.enable(gl.BLEND);\n      gl.blendFunc(gl[blendMode], mesh.blendMode || gl.ONE_MINUS_SRC_ALPHA); // 写入深度缓冲\n\n      if (mesh.visible) {\n        this.makeTransform(mesh, parentMatrix);\n        this.makeNeedUniform(mesh);\n        mesh.render(delta); // 更新子元素\n\n        if (mesh.children) {\n          mesh.children.forEach(function (item) {\n            _this3.renderMesh(item, delta, mesh.uniformData.modelView.value);\n          });\n        }\n      }\n    }\n  }, {\n    key: "makeNeedUniform",\n    value: function makeNeedUniform(item) {\n      item.uniformData.aspect = {\n        value: this.miniGL.viewport.ratio,\n        type: \'uniform1f\'\n      };\n      item.uniformData.pixelRatio = {\n        value: this.miniGL.viewport.pixelRatio,\n        type: \'uniform1f\'\n      };\n    }\n  }, {\n    key: "makeTransform",\n    value: function makeTransform(item, parentMatrix) {\n      if (parentMatrix) {\n        var modelView = mat3/* mul */.dC(mat3/* create */.Ue(), parentMatrix, item.matrix);\n        item.uniformData.modelView = {\n          value: modelView,\n          type: \'uniformMatrix3fv\'\n        };\n      } else {\n        item.uniformData.modelView = {\n          value: item.matrix,\n          type: \'uniformMatrix3fv\'\n        };\n      }\n\n      item.uniformData.transform = {\n        value: this.miniGL.viewport.transform,\n        type: \'uniformMatrix3fv\'\n      };\n    }\n  }]);\n\n  return Canvas;\n}();\n\n/* harmony default export */ const View_Canvas = (Canvas);\n;// CONCATENATED MODULE: ./src/Control/Controller.js\n\n\n\n\n\nvar Controller = /*#__PURE__*/function () {\n  function Controller(config) {\n    var _this = this;\n\n    (0,classCallCheck/* default */.Z)(this, Controller);\n\n    (0,defineProperty/* default */.Z)(this, "onMouseMove", function (e) {\n      var x = e.offsetX - _this.startXY.x + _this.startXY.startX;\n      var y = e.offsetY - _this.startXY.y + _this.startXY.startY;\n\n      _this.moveTo(x, y);\n    });\n\n    (0,defineProperty/* default */.Z)(this, "onMouseUp", function () {\n      var container = _this.miniGL.container;\n      container.removeEventListener(\'mousemove\', _this.onMouseMove);\n      container.removeEventListener(\'mouseup\', _this.onMouseUp);\n    });\n\n    this.miniGL = config.miniGL;\n    this.viewport = this.miniGL.viewport;\n    this.gl = this.miniGL.gl;\n    this.config = Object.assign({// 默认参数\n    }, config.config);\n\n    if (!config.disableController) {\n      this.addEvents();\n    }\n\n    this.matrix = mat3/* create */.Ue();\n  }\n\n  (0,createClass/* default */.Z)(Controller, [{\n    key: "addEvents",\n    value: function addEvents() {\n      var _this2 = this;\n\n      var container = this.miniGL.container;\n      container.addEventListener(\'mousedown\', function (e) {\n        if (e.ctrlKey) {\n          e.preventDefault();\n          return;\n        }\n\n        _this2.startXY = {\n          x: e.offsetX,\n          y: e.offsetY,\n          startX: _this2.viewport.translate[0],\n          startY: _this2.viewport.translate[1]\n        };\n\n        _this2.addMoveEvents();\n      });\n      container.addEventListener(\'wheel\', function (e) {\n        e.preventDefault();\n\n        _this2.zoom(e.deltaY > 0 ? 0.99 : 1.01, e.pageX, e.pageY);\n      });\n    }\n  }, {\n    key: "addMoveEvents",\n    value: function addMoveEvents() {\n      var container = this.miniGL.container;\n      container.addEventListener(\'mousemove\', this.onMouseMove);\n      container.addEventListener(\'mouseup\', this.onMouseUp);\n    }\n  }, {\n    key: "zoomTo",\n    value:\n    /**\n     * @param  {} scale\n     * @param  {} cx\n     * @param  {} cy\n     */\n    function zoomTo(scale, cx, cy) {\n      var changeScale = scale / this.viewport.scale;\n      this.zoom(changeScale, cx, cy);\n    }\n    /**\n     * @param  {} scale\n     * @param  {} cx\n     * @param  {} cy\n     */\n\n  }, {\n    key: "zoom",\n    value: function zoom(scale, cx, cy) {\n      // 求变换前的屏幕坐标\n      var canvasPos = [(cx - this.viewport.translate[0]) / this.viewport.scale, (cy - this.viewport.translate[1]) / this.viewport.scale];\n      var nextScale = scale * this.viewport.scale; // 求出变换后的偏移坐标\n\n      var x = cx - canvasPos[0] * nextScale;\n      var y = cy - canvasPos[1] * nextScale;\n      this.transform(nextScale, x, y);\n    } // 这个x,y是当前屏幕的x,y,变换后的\n\n    /**\n     * @param  {} x\n     * @param  {} y\n     */\n\n  }, {\n    key: "moveTo",\n    value: function moveTo(x, y) {\n      var scale = this.viewport.scale;\n      this.transform(scale, x, y);\n    }\n  }, {\n    key: "move",\n    value: function move(x, y) {\n      var scale = this.viewport.scale;\n      x = x + this.viewport.translate[0];\n      y = y + this.viewport.translate[1];\n      this.transform(scale, x, y);\n    }\n    /** 转换到指定情形，先放大后平移，然后注入到viewport.transform\n     * @param  {} scale\n     * @param  {} x\n     * @param  {} y\n     */\n\n  }, {\n    key: "transform",\n    value: function transform(scale, x, y) {\n      this.viewport.translate = [x, y];\n      this.viewport.scale = scale;\n      this.matrix = mat3/* create */.Ue();\n      mat3/* translate */.Iu(this.matrix, this.matrix, this.viewport.translate);\n      mat3/* scale */.bA(this.matrix, this.matrix, [scale, scale]);\n      mat3/* mul */.dC(this.viewport.transform, this.viewport.matrix, this.matrix);\n      console.log(this.viewport.transform);\n    }\n    /**\n     * @param  {} rad\n     * @param  {} cx=this.viewport.width/2\n     * @param  {} cy=this.viewport.height/2\n     */\n\n  }, {\n    key: "rotateTo",\n    value: function rotateTo(rad) {\n      var cx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.viewport.width / 2;\n      var cy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.viewport.height / 2;\n      var changeRad = rad - this.viewport.rotation || 0;\n      this.rotate(changeRad, cx, cy);\n    }\n  }, {\n    key: "rotate",\n    value: function rotate(rad) {\n      var cx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.viewport.width / 2;\n      var cy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.viewport.height / 2;\n      var transform = this.viewport.transform;\n      this.viewport.rotation += rad;\n      mat3/* translate */.Iu(transform, transform, [cx, cy]); // 再平移回去\n\n      mat3/* rotate */.U1(transform, transform, rad); // 再平移回去\n\n      mat3/* translate */.Iu(transform, transform, [-cx, -cy]); // 先平移到原点\n    }\n  }]);\n\n  return Controller;\n}();\n\n/* harmony default export */ const Control_Controller = (Controller);\n;// CONCATENATED MODULE: ./src/Shaders/flyline.js\n/* harmony default export */ const flyline = ({\n  // shader中进行坐标转换会不会快？CPU只会调用一次，GPU每帧都要重复去运算，2d情况下没有相机，\n  // 没有坐标因相机而变化的情况，所以不用再shader中运算，可以减少cpu的调用率\n  vertexShader: "\\n\\tprecision mediump float;\\n\\tattribute vec4 position;\\n\\tattribute float number;\\n\\tuniform vec4 startColor;\\n\\tuniform vec4 endColor;\\n\\tuniform float length;\\n\\tuniform float t;\\n\\tuniform float z;\\n\\tvarying vec4 vColor;\\n\\tvoid main()\\n\\t{\\n\\t\\tgl_Position = vec4(position.xy,z,1.);\\n\\t\\tvColor = endColor - (length + t - number)/length*(endColor - startColor);\\n\\t}\\n\\t",\n  fragmentShader: "\\n\\tprecision mediump float;\\n\\tvarying vec4 vColor;\\n\\tvoid main()\\n\\t{\\n\\t\\tif(vColor.w<=0.02){\\n\\t\\t\\tdiscard;\\n\\t\\t}\\n\\t\\tgl_FragColor = vColor;\\n\\t}\\n\\t"\n});\n;// CONCATENATED MODULE: ./src/Utils/vector.js\nfunction normalize(v) {\n  var length = Math.sqrt(v.x * v.x + v.y * v.y);\n  return {\n    x: v.x / length,\n    y: v.y / length\n  };\n}\n\nfunction addVector(v0, v1) {\n  return {\n    x: v0.x + v1.x,\n    y: v0.y + v1.y\n  };\n}\n\nfunction getVectorLength(v) {\n  var length = Math.sqrt(v.x * v.x + v.y * v.y);\n  return length;\n}\n\nfunction subVector(v0, v1) {\n  return {\n    x: v1.x - v0.x,\n    y: v1.y - v0.y\n  };\n}\n\nfunction multiple(v, t) {\n  return {\n    x: v.x * t,\n    y: v.y * t\n  };\n}\n\n\n;// CONCATENATED MODULE: ./src/Utils/BezierLine.js\n\n\n\n\nvar BezierLine = /*#__PURE__*/function () {\n  function BezierLine() {\n    (0,classCallCheck/* default */.Z)(this, BezierLine);\n  }\n\n  (0,createClass/* default */.Z)(BezierLine, [{\n    key: "setControl",\n    value: function setControl(v0, v1, v2, v3) {\n      this.v0 = v0;\n      this.v1 = v1;\n      this.v2 = v2;\n      this.v3 = v3;\n    }\n  }, {\n    key: "setData",\n    value: function setData(data) {\n      this.data = data;\n    }\n  }, {\n    key: "getPoint",\n    value: function getPoint(t) {\n      var v0 = this.v0,\n          v1 = this.v1,\n          v2 = this.v2,\n          v3 = this.v3;\n      return {\n        x: this.cubicBezier(t, v0.x, v1.x, v2.x, v3.x),\n        y: this.cubicBezier(t, v0.y, v1.y, v2.y, v3.y)\n      };\n    }\n  }, {\n    key: "cubicBezier",\n    value: function cubicBezier(t, p0, p1, p2, p3) {\n      return CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n    }\n  }, {\n    key: "getSpacedPoints",\n    value: function getSpacedPoints(n) {\n      var points = [];\n      this.lengths = this.getLengths(n); // 缓存起来\n\n      for (var i = 0; i <= n; i++) {\n        var t = this.getUtoTmapping(i / n);\n        points.push(this.getPoint(t));\n      }\n\n      return points;\n    }\n  }, {\n    key: "getLengths",\n    value: function getLengths() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n      var length = 0;\n      var lengths = [0];\n\n      for (var i = 1; i <= n; i++) {\n        var current = this.getPoint(i / n);\n        var last = this.getPoint((i - 1) / n);\n        length += getVectorLength(subVector(last, current));\n        lengths.push(length);\n      }\n\n      return lengths;\n    }\n  }, {\n    key: "getLength",\n    value: function getLength(n) {\n      var lengths = this.getLengths(n);\n      return lengths[lengths.length - 1];\n    } // 根据总长度算出一定比例的长度所对应的t值，\n    // 这个等距划分的算法不知道为何在贝塞尔中间的部分间距过大不再等距，有空再看下吧\n\n  }, {\n    key: "getUtoTmapping",\n    value: function getUtoTmapping(u) {\n      var lengths = this.lengths;\n      var length = lengths[lengths.length - 1];\n      var targetLength = u * length;\n      var nextIndex;\n      var nowIndex = 0;\n      lengths.find(function (item, index) {\n        if (item >= targetLength) {\n          nextIndex = index;\n          return true;\n        } else {\n          nowIndex = index;\n          return false;\n        }\n      });\n      var restRatio = u === 0 ? 0 : (targetLength - lengths[nowIndex]) / (lengths[nextIndex] - lengths[nowIndex]);\n      var t = (nowIndex + Math.max(restRatio, 0)) / (this.lengths.length - 1);\n      return t;\n    }\n  }]);\n\n  return BezierLine;\n}();\n\nfunction CubicBezierP0(t, p) {\n  var k = 1 - t;\n  return k * k * k * p;\n}\n\nfunction CubicBezierP1(t, p) {\n  var k = 1 - t;\n  return 3 * k * k * t * p;\n}\n\nfunction CubicBezierP2(t, p) {\n  return 3 * (1 - t) * t * t * p;\n}\n\nfunction CubicBezierP3(t, p) {\n  return t * t * t * p;\n}\n\n/* harmony default export */ const Utils_BezierLine = (BezierLine);\n;// CONCATENATED MODULE: ./src/Mesh/FlyLine.js\n\n\n\n\n\n\n\n\nfunction FlyLine_createSuper(Derived) { var hasNativeReflectConstruct = FlyLine_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction FlyLine_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\nvar FlyLine_Line = /*#__PURE__*/function (_Base) {\n  (0,inherits/* default */.Z)(Line, _Base);\n\n  var _super = FlyLine_createSuper(Line);\n\n  function Line(config) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, Line);\n\n    config = Object.assign({\n      z: 0.1,\n      length: 50,\n      lineHeight: 0.2,\n      speed: 1,\n      smoothNumber: 1\n    }, config);\n    _this = _super.call(this, config);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "drawType", \'LINE_STRIP\');\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "shaders", {\n      vertex: flyline.vertexShader,\n      fragment: flyline.fragmentShader\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "offset", 0);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "depthMask", false);\n\n    _this.init(config);\n\n    _this.bezierLine = new Utils_BezierLine();\n    _this.uniformData = {\n      t: {\n        value: 0,\n        type: \'uniform1f\'\n      },\n      length: {\n        value: config.length,\n        type: \'uniform1f\'\n      },\n      startColor: {\n        value: config.startColor || [1, 0, 0, 0],\n        type: \'uniform4fv\'\n      },\n      endColor: {\n        value: config.endColor || [1, 0, 0, 1],\n        type: \'uniform4fv\'\n      },\n      z: {\n        value: _this.config.z,\n        type: \'uniform1f\'\n      }\n    };\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(Line, [{\n    key: "setData",\n    value: function setData(data) {\n      var viewport = this.miniGL.viewport;\n      this.data = data;\n      this.data.startXY = viewport.convertScreenToClip(data.start.x, data.start.y);\n      this.data.endXY = viewport.convertScreenToClip(data.end.x, data.end.y);\n      var midPoint = {\n        x: this.data.start.x / 2 + this.data.end.x / 2,\n        y: this.data.start.y / 2 + this.data.end.y / 2\n      };\n      var end_start = {\n        x: this.data.end.x - this.data.start.x,\n        y: this.data.end.y - this.data.start.y\n      };\n      var normal = {\n        x: end_start.y,\n        y: -end_start.x\n      };\n\n      if (end_start.x < 0) {\n        normal = {\n          x: -end_start.y,\n          y: end_start.x\n        };\n      }\n\n      var length = getVectorLength(subVector(data.end, data.start));\n      var lineHeight = this.config.lineHeight * length;\n      var controlPoint = addVector(multiple(normalize(normal), lineHeight), midPoint);\n      this.bezierLine.setControl(this.data.start, this.data.start, controlPoint, this.data.end);\n      var allPoints = this.bezierLine.getSpacedPoints(length * this.config.smoothNumber);\n      var points = [];\n      var numbers = [];\n      allPoints.forEach(function (item, index) {\n        // 最后再近些坐标转换，避免因为画布缩放导致长度计算失准\n        var point = viewport.convertScreenToClip(item.x, item.y);\n        points.push(point.x, point.y);\n        numbers.push(index);\n      });\n      this.vertex = points; // this.pointsBufferLength = points.length*Float32Array.BYTES_PER_ELEMENT;\n\n      this.setBufferData(points, \'position\', 2);\n      this.setBufferData(numbers, \'number\', 1);\n    }\n  }, {\n    key: "start",\n    value: function start() {\n      this.startFlag = true;\n    }\n  }, {\n    key: "pause",\n    value: function pause() {\n      this.startFlag = false;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      // 2D 只需要两个坐标轴标识位置\n      var normalize = false;\n      var length = this.vertex.length / 2;\n      var _this$uniformData = this.uniformData,\n          uniformData = _this$uniformData === void 0 ? {} : _this$uniformData,\n          config = this.config;\n      if (!this.startFlag) return;\n      uniformData.t.value += this.config.speed;\n\n      if (uniformData.t.value >= length) {\n        uniformData.t.value = -this.config.length;\n      } // 分别绑定数据到shader程序中\n\n\n      for (var key in this.buffers) {\n        var bufferData = this.buffers[key];\n        var bufferPosition = this.getAttribLocation(key); // 分别绑定数据到shader程序中\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData);\n        this.gl.vertexAttribPointer(bufferPosition, this.buffersSize[key], this.gl.FLOAT, normalize, 0, 0);\n        this.gl.enableVertexAttribArray(bufferPosition);\n      } // 加载shader程序\n\n\n      this.gl.useProgram(this.shaderProgram);\n      this.setUniformData(); // 渲染\n\n      if (this.vertex.length) {\n        // specifying the starting index in the array of vector points.\n        // specifying the number of indices to be rendered.\n        var offset = Math.max(uniformData.t.value, 0); // 起步时要算出真实的减掉负数的size，到达时，不能超过整个数组长度\n\n        var size = Math.min(uniformData.t.value + config.length - offset, length - offset);\n        if (size === 0) return;\n        this.gl.drawArrays(this.gl[this.drawType], offset, size);\n      }\n    }\n  }]);\n\n  return Line;\n}(Mesh_Base/* default */.Z);\n\n/* harmony default export */ const FlyLine = (FlyLine_Line);\n;// CONCATENATED MODULE: ./src/Shaders/image.js\n/* harmony default export */ const Shaders_image = ({\n  vertexShader: "\\n\\tprecision highp float;\\n\\tattribute vec2 position;\\n\\tattribute vec2 uv;\\n\\tvarying vec4 vColor;\\n\\tvarying vec2 vUv;\\n    uniform mat3 transform;\\n    uniform mat3 modelView;\\n    uniform float z;\\n\\tvoid main()\\n\\t{\\n        vUv = uv;\\n\\t\\tvec3 mPosition = transform * modelView * vec3(position,1.0);\\n\\t\\tgl_Position = vec4(mPosition.xy,z,1.0);\\n\\t}\\n\\t",\n  fragmentShader: "\\n\\tprecision highp float;\\n    varying vec2 vUv;\\n    uniform vec4 alphaColor;\\n\\tuniform sampler2D u_Sampler;\\n\\tvoid main()\\n\\t{\\n        gl_FragColor = texture2D(u_Sampler,vUv)*alphaColor;\\n\\t}\\n\\t"\n});\n// EXTERNAL MODULE: ./src/Utils/LoadTexture.js\nvar LoadTexture = __webpack_require__(816);\n;// CONCATENATED MODULE: ./src/Mesh/Image.js\n\n\n\n\n\n\n\n\nfunction Image_createSuper(Derived) { var hasNativeReflectConstruct = Image_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction Image_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar Image = /*#__PURE__*/function (_Base) {\n  (0,inherits/* default */.Z)(Image, _Base);\n\n  var _super = Image_createSuper(Image);\n\n  // array.BYTES_PER_ELEMENT * indicesEachLength\n  function Image() {\n    var _this;\n\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    (0,classCallCheck/* default */.Z)(this, Image);\n\n    _this = _super.call(this, config);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "drawType", \'TRIANGLES\');\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "offset", 0);\n\n    _this.shaders = {\n      vertex: Shaders_image.vertexShader,\n      fragment: Shaders_image.fragmentShader\n    };\n    _this.uniformData = {\n      z: {\n        value: config.z || 1,\n        type: \'uniform1f\'\n      },\n      alphaColor: {\n        value: config.alphaColor || [1, 1, 1, 1],\n        type: \'uniform4fv\'\n      }\n    };\n\n    _this.init(config);\n\n    _this.vSize = 2;\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(Image, [{\n    key: "setMap",\n    value: function setMap(imagePath) {\n      var _this2 = this;\n\n      (0,LoadTexture/* default */.Z)(this.gl, imagePath).then(function (texture) {\n        _this2.setTexture(texture);\n      });\n    }\n  }, {\n    key: "setData",\n    value: function setData(data) {\n      if (!this.miniGL) {\n        throw new Error(\'请先将组件通过miniGL.canvas.add()加入实例中\');\n      } // 释放内存空间\n\n\n      this.dispose();\n      this.data = data;\n      var width = data.width,\n          height = data.height,\n          src = data.src,\n          texture = data.texture,\n          _data$x = data.x,\n          x = _data$x === void 0 ? 0 : _data$x,\n          _data$y = data.y,\n          y = _data$y === void 0 ? 0 : _data$y; // 设置纹理\n\n      if (src) {\n        this.setMap(src);\n      }\n\n      if (texture) {\n        this.setTexture(texture);\n      } // 计算uv\n\n\n      var points = [x, y, x, y + height, x + width, y, x + width, y + height];\n      var indices = [0, 1, 2, 2, 1, 3];\n      var uv = [0, 0, 0, 1, 1, 0, 1, 1];\n      this.vertex = points;\n      this.setBufferData(points, \'position\', 2);\n      this.setBufferData(uv, \'uv\', 2);\n      this.setIndices(indices);\n      this.uniformsNeedUpdate = true;\n    } // 设置纹理数据\n\n  }, {\n    key: "setTexture",\n    value: function setTexture(texture) {\n      var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'u_Sampler\';\n      this.uniformData[key] = {\n        type: \'uniform1i\',\n        // image\n        value: 0,\n        // 0号纹理传递\n        texture: texture.webglTexture ? texture.webglTexture : texture\n      };\n      this.texture = texture;\n      this.uniformsNeedUpdate = true;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      // 2D 只需要两个坐标轴标识位置\n      var offset = 0; // 从数据第几位开始偏移\n\n      var normalize = false;\n      var gl = this.gl; // 图片加载完了再说\n\n      if (!this.uniformData || !this.uniformData[\'u_Sampler\']) {\n        return;\n      } // 分别绑定数据到shader程序中\n\n\n      for (var key in this.buffers) {\n        var bufferData = this.buffers[key];\n        var bufferPosition = this.getAttribLocation(key); // 分别绑定数据到shader程序中\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, bufferData);\n        gl.vertexAttribPointer(bufferPosition, this.buffersSize[key], gl.FLOAT, normalize, 0, offset);\n        gl.enableVertexAttribArray(bufferPosition);\n      } // 使用顶点数据\n\n\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesPointer); // 加载shader程序\n\n      gl.useProgram(this.shaderProgram);\n      this.setUniformData(); // offset必须乘以类型数组的长度，意味着要从内存中数据的对应字节数开始算 根据类型乘对应的BYTES_PER_ELEMENT\n      // 渲染\n\n      if (this.indices.length) {\n        gl.drawElements(gl[this.drawType], this.indices.length, gl.UNSIGNED_SHORT, this.offset);\n      }\n    }\n  }]);\n\n  return Image;\n}(Mesh_Base/* default */.Z);\n\n/* harmony default export */ const Mesh_Image = (Image);\n;// CONCATENATED MODULE: ./src/Shaders/roundLine.js\n/* harmony default export */ const roundLine = ({\n  // 先求连接线然后再求垂线\n  // 求出等比放大的值\n  vertexShader: "\\n\\tprecision lowp float;\\n\\tattribute vec2 now;\\n\\tattribute vec2 pre;\\n\\tattribute vec2 next;\\n\\tattribute float side;\\n\\tattribute float status;\\n\\tuniform float width;\\n\\tuniform float aspect;\\n\\tuniform mat3 transform;\\n\\tuniform float offset;\\n\\tvarying float vSide;\\n\\tvoid main()\\n\\t{\\n\\t\\tvSide = side;\\n\\t\\t\\n\\t\\t// \\u5148\\u8F6C\\u6362\\u5750\\u6807\\u7CFB\\n\\t\\tvec2 mNow = (transform*vec3(now,1.)).xy;\\n\\t\\tvec2 mNext = (transform*vec3(next,1.)).xy;\\n\\t\\tvec2 mPre = (transform*vec3(pre,1.)).xy;\\n\\t\\tvec2 _now = vec2(mNow);\\n\\t\\tvec2 _next = vec2(mNext);\\n\\t\\tvec2 _pre =  vec2(mPre);\\n\\t\\n\\t\\t// \\u5148\\u628A\\u672C\\u5750\\u6807\\u7CFB\\u7684\\u5750\\u6807\\u653E\\u5927\\uFF0C\\u548C\\u771F\\u5B9E\\u7684\\u5916\\u754C\\u5750\\u6807\\u4E00\\u6837,\\u8FD9\\u6837\\u6C42\\u51FA\\u6765\\u7684\\u76F8\\u5BF9\\u5411\\u91CF\\u662F\\u51C6\\u786E\\u7684\\uFF0C\\u5982\\u679C\\u5728\\u540E\\u9762\\u4E4B\\u95F4\\u5BF9normal\\u8FDB\\u884C\\u53D8\\u5316\\uFF0C\\u5C31\\u4F1A\\u5F97\\u51FA\\u9519\\u8BEF\\u7684\\u7ED3\\u679C\\n\\t\\t_now.x *= aspect;\\n\\t\\t_next.x *= aspect;\\n\\t\\t_pre.x *= aspect;\\n\\t\\t\\n\\t\\tvec2 _dir = normalize(status*_now - status*_pre + (1.0-status)*_next - (1.0-status)*_now);\\n\\n\\t\\tvec2 normal = vec2( -_dir.y , _dir.x );\\n\\t\\tvec2 dir = normal * width * .5 * side;\\n\\n\\t\\t// \\u504F\\u79FB\\u91CF\\n\\t\\tif(offset!=0.){\\n\\t\\t\\tvec2 point21 = normalize(_next - _now);\\n\\t\\t\\tvec2 point10 = normalize(_now - _pre);\\n\\t\\t\\tvec2 offsetDir = normalize( point21 + point10);\\n\\t\\t\\tvec2 offsetNormal = vec2( -offsetDir.y, offsetDir.x);\\n\\t\\t\\tfloat ratio = sqrt(1.0 - pow(dot(offsetNormal,point10),2.0));\\n\\t\\t\\tvec2 offsets =  offsetNormal * offset/ratio  ;\\n\\t\\t\\tdir += offsets;\\n\\t\\t}\\n\\n\\t\\t// \\u5F97\\u51FA\\u7684x\\u5750\\u6807\\u4F1A\\u88AB\\u653E\\u5927\\uFF0C\\u8FD9\\u91CC\\u8981\\u9664\\u6389,\\u8BB0\\u5F97\\u8981\\u7528\\u8F6C\\u6362\\u540E\\u5750\\u6807\\u8FDB\\u884C\\u52A0\\u51CF\\n\\t\\tgl_Position = vec4(mNow.x + dir.x/aspect,mNow.y+dir.y , 1., 1.);\\n\\t}\\n\\t",\n  fragmentShader: "\\n\\tprecision lowp float;\\n\\tuniform vec4 color;\\n\\tvarying float vSide;\\n\\tvoid main()\\n\\t{\\n\\t\\tfloat smoothSideRatio = max(0.1,smoothstep(0.,0.3,(1. - abs(vSide))));\\n\\t\\tgl_FragColor = color;\\n\\t\\tgl_FragColor.w *= smoothSideRatio;\\n\\t}\\n\\t"\n});\n;// CONCATENATED MODULE: ./src/Mesh/RoundLine/Line.js\n\n\n\n\n\n\n\n\nfunction Line_createSuper(Derived) { var hasNativeReflectConstruct = Line_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction Line_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar RoundLine = /*#__PURE__*/function (_Base) {\n  (0,inherits/* default */.Z)(RoundLine, _Base);\n\n  var _super = Line_createSuper(RoundLine);\n\n  //"TRIANGLE_STRIP";\n  function RoundLine(config) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, RoundLine);\n\n    _this = _super.call(this);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "drawType", "TRIANGLES");\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "shaders", {\n      vertex: roundLine.vertexShader,\n      fragment: roundLine.fragmentShader\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "offset", 0);\n\n    config = Object.assign({\n      width: 20,\n      z: 1,\n      offset: 0\n    }, config);\n    _this.uniformData = {\n      z: {\n        value: config.z || 1,\n        type: "uniform1f"\n      }\n    };\n\n    _this.init(config);\n\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(RoundLine, [{\n    key: "setData",\n    value: function setData(data) {\n      var viewport = this.miniGL.viewport;\n      if (!data.length && data.length < 2) return console.warn("need input data.length >= 2");\n      this.uniformData.transform = {\n        value: viewport.transform,\n        type: "uniformMatrix3fv"\n      };\n      this.uniformData.aspect = {\n        value: viewport.ratio,\n        type: "uniform1f"\n      };\n      this.uniformData.color = {\n        value: this.config.color || [1, 0, 1, 1],\n        type: "uniform4fv"\n      };\n      this.uniformData.width = {\n        value: 2 * this.config.width / this.miniGL.viewport.height,\n        type: "uniform1f"\n      };\n      this.uniformData.offset = {\n        value: 2 * this.config.offset / this.miniGL.viewport.height,\n        type: "uniform1f"\n      };\n      this.data = data;\n      var points = [];\n      data.forEach(function (item) {\n        points.push(item.position.x, item.position.y);\n      }); // 生产双倍点for两个边\n\n      var res = this.calcSidePoints(data);\n      this.setBufferData(res.nowData, "now", 2);\n      this.setBufferData(res.preData, "pre", 2);\n      this.setBufferData(res.nextData, "next", 2);\n      this.setBufferData(res.side, "side", 1);\n      this.setBufferData(res.status, "status", 1); // 生成顶点\n\n      var indices = [];\n\n      for (var j = 0; j < data.length - 1; j++) {\n        var n = j * 4;\n        indices.push(n, n + 1, n + 2, n + 2, n + 1, n + 3);\n      }\n\n      this.setIndices(indices);\n      this.res = res;\n    }\n  }, {\n    key: "calcSidePoints",\n    value: function calcSidePoints() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var length = data.length;\n      var side = [];\n      var nextData = [];\n      var preData = [];\n      var nowData = [];\n      var status = []; // 生产双倍点for两个边\n\n      for (var i = 0; i < length - 1; i++) {\n        var point1 = data[i].position;\n        var point0 = data[i - 1] ? data[i - 1].position : {\n          x: 2 * data[i].position.x - data[i + 1].position.x,\n          y: 2 * data[i].position.y - data[i + 1].position.y\n        };\n        var point2 = data[i + 1] ? data[i + 1].position : {\n          x: 2 * data[i].position.x - data[i - 1].position.x,\n          y: 2 * data[i].position.y - data[i - 1].position.y\n        };\n        side.push(1, -1);\n        preData.push(point0.x, point0.y, point0.x, point0.y);\n        nowData.push(point1.x, point1.y, point1.x, point1.y);\n        nextData.push(point2.x, point2.y, point2.x, point2.y);\n        var j = i + 1;\n        point1 = data[j].position;\n        point0 = data[j - 1] ? data[j - 1].position : {\n          x: 2 * data[j].position.x - data[j + 1].position.x,\n          y: 2 * data[j].position.y - data[j + 1].position.y\n        };\n        point2 = data[j + 1] ? data[j + 1].position : {\n          x: 2 * data[j].position.x - data[j - 1].position.x,\n          y: 2 * data[j].position.y - data[j - 1].position.y\n        };\n        side.push(1, -1);\n        preData.push(point0.x, point0.y, point0.x, point0.y);\n        nowData.push(point1.x, point1.y, point1.x, point1.y);\n        nextData.push(point2.x, point2.y, point2.x, point2.y);\n        status.push(0, 0, 1, 1);\n      }\n\n      return {\n        preData: preData,\n        nowData: nowData,\n        nextData: nextData,\n        side: side,\n        status: status\n      };\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      // 2D 只需要两个坐标轴标识位置\n      var offset = 0; // 从数据第几位开始偏移\n\n      var normalize = false;\n\n      for (var key in this.buffers) {\n        var bufferData = this.buffers[key];\n        var bufferPosition = this.getAttribLocation(key); // 分别绑定数据到shader程序中\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData);\n        this.gl.vertexAttribPointer(bufferPosition, this.buffersSize[key], this.gl.FLOAT, normalize, 0, offset); //todo:webgl2.0 实例数组能减少同样形状但渲染不同的高性能方案\n\n        this.gl.enableVertexAttribArray(bufferPosition);\n      } // 使用顶点数据\n\n\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indicesPointer); // 加载shader程序\n\n      this.gl.useProgram(this.shaderProgram);\n      this.setUniformData(); // 渲染\n\n      if (this.indices.length) {\n        this.gl.drawElements(this.gl[this.drawType], this.indices.length, this.gl.UNSIGNED_SHORT, this.offset);\n      }\n    }\n  }]);\n\n  return RoundLine;\n}(Mesh_Base/* default */.Z);\n\n/* harmony default export */ const RoundLine_Line = (RoundLine);\n;// CONCATENATED MODULE: ./src/Shaders/roundLinePoint.js\n/* harmony default export */ const roundLinePoint = ({\n  // 先求连接线然后再求垂线\n  // 求出等比放大的值\n  vertexShader: "\\n\\tprecision highp float;\\n\\tattribute vec2 now;\\n\\tattribute vec2 pre;\\n\\tattribute vec2 next;\\n\\tuniform float width;\\n\\tuniform float aspect;\\n\\tuniform float z;\\n\\tuniform mat3 transform;\\n\\tuniform float offset;\\n\\tvoid main()\\n\\t{\\n\\t\\t// \\u5148\\u8F6C\\u6362\\u5750\\u6807\\u7CFB\\n\\t\\tvec2 mNow = (transform*vec3(now,1.)).xy;\\n\\t\\tvec2 mNext = (transform*vec3(next,1.)).xy;\\n\\t\\tvec2 mPre = (transform*vec3(pre,1.)).xy;\\n\\t\\tvec2 _now = vec2(mNow);\\n\\t\\tvec2 _next = vec2(mNext);\\n\\t\\tvec2 _pre =  vec2(mPre);\\n\\t\\n\\t\\t// \\u5148\\u628A\\u672C\\u5750\\u6807\\u7CFB\\u7684\\u5750\\u6807\\u653E\\u5927\\uFF0C\\u548C\\u771F\\u5B9E\\u7684\\u5916\\u754C\\u5750\\u6807\\u4E00\\u6837,\\u8FD9\\u6837\\u6C42\\u51FA\\u6765\\u7684\\u76F8\\u5BF9\\u5411\\u91CF\\u662F\\u51C6\\u786E\\u7684\\uFF0C\\u5982\\u679C\\u5728\\u540E\\u9762\\u4E4B\\u95F4\\u5BF9normal\\u8FDB\\u884C\\u53D8\\u5316\\uFF0C\\u5C31\\u4F1A\\u5F97\\u51FA\\u9519\\u8BEF\\u7684\\u7ED3\\u679C\\n\\t\\t_now.x *= aspect;\\n\\t\\t_next.x *= aspect;\\n\\t\\t_pre.x *= aspect;\\n\\t\\t\\n\\t\\t// \\u504F\\u79FB\\n\\t\\tif(offset!=0.){\\n\\t\\t\\tvec2 point21 = normalize(_next - _now);\\n\\t\\t\\tvec2 point10 = normalize(_now - _pre);\\n\\t\\t\\tvec2 offsetDir = normalize( point21 + point10);\\n\\t\\t\\tvec2 offsetNormal = vec2( -offsetDir.y, offsetDir.x);\\n\\t\\t\\tfloat ratio = sqrt(1.0 - pow(dot(offsetNormal,point10),2.0));\\n\\t\\t\\tvec2 offsets =  offsetNormal * offset/ratio ;\\n\\t\\t\\toffsets.x /= aspect;\\n\\t\\t\\tmNow += offsets;\\n\\t\\t}\\n\\n\\t\\t// \\u5F97\\u51FA\\u7684x\\u5750\\u6807\\u4F1A\\u88AB\\u653E\\u5927\\uFF0C\\u8FD9\\u91CC\\u8981\\u9664\\u6389,\\u8BB0\\u5F97\\u8981\\u7528\\u8F6C\\u6362\\u540E\\u5750\\u6807\\u8FDB\\u884C\\u52A0\\u51CF\\n\\t\\tgl_PointSize = width;\\n\\n\\t\\tgl_Position = vec4(mNow.x,mNow.y , z, 1.);\\n\\t}\\n\\t",\n  fragmentShader: "\\n\\tprecision highp float;\\n\\tuniform vec4 color;\\n\\tvoid main()\\n\\t{\\n\\t\\tfloat l = length(gl_PointCoord - vec2(0.5,0.5));\\n\\t\\t\\n\\t\\tfloat smoothSideRatio = smoothstep(0.,0.3,(0.5-l));\\n\\t\\tgl_FragColor = color;\\n\\t\\tgl_FragColor.w *= smoothSideRatio;\\n\\t}\\n\\t"\n});\n;// CONCATENATED MODULE: ./src/Mesh/RoundLine/LinePoint.js\n\n\n\n\n\n\n\n\nfunction LinePoint_createSuper(Derived) { var hasNativeReflectConstruct = LinePoint_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction LinePoint_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar LinePoint = /*#__PURE__*/function (_Base) {\n  (0,inherits/* default */.Z)(LinePoint, _Base);\n\n  var _super = LinePoint_createSuper(LinePoint);\n\n  //"TRIANGLE_STRIP";\n  function LinePoint(config) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, LinePoint);\n\n    _this = _super.call(this);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "drawType", "POINTS");\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "shaders", {\n      vertex: roundLinePoint.vertexShader,\n      fragment: roundLinePoint.fragmentShader\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "offset", 0);\n\n    config = Object.assign({\n      width: 20,\n      z: 1,\n      offset: 0\n    }, config);\n    _this.uniformData = {\n      z: {\n        value: config.z || 1,\n        type: "uniform1f"\n      }\n    };\n\n    _this.init(config);\n\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(LinePoint, [{\n    key: "setData",\n    value: function setData(res) {\n      var viewport = this.miniGL.viewport;\n      this.uniformData.transform = {\n        value: viewport.transform,\n        type: "uniformMatrix3fv"\n      };\n      this.uniformData.aspect = {\n        value: viewport.ratio,\n        type: "uniform1f"\n      };\n      this.uniformData.color = {\n        value: this.config.color || [1, 0, 1, 1],\n        type: "uniform4fv"\n      };\n      this.uniformData.width = {\n        value: this.config.width,\n        type: "uniform1f"\n      };\n      this.uniformData.offset = {\n        value: 2 * this.config.offset / this.miniGL.viewport.height,\n        type: "uniform1f"\n      }; // 生产双倍点for两个边\n\n      this.vertex = res.nowData;\n      this.setBufferData(res.nowData, "now", 2);\n      this.setBufferData(res.preData, "pre", 2);\n      this.setBufferData(res.nextData, "next", 2);\n    }\n  }]);\n\n  return LinePoint;\n}(Mesh_Base/* default */.Z);\n\n/* harmony default export */ const RoundLine_LinePoint = (LinePoint);\n;// CONCATENATED MODULE: ./src/Mesh/RoundLine/index.js\n\n\n\n\n\n\nvar RoundLine_RoundLine = /*#__PURE__*/function () {\n  function RoundLine(config) {\n    (0,classCallCheck/* default */.Z)(this, RoundLine);\n\n    (0,defineProperty/* default */.Z)(this, "depthMask", true);\n\n    (0,defineProperty/* default */.Z)(this, "depthTest", true);\n\n    (0,defineProperty/* default */.Z)(this, "transparent", true);\n\n    this.line = new RoundLine_Line(config);\n    this.linePoint = new RoundLine_LinePoint(config);\n  }\n\n  (0,createClass/* default */.Z)(RoundLine, [{\n    key: "onAdd",\n    value: function onAdd() {\n      var _this$line, _this$linePoint;\n\n      (_this$line = this.line).onAdd.apply(_this$line, arguments);\n\n      (_this$linePoint = this.linePoint).onAdd.apply(_this$linePoint, arguments);\n    }\n  }, {\n    key: "setData",\n    value: function setData() {\n      var _this$line2;\n\n      (_this$line2 = this.line).setData.apply(_this$line2, arguments);\n\n      this.linePoint.setData(this.line.res);\n    }\n  }, {\n    key: "dispose",\n    value: function dispose() {\n      var _this$line3, _this$linePoint2;\n\n      (_this$line3 = this.line).dispose.apply(_this$line3, arguments);\n\n      (_this$linePoint2 = this.linePoint).dispose.apply(_this$linePoint2, arguments);\n    }\n  }, {\n    key: "destroy",\n    value: function destroy() {\n      var _this$line4, _this$linePoint3;\n\n      (_this$line4 = this.line).destroy.apply(_this$line4, arguments);\n\n      (_this$linePoint3 = this.linePoint).destroy.apply(_this$linePoint3, arguments);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$linePoint4, _this$line5;\n\n      (_this$linePoint4 = this.linePoint).render.apply(_this$linePoint4, arguments);\n\n      (_this$line5 = this.line).render.apply(_this$line5, arguments);\n    }\n  }]);\n\n  return RoundLine;\n}();\n\n/* harmony default export */ const Mesh_RoundLine = (RoundLine_RoundLine);\n;// CONCATENATED MODULE: ./src/Group/Group.js\n\n\n\n\n\n\n\n\nfunction Group_createSuper(Derived) { var hasNativeReflectConstruct = Group_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction Group_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n/**\n * 进行批量渲染\n * @class\n */\n\nvar Group = /*#__PURE__*/function (_Base) {\n  (0,inherits/* default */.Z)(Group, _Base);\n\n  var _super = Group_createSuper(Group);\n\n  function Group(config) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, Group);\n\n    _this = _super.call(this);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "depthMask", true);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "depthTest", true);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "transparent", true);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "children", []);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "childId", -1);\n\n    _this.children = [];\n\n    _this.init(config);\n\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(Group, [{\n    key: "dispose",\n    value: function dispose() {\n      Mesh_Base/* default.dispose.call */.Z.dispose.call(this);\n      this.children.forEach(function (item, index) {\n        item.destroy && item.destroy();\n      });\n    }\n  }, {\n    key: "onAdd",\n    value: function onAdd(miniGL) {\n      this.miniGL = miniGL; // 获取顶点数据内存里的指针\n\n      this.gl = miniGL.gl;\n      this.indicesPointer = this.gl.createBuffer();\n      this.children.forEach(function (each) {\n        if (!each.miniGL) {\n          each.onAdd(miniGL);\n        }\n      });\n    }\n  }, {\n    key: "addChild",\n    value: function addChild(child) {\n      this.childId++;\n      child.childId = this.childId;\n      child.parent = this;\n      this.children.push(child);\n      child.zOrder = this.children.length - 1;\n\n      if (this.miniGL) {\n        child.onAdd(this.miniGL);\n      }\n    }\n  }, {\n    key: "addChildAt",\n    value: function addChildAt(child, index) {\n      child.childId = this.childId++;\n      child.parent = this;\n\n      if (this.miniGL) {\n        child.onAdd(this.miniGL);\n      }\n\n      this.children.splice(index, 0, child);\n      child.zOrder = index + 1;\n    }\n  }, {\n    key: "removeChild",\n    value: function removeChild(child) {\n      var pos = this.children.indexOf(child);\n\n      if (!pos <= -1) {\n        return;\n      }\n\n      this.children[pos].parent = undefined;\n      this.children.splice(pos, 1);\n    }\n  }, {\n    key: "swapChildren",\n    value: function swapChildren(a, b) {\n      var _this2 = this;\n\n      this.children.forEach(function (item, index) {\n        if (item === a) {\n          _this2.children[index] = b;\n          _this2.children[index].zOrder = index;\n        }\n\n        if (item === b) {\n          _this2.children[index] = a;\n          _this2.children[index].zOrder = index;\n        }\n      });\n    }\n  }]);\n\n  return Group;\n}(Mesh_Base/* default */.Z);\n\n/* harmony default export */ const Group_Group = (Group);\n;// CONCATENATED MODULE: ./src/dragonBones/Enum.js\nvar BlendMode = {\n  Normal: 0,\n  Add: 1,\n  Alpha: 2,\n  Darken: 3,\n  Difference: 4,\n  Erase: 5,\n  HardLight: 6,\n  Invert: 7,\n  Layer: 8,\n  Lighten: 9,\n  Multiply: 10,\n  Overlay: 11,\n  Screen: 12,\n  Subtract: 13\n};\nvar BoneType = {\n  Bone: 0,\n  Surface: 1\n};\nvar BinaryOffset = {\n  WeigthBoneCount: 0,\n  WeigthFloatOffset: 1,\n  WeigthBoneIndices: 2,\n  GeometryVertexCount: 0,\n  GeometryTriangleCount: 1,\n  GeometryFloatOffset: 2,\n  GeometryWeightOffset: 3,\n  GeometryVertexIndices: 4,\n  TimelineScale: 0,\n  TimelineOffset: 1,\n  TimelineKeyFrameCount: 2,\n  TimelineFrameValueCount: 3,\n  TimelineFrameValueOffset: 4,\n  TimelineFrameOffset: 5,\n  FramePosition: 0,\n  FrameTweenType: 1,\n  FrameTweenEasingOrCurveSampleCount: 2,\n  FrameCurveSamples: 3,\n  DeformVertexOffset: 0,\n  DeformCount: 1,\n  DeformValueCount: 2,\n  DeformValueOffset: 3,\n  DeformFloatOffset: 4\n};\n\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/superPropBase.js\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = (0,getPrototypeOf/* default */.Z)(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/get.js\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== "undefined" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n// EXTERNAL MODULE: ./src/Texture/Texture.js\nvar Texture = __webpack_require__(776);\n;// CONCATENATED MODULE: ./src/dragonBones/MiniGLTextureAtlasData.js\n\n\n\n\n\n\n\n\n\nfunction MiniGLTextureAtlasData_createSuper(Derived) { var hasNativeReflectConstruct = MiniGLTextureAtlasData_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction MiniGLTextureAtlasData_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _ref = window.dragonBones || {},\n    _ref$TextureData = _ref.TextureData,\n    TextureData = _ref$TextureData === void 0 ? null : _ref$TextureData,\n    _ref$BaseObject = _ref.BaseObject,\n    BaseObject = _ref$BaseObject === void 0 ? null : _ref$BaseObject,\n    _ref$TextureAtlasData = _ref.TextureAtlasData,\n    TextureAtlasData = _ref$TextureAtlasData === void 0 ? null : _ref$TextureAtlasData;\n\n\n\nvar MiniGLTextureAtlasData = /*#__PURE__*/function (_TextureAtlasData) {\n  (0,inherits/* default */.Z)(MiniGLTextureAtlasData, _TextureAtlasData);\n\n  var _super = MiniGLTextureAtlasData_createSuper(MiniGLTextureAtlasData);\n\n  function MiniGLTextureAtlasData() {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, MiniGLTextureAtlasData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "scale", 1);\n\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(MiniGLTextureAtlasData, [{\n    key: "_onClear",\n    value: function _onClear() {\n      _get((0,getPrototypeOf/* default */.Z)(MiniGLTextureAtlasData.prototype), "_onClear", this).call(this);\n\n      if (this.disposeEnabled && this._renderTexture !== null) {\n        this._renderTexture.dispose();\n      }\n\n      this.disposeEnabled = false;\n      this._renderTexture = null;\n    }\n  }, {\n    key: "createTexture",\n    value: function createTexture() {\n      var texture = BaseObject.borrowObject(MiniTextureData);\n      return texture;\n    }\n  }, {\n    key: "setRenderTexture",\n    value: function setRenderTexture(texture, miniGL) {\n      this._renderTexture = texture;\n\n      if (this._renderTexture !== null) {\n        for (var k in this.textures) {\n          var textureData = this.textures[k];\n\n          if (textureData.region.rotated) {}\n\n          var renderTexture = new Texture/* default */.Z(miniGL);\n          renderTexture.create({\n            image: texture,\n            rect: textureData.region,\n            reverseY: false,\n            name: textureData.name\n          });\n          textureData.renderTexture = renderTexture;\n        }\n      } else {\n        for (var _k in this.textures) {\n          var _textureData = this.textures[_k];\n          _textureData.renderTexture = null;\n        }\n      }\n\n      return texture;\n    }\n  }]);\n\n  return MiniGLTextureAtlasData;\n}(TextureAtlasData);\n/**\n * @internal\n */\n\n\nvar MiniTextureData = /*#__PURE__*/function (_TextureData) {\n  (0,inherits/* default */.Z)(MiniTextureData, _TextureData);\n\n  var _super2 = MiniGLTextureAtlasData_createSuper(MiniTextureData);\n\n  function MiniTextureData() {\n    var _this2;\n\n    (0,classCallCheck/* default */.Z)(this, MiniTextureData);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this2), "renderTexture", null);\n\n    return _this2;\n  }\n\n  (0,createClass/* default */.Z)(MiniTextureData, [{\n    key: "_onClear",\n    value: // Initial value.\n    function _onClear() {\n      TextureData.prototype._onClear.call(this);\n\n      if (this.renderTexture !== null) {\n        this.renderTexture.destroy(false);\n      }\n\n      this.renderTexture = null;\n    }\n  }]);\n\n  return MiniTextureData;\n}(TextureData);\n\nMiniTextureData.toString = function () {\n  return \'[class dragonBones.MiniTextureData]\';\n};\n\nMiniGLTextureAtlasData.toString = function () {\n  return \'[class dragonBones.MiniAtlasData]\';\n};\n\n/* harmony default export */ const dragonBones_MiniGLTextureAtlasData = (MiniGLTextureAtlasData);\n;// CONCATENATED MODULE: ./src/dragonBones/MiniGLSlot.js\n\n\n\n\n\n\nfunction MiniGLSlot_createSuper(Derived) { var hasNativeReflectConstruct = MiniGLSlot_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction MiniGLSlot_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar MiniGLSlot_ref = window.dragonBones || {},\n    _ref$Slot = MiniGLSlot_ref.Slot,\n    Slot = _ref$Slot === void 0 ? function () {} : _ref$Slot;\n\n\n\n\n/**\n * 骨骼插槽\n * @class\n */\n\nvar MiniGLSlot = /*#__PURE__*/function (_Slot) {\n  (0,inherits/* default */.Z)(MiniGLSlot, _Slot);\n\n  var _super = MiniGLSlot_createSuper(MiniGLSlot);\n\n  function MiniGLSlot() {\n    (0,classCallCheck/* default */.Z)(this, MiniGLSlot);\n\n    return _super.apply(this, arguments);\n  }\n\n  (0,createClass/* default */.Z)(MiniGLSlot, [{\n    key: "_onClear",\n    value: function _onClear() {\n      Slot.prototype._onClear.call(this);\n\n      this._armatureDisplay = null; //\n\n      this._renderDisplay = null; //\n\n      this._colorFilter = null;\n    }\n  }, {\n    key: "_initDisplay",\n    value: function _initDisplay(value, isRetain) {}\n  }, {\n    key: "_disposeDisplay",\n    value: function _disposeDisplay(value, isRelease) {\n      // value.destroy();\n      value.parent.remove(value);\n      value.destroy();\n    } // 更新前函数\n\n  }, {\n    key: "_onUpdateDisplay",\n    value: function _onUpdateDisplay() {\n      this._armatureDisplay = this._armature.display;\n      this._renderDisplay = this._display ? this._display : this._rawDisplay;\n    } // 添加到骨架容器中\n\n  }, {\n    key: "_addDisplay",\n    value: function _addDisplay() {\n      if (this._renderDisplay.parent) {\n        this._renderDisplay.parent.removeChild(this._renderDisplay);\n      }\n\n      this._armature.display.addChild(this._renderDisplay);\n    }\n  }, {\n    key: "_replaceDisplay",\n    value: function _replaceDisplay(value) {\n      this._renderDisplay.parent && this._renderDisplay.parent.removeChild(this._renderDisplay);\n\n      this._armatureDisplay.addChild(this._renderDisplay);\n\n      this._armatureDisplay.swapChildren(this._renderDisplay, value);\n\n      this._armatureDisplay.removeChild(value);\n\n      value.destroy();\n    }\n  }, {\n    key: "_removeDisplay",\n    value: function _removeDisplay() {\n      this._armatureDisplay.removeChild(this._renderDisplay);\n    }\n  }, {\n    key: "_updateZOrder",\n    value: function _updateZOrder() {\n      var index = this._renderDisplay.zOrder;\n\n      if (index === this._zOrder) {\n        return;\n      }\n\n      this._armatureDisplay.removeChild(this._renderDisplay);\n\n      this._armatureDisplay.addChildAt(this._renderDisplay, this._zOrder);\n    }\n  }, {\n    key: "_updateVisible",\n    value: function _updateVisible() {\n      var visible = this._parent.visible && this._visible;\n      this._renderDisplay.visible = visible;\n    }\n  }, {\n    key: "_updateBlendMode",\n    value: function _updateBlendMode() {\n      var gl = this._armatureDisplay.miniGL.gl;\n\n      switch (this._blendMode) {\n        case BlendMode.Normal:\n          this._renderDisplay.blendMode = gl.ONE_MINUS_SRC_ALPHA;\n          break;\n\n        case BlendMode.Add:\n          this._renderDisplay.blendMode = gl.ONE_MINUS_DST_ALPHA;\n          break;\n\n        case BlendMode.Erase:\n          this._renderDisplay.blendMode = gl.DST_ALPHA;\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: "_updateColor",\n    value: function _updateColor() {\n      var alpha = this._colorTransform.alphaMultiplier * this._globalAlpha;\n\n      try {\n        this._renderDisplay.uniformData.alpha.value = alpha;\n      } catch (e) {}\n    }\n  }, {\n    key: "_updateFrame",\n    value: function _updateFrame() {\n      var currentTextureData = this._textureData;\n      this._renderDisplay.textureData = this._textureData;\n\n      if (this._displayFrame !== null && this._display !== null && currentTextureData !== null) {\n        var currentTextureAtlasData = currentTextureData.parent;\n\n        if (this._armature.replacedTexture !== null) {\n          // Update replaced texture atlas.\n          if (this._armature._replaceTextureAtlasData === null) {\n            currentTextureAtlasData = new dragonBones_MiniGLTextureAtlasData();\n            currentTextureAtlasData.copyFrom(currentTextureData.parent);\n            currentTextureAtlasData.texture = this._armature.replacedTexture;\n            this._armature._replaceTextureAtlasData = currentTextureAtlasData;\n          } else {\n            currentTextureAtlasData = this._armature._replaceTextureAtlasData;\n          }\n\n          currentTextureData = currentTextureAtlasData.getTexture(currentTextureData.name);\n        }\n\n        if (currentTextureData.renderTexture !== null) {\n          if (this._geometryData !== null) {\n            // Mesh.\n            var data = this._geometryData.data;\n            var intArray = data.intArray;\n            var floatArray = data.floatArray;\n            var vertexCount = intArray[this._geometryData.offset + BinaryOffset.GeometryVertexCount];\n            var triangleCount = intArray[this._geometryData.offset + BinaryOffset.GeometryTriangleCount];\n            var vertexOffset = intArray[this._geometryData.offset + BinaryOffset.GeometryFloatOffset];\n\n            if (vertexOffset < 0) {\n              vertexOffset += 65536; // Fixed out of bounds bug.\n            }\n\n            var uvOffset = vertexOffset + vertexCount * 2;\n            var scale = this._armature._armatureData.scale;\n            var meshDisplay = this._renderDisplay; // 这一步生成所需要的点和uv和索引\n\n            var uvs = [];\n            var vertices = [];\n            var indices = [];\n\n            for (var i = 0, l = vertexCount * 2; i < l; ++i) {\n              vertices[i] = floatArray[vertexOffset + i] * scale;\n              uvs[i] = floatArray[uvOffset + i];\n            }\n\n            for (var _i = 0; _i < triangleCount * 3; ++_i) {\n              indices[_i] = intArray[this._geometryData.offset + BinaryOffset.GeometryVertexIndices + _i];\n            }\n\n            meshDisplay.dispose();\n            meshDisplay.setTexture(currentTextureData.renderTexture);\n            meshDisplay.setBufferData(vertices, \'position\', 2);\n            meshDisplay.setBufferData(uvs, \'uv\', 2);\n            meshDisplay.setIndices(indices);\n            meshDisplay.vertex = vertices;\n            var isSkinned = this._geometryData.weight !== null;\n            var isSurface = this._parent._boneData.type !== BoneType.Bone;\n\n            if (isSkinned || isSurface) {\n              this._identityTransform();\n            }\n          } else {\n            // Normal texture.\n            var _scale = currentTextureData.parent.scale * this._armature._armatureData.scale;\n\n            var textureWidth = currentTextureData.region.width * _scale;\n            var textureHeight = currentTextureData.region.height * _scale;\n            var normalDisplay = this._renderDisplay;\n            var texture = currentTextureData.renderTexture;\n            normalDisplay.setData({\n              texture: texture,\n              width: textureWidth,\n              height: textureHeight\n            });\n          }\n\n          this._visibleDirty = true;\n          return;\n        }\n      }\n\n      this._renderDisplay.visible = false;\n    }\n  }, {\n    key: "_updateMesh",\n    value: function _updateMesh() {\n      var scale = this._armature._armatureData.scale;\n      var deformVertices = this._displayFrame.deformVertices;\n      var bones = this._geometryBones;\n      var geometryData = this._geometryData;\n      var weightData = geometryData.weight;\n      var hasDeform = deformVertices.length > 0 && geometryData.inheritDeform;\n      var meshDisplay = this._renderDisplay;\n\n      if (weightData !== null) {\n        var data = geometryData.data;\n        var intArray = data.intArray;\n        var floatArray = data.floatArray;\n        var vertexCount = intArray[geometryData.offset + BinaryOffset.GeometryVertexCount];\n        var weightFloatOffset = intArray[weightData.offset + BinaryOffset.WeigthFloatOffset];\n\n        if (weightFloatOffset < 0) {\n          weightFloatOffset += 65536; // Fixed out of bounds bug.\n        }\n\n        for (var i = 0, iD = 0, iB = weightData.offset + BinaryOffset.WeigthBoneIndices + bones.length, iV = weightFloatOffset, iF = 0; i < vertexCount; ++i) {\n          var boneCount = intArray[iB++];\n          var xG = 0.0;\n          var yG = 0.0;\n\n          for (var j = 0; j < boneCount; ++j) {\n            var boneIndex = intArray[iB++];\n            var bone = bones[boneIndex];\n\n            if (bone !== null) {\n              var matrix = bone.globalTransformMatrix;\n              var weight = floatArray[iV++];\n              var xL = floatArray[iV++] * scale;\n              var yL = floatArray[iV++] * scale;\n\n              if (hasDeform) {\n                xL += deformVertices[iF++];\n                yL += deformVertices[iF++];\n              }\n\n              xG += (matrix.a * xL + matrix.c * yL + matrix.tx) * weight;\n              yG += (matrix.b * xL + matrix.d * yL + matrix.ty) * weight;\n            }\n          }\n\n          meshDisplay.vertex[iD++] = xG;\n          meshDisplay.vertex[iD++] = yG;\n        }\n\n        meshDisplay.setBufferData(meshDisplay.vertex, \'position\', 2);\n      } else {\n        var isSurface = this._parent._boneData.type !== BoneType.Bone;\n        var _data = geometryData.data;\n        var _intArray = _data.intArray;\n        var _floatArray = _data.floatArray;\n        var _vertexCount = _intArray[geometryData.offset + BinaryOffset.GeometryVertexCount];\n        var vertexOffset = _intArray[geometryData.offset + BinaryOffset.GeometryFloatOffset];\n\n        if (vertexOffset < 0) {\n          vertexOffset += 65536; // Fixed out of bounds bug.\n        }\n\n        for (var _i2 = 0, l = _vertexCount * 2; _i2 < l; _i2 += 2) {\n          var x = _floatArray[vertexOffset + _i2] * scale;\n          var y = _floatArray[vertexOffset + _i2 + 1] * scale;\n\n          if (hasDeform) {\n            x += deformVertices[_i2];\n            y += deformVertices[_i2 + 1];\n          }\n\n          if (isSurface) {\n            var _matrix = this._parent._getGlobalTransformMatrix(x, y);\n\n            meshDisplay.vertex[_i2] = _matrix.a * x + _matrix.c * y + _matrix.tx;\n            meshDisplay.vertex[_i2 + 1] = _matrix.b * x + _matrix.d * y + _matrix.ty;\n          } else {\n            meshDisplay.vertex[_i2] = x;\n            meshDisplay.vertex[_i2 + 1] = y;\n          }\n        }\n\n        meshDisplay.setBufferData(meshDisplay.vertex, \'position\', 2);\n      }\n    }\n  }, {\n    key: "_identityTransform",\n    value: function _identityTransform() {\n      this._renderDisplay.setMatrix(mat3/* create */.Ue());\n    }\n  }, {\n    key: "_updateTransform",\n    value: function _updateTransform() {\n      var matrix = this.globalTransformMatrix;\n      var newMatrix = mat3/* fromValues */.al(matrix.a, matrix.b, 0, matrix.c, matrix.d, 0, matrix.tx, matrix.ty, 1);\n      mat3/* translate */.Iu(newMatrix, newMatrix, [-this._pivotX, -this._pivotY]);\n\n      this._renderDisplay.setMatrix(newMatrix);\n    }\n  }]);\n\n  return MiniGLSlot;\n}(Slot);\n\nMiniGLSlot.toString = function () {\n  return \'[class dragonBones.MiniSlot]\';\n};\n\n/* harmony default export */ const dragonBones_MiniGLSlot = (MiniGLSlot);\n;// CONCATENATED MODULE: ./src/dragonBones/MiniGLArmatureDisplay.js\n\n\n\n\n\n\n\n\nfunction MiniGLArmatureDisplay_createSuper(Derived) { var hasNativeReflectConstruct = MiniGLArmatureDisplay_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction MiniGLArmatureDisplay_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n/**\n * 骨架显示\n * @class\n */\n\nvar MiniGLArmatureDisplay = /*#__PURE__*/function (_Group) {\n  (0,inherits/* default */.Z)(MiniGLArmatureDisplay, _Group);\n\n  var _super = MiniGLArmatureDisplay_createSuper(MiniGLArmatureDisplay);\n\n  function MiniGLArmatureDisplay() {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, MiniGLArmatureDisplay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "_armature", null);\n\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(MiniGLArmatureDisplay, [{\n    key: "dispatchDBEvent",\n    value: function dispatchDBEvent(type, eventObject) {\n      this.listener.fire(type, eventObject);\n    }\n  }, {\n    key: "hasDBEventListener",\n    value: function hasDBEventListener(type) {\n      return this.listener._listeners[type]; // .d.ts bug\n    }\n  }, {\n    key: "addDBEventListener",\n    value: function addDBEventListener(type, func) {\n      this.listener.on(type, func);\n    }\n  }, {\n    key: "removeDBEventListener",\n    value: function removeDBEventListener(type, func) {\n      this.listener.off(type, func);\n    }\n  }, {\n    key: "dbInit",\n    value: function dbInit(armature) {\n      this._armature = armature;\n      this.listener = new src_Base();\n      var mesh = new Line/* default */.Z({\n        color: [0, 0.1, 0.2, 1]\n      });\n      mesh.drawType = \'LINES\';\n      this.drawer = mesh;\n      this.addChild(mesh);\n    }\n  }, {\n    key: "dbClear",\n    value: function dbClear() {\n      this.destroy();\n    }\n  }, {\n    key: "dbUpdate",\n    value: function dbUpdate() {\n      if (!this.mesh) return;\n\n      var bones = this._armature.getBones();\n\n      var data = [];\n\n      for (var i = 0, l = bones.length; i < l; ++i) {\n        var bone = bones[i];\n        var boneLength = bone.boneData.length;\n        var startX = bone.globalTransformMatrix.tx;\n        var startY = bone.globalTransformMatrix.ty;\n        var endX = startX + bone.globalTransformMatrix.a * boneLength;\n        var endY = startY + bone.globalTransformMatrix.b * boneLength;\n        data.push({\n          position: {\n            x: startX,\n            y: startY\n          }\n        }, {\n          position: {\n            x: endX,\n            y: endY\n          }\n        });\n      }\n\n      this.drawer.setData(data);\n    }\n  }, {\n    key: "dispose",\n    value: function dispose() {\n      if (this._armature !== null) {\n        this._armature.dispose();\n\n        this._armature = null;\n      }\n\n      this.drawer.destroy();\n      Group_Group.dispose.call(this);\n    }\n  }, {\n    key: "destroy",\n    value: function destroy() {\n      this.dispose();\n    }\n  }, {\n    key: "getArmature",\n    value: function getArmature() {\n      return this._armature;\n    }\n  }, {\n    key: "getAnimation",\n    value: function getAnimation() {\n      return this._armature.animation;\n    }\n  }]);\n\n  return MiniGLArmatureDisplay;\n}(Group_Group);\n\n/* harmony default export */ const dragonBones_MiniGLArmatureDisplay = (MiniGLArmatureDisplay);\n;// CONCATENATED MODULE: ./src/dragonBones/index.js\n\n\n\n\n\n\nfunction dragonBones_createSuper(Derived) { var hasNativeReflectConstruct = dragonBones_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction dragonBones_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar dragonBones_ref = window.dragonBones || {},\n    DragonBones = dragonBones_ref.DragonBones,\n    _ref$BaseFactory = dragonBones_ref.BaseFactory,\n    BaseFactory = _ref$BaseFactory === void 0 ? null : _ref$BaseFactory,\n    BuildArmaturePackage = dragonBones_ref.BuildArmaturePackage,\n    dragonBones_BaseObject = dragonBones_ref.BaseObject,\n    Armature = dragonBones_ref.Armature;\n\n\n\n\n\n\nvar DragonBoneObject = /*#__PURE__*/function (_BaseFactory) {\n  (0,inherits/* default */.Z)(DragonBoneObject, _BaseFactory);\n\n  var _super = dragonBones_createSuper(DragonBoneObject);\n\n  function DragonBoneObject(miniGL) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, DragonBoneObject);\n\n    _this = _super.call(this);\n\n    if (!BaseFactory) {\n      throw new Error(\'请先加载DragonBones基础JS库！\');\n    }\n\n    _this.miniGL = miniGL;\n\n    _this.getDragonBonesInstance();\n\n    _this.display = new dragonBones_MiniGLArmatureDisplay();\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(DragonBoneObject, [{\n    key: "addFrameEvent",\n    value: function addFrameEvent() {\n      this.miniGL.on(\'beforerender\', DragonBoneObject.update);\n    }\n  }, {\n    key: "getDragonBonesInstance",\n    value: function getDragonBonesInstance() {\n      var _this2 = this;\n\n      if (!DragonBoneObject._dragonBonesInstance) {\n        DragonBoneObject._dragonBonesInstance = new DragonBones({\n          hasDBEventListener: function hasDBEventListener(event) {\n            return _this2.miniGL._listeners[event];\n          },\n          // 转发事件\n          dispatchDBEvent: function dispatchDBEvent(event, data) {\n            _this2.miniGL.fire(event, data);\n          }\n        });\n        this.addFrameEvent();\n      }\n\n      this._dragonBonesInstance = DragonBoneObject._dragonBonesInstance;\n    } // 构建对象\n\n  }, {\n    key: "buildArmatureDisplay",\n    value: function buildArmatureDisplay(armatureName) {\n      var dragonBonesName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'\';\n      var skinName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \'\';\n      var textureAtlasName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \'\';\n      var armature = this.buildArmature(armatureName, dragonBonesName, skinName, textureAtlasName);\n\n      this._dragonBonesInstance.clock.add(armature);\n\n      return armature.display;\n    }\n    /**\n     * @override 复现方法\n     * @param {*} dataPackage\n     */\n\n  }, {\n    key: "_buildArmature",\n    value: function _buildArmature(dataPackage) {\n      var armature = dragonBones_BaseObject.borrowObject(Armature);\n      var armatureDisplay = new dragonBones_MiniGLArmatureDisplay({\n        miniGL: this.miniGL\n      });\n      armature.init(dataPackage.armature, armatureDisplay, armatureDisplay, this._dragonBones);\n      return armature;\n    }\n  }, {\n    key: "_buildSlot",\n    value: function _buildSlot(_dataPackage, slotData, armature) {\n      var slot = dragonBones_BaseObject.borrowObject(dragonBones_MiniGLSlot);\n      var sprite = new src.Image();\n      slot.init(slotData, armature, sprite, sprite);\n      return slot;\n    }\n  }, {\n    key: "_buildTextureAtlasData",\n    value: function _buildTextureAtlasData(textureAtlasData, textureAtlas) {\n      if (textureAtlasData) {\n        textureAtlasData.setRenderTexture(textureAtlas, this.miniGL);\n      } else {\n        textureAtlasData = dragonBones_BaseObject.borrowObject(dragonBones_MiniGLTextureAtlasData);\n      }\n\n      return textureAtlasData;\n    }\n  }, {\n    key: "destroy",\n    value: function destroy() {}\n  }]);\n\n  return DragonBoneObject;\n}(BaseFactory);\n\nDragonBoneObject.update = function (delta) {\n  DragonBoneObject._dragonBonesInstance.advanceTime(delta * 0.001);\n};\n\nDragonBoneObject.MiniGLArmatureDisplay = dragonBones_MiniGLArmatureDisplay;\n/* harmony default export */ const dragonBones = (DragonBoneObject);\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction src_createSuper(Derived) { var hasNativeReflectConstruct = src_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction src_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar MiniGL = /*#__PURE__*/function (_Base) {\n  (0,inherits/* default */.Z)(MiniGL, _Base);\n\n  var _super = src_createSuper(MiniGL);\n\n  function MiniGL(config) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, MiniGL);\n\n    _this = _super.call(this, config);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "autoUpdate", false);\n\n    _this.container = config.container;\n    _this.config = Object.assign({\n      contextOption: {\n        alpha: true,\n        antialias: true,\n        antialiasSamples: 16,\n        stencil: true,\n        powerPreference: \'high-performance\',\n        preserveDrawingBuffer: true\n      }\n    }, config);\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(MiniGL, [{\n    key: "init",\n    value: function init() {\n      var _this$config$contextO = this.config.contextOption,\n          contextOption = _this$config$contextO === void 0 ? {} : _this$config$contextO;\n      this.canvasDOM = document.createElement(\'canvas\');\n      this.container.appendChild(this.canvasDOM);\n      this.gl = this.canvasDOM.getContext(\'webgl2\', contextOption);\n\n      if (this.gl == null) {\n        return console.error(\'你的浏览器不支持webgl2,请更新使用chrome浏览器\');\n      }\n\n      this.viewport = new Viewport(_objectSpread({\n        miniGL: this\n      }, this.config));\n      this.viewport.resize();\n      this.canvas = new View_Canvas(_objectSpread({\n        miniGL: this\n      }, this.config));\n      this.controller = new Control_Controller(_objectSpread({\n        miniGL: this\n      }, this.config));\n      this.canvas.update();\n    }\n  }]);\n\n  return MiniGL;\n}(src_Base);\n\nMiniGL.FlyLine = FlyLine;\nMiniGL.Image = Mesh_Image;\nMiniGL.Mesh = Mesh_Mesh;\nMiniGL.Point = Mesh_Point;\nMiniGL.Line = __webpack_require__(323)/* .default */ .Z;\n;\nMiniGL.MeshBase = Mesh_Base/* default */.Z;\nMiniGL.WidthLine = Mesh_WidthLine;\nMiniGL.RoundLine = Mesh_RoundLine; // 暂时做形状没有意义，本来是要专心做2d特效库的,另外去做形状，做重了和canvas性能没差了，还是专心利用gpu多进程运算\n// MiniGL.Shape = require(\'./Shapes\').default;\n\nMiniGL.InstanceMesh = __webpack_require__(947)/* .default */ .Z;\nMiniGL.Group = Group_Group;\nMiniGL.Util = __webpack_require__(88)/* .default */ .Z;\nMiniGL.Texture = __webpack_require__(776)/* .default */ .Z;\nMiniGL.DragonBones = dragonBones;\n/* harmony default export */ const src = (MiniGL);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9zcmMvQmFzZS5qcz84M2Y1Iiwid2VicGFjazovL01pbmlHTC8uL3NyYy9WaWV3L1ZpZXdwb3J0LmpzPzhiOTIiLCJ3ZWJwYWNrOi8vTWluaUdMLy4vc3JjL1NoYWRlcnMvbWVzaC5qcz84NzA4Iiwid2VicGFjazovL01pbmlHTC8uL3NyYy9NZXNoL01lc2guanM/ZTM2ZiIsIndlYnBhY2s6Ly9NaW5pR0wvLi9zcmMvU2hhZGVycy9wb2ludC5qcz85NGU3Iiwid2VicGFjazovL01pbmlHTC8uL3NyYy9NZXNoL1BvaW50LmpzPzQzMGIiLCJ3ZWJwYWNrOi8vTWluaUdMLy4vc3JjL1NoYWRlcnMvd2lkdGhMaW5lLmpzP2ZhN2EiLCJ3ZWJwYWNrOi8vTWluaUdMLy4vc3JjL01lc2gvV2lkdGhMaW5lLmpzP2Y1ZTQiLCJ3ZWJwYWNrOi8vTWluaUdMLy4vc3JjL1ZpZXcvQ2FudmFzLmpzP2U3NjgiLCJ3ZWJwYWNrOi8vTWluaUdMLy4vc3JjL0NvbnRyb2wvQ29udHJvbGxlci5qcz8zOGUzIiwid2VicGFjazovL01pbmlHTC8uL3NyYy9TaGFkZXJzL2ZseWxpbmUuanM/ZGQ2YSIsIndlYnBhY2s6Ly9NaW5pR0wvLi9zcmMvVXRpbHMvdmVjdG9yLmpzPzAwMTciLCJ3ZWJwYWNrOi8vTWluaUdMLy4vc3JjL1V0aWxzL0JlemllckxpbmUuanM/NWJiMiIsIndlYnBhY2s6Ly9NaW5pR0wvLi9zcmMvTWVzaC9GbHlMaW5lLmpzP2ExYmMiLCJ3ZWJwYWNrOi8vTWluaUdMLy4vc3JjL1NoYWRlcnMvaW1hZ2UuanM/MDIyZSIsIndlYnBhY2s6Ly9NaW5pR0wvLi9zcmMvTWVzaC9JbWFnZS5qcz82OTJjIiwid2VicGFjazovL01pbmlHTC8uL3NyYy9TaGFkZXJzL3JvdW5kTGluZS5qcz8wMGQ5Iiwid2VicGFjazovL01pbmlHTC8uL3NyYy9NZXNoL1JvdW5kTGluZS9MaW5lLmpzPzZkNTciLCJ3ZWJwYWNrOi8vTWluaUdMLy4vc3JjL1NoYWRlcnMvcm91bmRMaW5lUG9pbnQuanM/MGJjNSIsIndlYnBhY2s6Ly9NaW5pR0wvLi9zcmMvTWVzaC9Sb3VuZExpbmUvTGluZVBvaW50LmpzPzlkNDEiLCJ3ZWJwYWNrOi8vTWluaUdMLy4vc3JjL01lc2gvUm91bmRMaW5lL2luZGV4LmpzPzczYjMiLCJ3ZWJwYWNrOi8vTWluaUdMLy4vc3JjL0dyb3VwL0dyb3VwLmpzPzJiYWMiLCJ3ZWJwYWNrOi8vTWluaUdMLy4vc3JjL2RyYWdvbkJvbmVzL0VudW0uanM/NmRhMCIsIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc3VwZXJQcm9wQmFzZS5qcz81ZDM0Iiwid2VicGFjazovL01pbmlHTC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9nZXQuanM/NDVlYiIsIndlYnBhY2s6Ly9NaW5pR0wvLi9zcmMvZHJhZ29uQm9uZXMvTWluaUdMVGV4dHVyZUF0bGFzRGF0YS5qcz8wZmVlIiwid2VicGFjazovL01pbmlHTC8uL3NyYy9kcmFnb25Cb25lcy9NaW5pR0xTbG90LmpzPzVlODYiLCJ3ZWJwYWNrOi8vTWluaUdMLy4vc3JjL2RyYWdvbkJvbmVzL01pbmlHTEFybWF0dXJlRGlzcGxheS5qcz8zMDZkIiwid2VicGFjazovL01pbmlHTC8uL3NyYy9kcmFnb25Cb25lcy9pbmRleC5qcz9jMTRiIiwid2VicGFjazovL01pbmlHTC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sIm5hbWVzIjpbIkJhc2UiLCJ0eXBlIiwibGlzdGVuZXIiLCJsaXN0ZW5lcnMiLCJfbGlzdGVuZXJzIiwidW5kZWZpbmVkIiwiaW5kZXhPZiIsInB1c2giLCJldmVudCIsImxpc3RlbmVyQXJyYXkiLCJhcnJheSIsInNsaWNlIiwiaSIsImwiLCJsZW5ndGgiLCJjYWxsIiwiaW5kZXgiLCJzcGxpY2UiLCJjb25maWciLCJtYXAiLCJtaW5pR0wiLCJsYXllciIsImlkIiwiX2xheWVyaWQiLCJsYXllcnMiLCJvbkFkZCIsIngiLCJvblJlbW92ZSIsIlZpZXdQb3J0IiwiZ2wiLCJPYmplY3QiLCJhc3NpZ24iLCJ0cmFuc2Zvcm0iLCJtYXQzIiwiY29udmVydFRyYW5zZm9ybSIsInNjYWxlIiwidHJhbnNsYXRlIiwicm90YXRpb24iLCJNYXRoIiwiUEkiLCJ5Iiwid2lkdGgiLCJoZWlnaHQiLCJyYXRpbyIsIndpbmRvdyIsImRldmljZVBpeGVsUmF0aW8iLCJwaXhlbFJhdGlvIiwiY29udGFpbmVyIiwiY2xpZW50V2lkdGgiLCJjbGllbnRIZWlnaHQiLCJyZW5kZXJXaWR0aCIsInJlbmRlckhlaWdodCIsImNhbnZhc0RPTSIsInN0eWxlIiwidmlld3BvcnQiLCJtYWtlTWF0cml4IiwibWF0cml4IiwidmVydGV4U2hhZGVyIiwiZnJhZ21lbnRTaGFkZXIiLCJNZXNoIiwid2lyZUZyYW1lIiwic2hhZGVycyIsInZlcnRleCIsIm1lc2hTaGFkZXIiLCJmcmFnbWVudCIsInVuaWZvcm1EYXRhIiwieiIsInZhbHVlIiwiaW5pdCIsInZTaXplIiwic3JjIiwibG9hZFRleHR1cmUiLCJ0aGVuIiwidGV4dHVyZSIsInNldERhdGEiLCJkYXRhIiwiaW5kaWNlcyIsImRpc3Bvc2UiLCJwb2ludHMiLCJjb2xvcnMiLCJmb3JFYWNoIiwiaXRlbSIsImNvb3JkIiwicG9zaXRpb24iLCJjb2xvciIsInNldEJ1ZmZlckRhdGEiLCJzZXRJbmRpY2VzIiwidXZzIiwiaW5wdXQiLCJkcmF3VHlwZSIsImJpbmRCdWZmZXIiLCJFTEVNRU5UX0FSUkFZX0JVRkZFUiIsImluZGljZXNQb2ludGVyIiwiYnVmZmVyRGF0YSIsIlVpbnQxNkFycmF5IiwiU1RBVElDX0RSQVciLCJvZmZzZXQiLCJub3JtYWxpemUiLCJrZXkiLCJidWZmZXJzIiwiYnVmZmVyUG9zaXRpb24iLCJnZXRBdHRyaWJMb2NhdGlvbiIsIkFSUkFZX0JVRkZFUiIsInZlcnRleEF0dHJpYlBvaW50ZXIiLCJidWZmZXJzU2l6ZSIsIkZMT0FUIiwiZW5hYmxlVmVydGV4QXR0cmliQXJyYXkiLCJ1c2VQcm9ncmFtIiwic2hhZGVyUHJvZ3JhbSIsInNldFVuaWZvcm1EYXRhIiwiZHJhd0VsZW1lbnRzIiwiVU5TSUdORURfU0hPUlQiLCJpc1JvdW5kIiwiaXNHcmFkdWFsIiwiY29uc29sZSIsImxvZyIsIlBvaW50IiwiaW5pdFRpbWUiLCJwb2ludFNoYWRlciIsInQiLCJhbnRpYWxpYXMiLCJzaXplIiwidlRpbWUiLCJyYW5kb20iLCJXaWR0aExpbmUiLCJzaGFkZXIiLCJ3YXJuIiwicmVzIiwiY2FsY1NpZGVQb2ludHMiLCJub3dEYXRhIiwicHJlRGF0YSIsIm5leHREYXRhIiwic2lkZSIsImluZGljZXNMZW5ndGgiLCJuZXh0IiwicHJlIiwiQ2FudmFzIiwidGltZSIsIkRhdGUiLCJnZXRUaW1lIiwiZGVsdGEiLCJiZWZvcmVUaW1lIiwicmVuZGVyIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwidXBkYXRlIiwibWVzaGVzIiwibWVzaCIsIm1lc2hDb25maWciLCJwb2ludCIsInBvaW50Q29uZmlnIiwibGluZSIsIkxpbmUiLCJsaW5lQ29uZmlnIiwid2lkdGhMaW5lIiwid2lkdGhMaW5lQ29uZmlnIiwiYWRkIiwicmVtb3ZlIiwiZGVzdHJveSIsImNhbnZhcyIsInRvRGF0YVVybCIsInBhcmVudCIsImNoaWxkIiwiYXJndW1lbnRzIiwiZmlyZSIsImNsZWFyRGVwdGgiLCJkaXNhYmxlIiwiREVQVEhfVEVTVCIsImRlcHRoRnVuYyIsIkxFUVVBTCIsIkNVTExfRkFDRSIsImNsZWFyIiwiQ09MT1JfQlVGRkVSX0JJVCIsIkRFUFRIX0JVRkZFUl9CSVQiLCJyZW5kZXJNZXNoIiwicGFyZW50TWF0cml4IiwiYmxlbmRNb2RlIiwicHJlbXVsdGlwbHlBbHBoYSIsImVuYWJsZSIsIkJMRU5EIiwiYmxlbmRGdW5jIiwiT05FX01JTlVTX1NSQ19BTFBIQSIsInZpc2libGUiLCJtYWtlVHJhbnNmb3JtIiwibWFrZU5lZWRVbmlmb3JtIiwiY2hpbGRyZW4iLCJtb2RlbFZpZXciLCJhc3BlY3QiLCJDb250cm9sbGVyIiwiZSIsIm9mZnNldFgiLCJzdGFydFhZIiwic3RhcnRYIiwib2Zmc2V0WSIsInN0YXJ0WSIsIm1vdmVUbyIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJvbk1vdXNlTW92ZSIsIm9uTW91c2VVcCIsImRpc2FibGVDb250cm9sbGVyIiwiYWRkRXZlbnRzIiwiYWRkRXZlbnRMaXN0ZW5lciIsImN0cmxLZXkiLCJwcmV2ZW50RGVmYXVsdCIsImFkZE1vdmVFdmVudHMiLCJ6b29tIiwiZGVsdGFZIiwicGFnZVgiLCJwYWdlWSIsImN4IiwiY3kiLCJjaGFuZ2VTY2FsZSIsImNhbnZhc1BvcyIsIm5leHRTY2FsZSIsInJhZCIsImNoYW5nZVJhZCIsInJvdGF0ZSIsInYiLCJzcXJ0IiwiYWRkVmVjdG9yIiwidjAiLCJ2MSIsImdldFZlY3Rvckxlbmd0aCIsInN1YlZlY3RvciIsIm11bHRpcGxlIiwiQmV6aWVyTGluZSIsInYyIiwidjMiLCJjdWJpY0JlemllciIsInAwIiwicDEiLCJwMiIsInAzIiwiQ3ViaWNCZXppZXJQMCIsIkN1YmljQmV6aWVyUDEiLCJDdWJpY0JlemllclAyIiwiQ3ViaWNCZXppZXJQMyIsIm4iLCJsZW5ndGhzIiwiZ2V0TGVuZ3RocyIsImdldFV0b1RtYXBwaW5nIiwiZ2V0UG9pbnQiLCJjdXJyZW50IiwibGFzdCIsInUiLCJ0YXJnZXRMZW5ndGgiLCJuZXh0SW5kZXgiLCJub3dJbmRleCIsImZpbmQiLCJyZXN0UmF0aW8iLCJtYXgiLCJwIiwiayIsImxpbmVIZWlnaHQiLCJzcGVlZCIsInNtb290aE51bWJlciIsImxpbmVTaGFkZXIiLCJiZXppZXJMaW5lIiwic3RhcnRDb2xvciIsImVuZENvbG9yIiwiY29udmVydFNjcmVlblRvQ2xpcCIsInN0YXJ0IiwiZW5kWFkiLCJlbmQiLCJtaWRQb2ludCIsImVuZF9zdGFydCIsIm5vcm1hbCIsImNvbnRyb2xQb2ludCIsInNldENvbnRyb2wiLCJhbGxQb2ludHMiLCJnZXRTcGFjZWRQb2ludHMiLCJudW1iZXJzIiwic3RhcnRGbGFnIiwibWluIiwiZHJhd0FycmF5cyIsIkltYWdlIiwiYWxwaGFDb2xvciIsImltYWdlUGF0aCIsInNldFRleHR1cmUiLCJFcnJvciIsInNldE1hcCIsInV2IiwidW5pZm9ybXNOZWVkVXBkYXRlIiwid2ViZ2xUZXh0dXJlIiwiUm91bmRMaW5lIiwic3RhdHVzIiwiaiIsInBvaW50MSIsInBvaW50MCIsInBvaW50MiIsIkxpbmVQb2ludCIsImxpbmVQb2ludCIsIkdyb3VwIiwiY3JlYXRlQnVmZmVyIiwiZWFjaCIsImNoaWxkSWQiLCJ6T3JkZXIiLCJwb3MiLCJhIiwiYiIsIkJsZW5kTW9kZSIsIk5vcm1hbCIsIkFkZCIsIkFscGhhIiwiRGFya2VuIiwiRGlmZmVyZW5jZSIsIkVyYXNlIiwiSGFyZExpZ2h0IiwiSW52ZXJ0IiwiTGF5ZXIiLCJMaWdodGVuIiwiTXVsdGlwbHkiLCJPdmVybGF5IiwiU2NyZWVuIiwiU3VidHJhY3QiLCJCb25lVHlwZSIsIkJvbmUiLCJTdXJmYWNlIiwiQmluYXJ5T2Zmc2V0IiwiV2VpZ3RoQm9uZUNvdW50IiwiV2VpZ3RoRmxvYXRPZmZzZXQiLCJXZWlndGhCb25lSW5kaWNlcyIsIkdlb21ldHJ5VmVydGV4Q291bnQiLCJHZW9tZXRyeVRyaWFuZ2xlQ291bnQiLCJHZW9tZXRyeUZsb2F0T2Zmc2V0IiwiR2VvbWV0cnlXZWlnaHRPZmZzZXQiLCJHZW9tZXRyeVZlcnRleEluZGljZXMiLCJUaW1lbGluZVNjYWxlIiwiVGltZWxpbmVPZmZzZXQiLCJUaW1lbGluZUtleUZyYW1lQ291bnQiLCJUaW1lbGluZUZyYW1lVmFsdWVDb3VudCIsIlRpbWVsaW5lRnJhbWVWYWx1ZU9mZnNldCIsIlRpbWVsaW5lRnJhbWVPZmZzZXQiLCJGcmFtZVBvc2l0aW9uIiwiRnJhbWVUd2VlblR5cGUiLCJGcmFtZVR3ZWVuRWFzaW5nT3JDdXJ2ZVNhbXBsZUNvdW50IiwiRnJhbWVDdXJ2ZVNhbXBsZXMiLCJEZWZvcm1WZXJ0ZXhPZmZzZXQiLCJEZWZvcm1Db3VudCIsIkRlZm9ybVZhbHVlQ291bnQiLCJEZWZvcm1WYWx1ZU9mZnNldCIsIkRlZm9ybUZsb2F0T2Zmc2V0IiwiZHJhZ29uQm9uZXMiLCJUZXh0dXJlRGF0YSIsIkJhc2VPYmplY3QiLCJUZXh0dXJlQXRsYXNEYXRhIiwiTWluaUdMVGV4dHVyZUF0bGFzRGF0YSIsImRpc3Bvc2VFbmFibGVkIiwiX3JlbmRlclRleHR1cmUiLCJib3Jyb3dPYmplY3QiLCJNaW5pVGV4dHVyZURhdGEiLCJ0ZXh0dXJlcyIsInRleHR1cmVEYXRhIiwicmVnaW9uIiwicm90YXRlZCIsInJlbmRlclRleHR1cmUiLCJUZXh0dXJlIiwiY3JlYXRlIiwiaW1hZ2UiLCJyZWN0IiwicmV2ZXJzZVkiLCJuYW1lIiwicHJvdG90eXBlIiwiX29uQ2xlYXIiLCJ0b1N0cmluZyIsIlNsb3QiLCJNaW5pR0xTbG90IiwiX2FybWF0dXJlRGlzcGxheSIsIl9yZW5kZXJEaXNwbGF5IiwiX2NvbG9yRmlsdGVyIiwiaXNSZXRhaW4iLCJpc1JlbGVhc2UiLCJfYXJtYXR1cmUiLCJkaXNwbGF5IiwiX2Rpc3BsYXkiLCJfcmF3RGlzcGxheSIsInJlbW92ZUNoaWxkIiwiYWRkQ2hpbGQiLCJzd2FwQ2hpbGRyZW4iLCJfek9yZGVyIiwiYWRkQ2hpbGRBdCIsIl9wYXJlbnQiLCJfdmlzaWJsZSIsIl9ibGVuZE1vZGUiLCJPTkVfTUlOVVNfRFNUX0FMUEhBIiwiRFNUX0FMUEhBIiwiYWxwaGEiLCJfY29sb3JUcmFuc2Zvcm0iLCJhbHBoYU11bHRpcGxpZXIiLCJfZ2xvYmFsQWxwaGEiLCJjdXJyZW50VGV4dHVyZURhdGEiLCJfdGV4dHVyZURhdGEiLCJfZGlzcGxheUZyYW1lIiwiY3VycmVudFRleHR1cmVBdGxhc0RhdGEiLCJyZXBsYWNlZFRleHR1cmUiLCJfcmVwbGFjZVRleHR1cmVBdGxhc0RhdGEiLCJjb3B5RnJvbSIsImdldFRleHR1cmUiLCJfZ2VvbWV0cnlEYXRhIiwiaW50QXJyYXkiLCJmbG9hdEFycmF5IiwidmVydGV4Q291bnQiLCJ0cmlhbmdsZUNvdW50IiwidmVydGV4T2Zmc2V0IiwidXZPZmZzZXQiLCJfYXJtYXR1cmVEYXRhIiwibWVzaERpc3BsYXkiLCJ2ZXJ0aWNlcyIsImlzU2tpbm5lZCIsIndlaWdodCIsImlzU3VyZmFjZSIsIl9ib25lRGF0YSIsIl9pZGVudGl0eVRyYW5zZm9ybSIsInRleHR1cmVXaWR0aCIsInRleHR1cmVIZWlnaHQiLCJub3JtYWxEaXNwbGF5IiwiX3Zpc2libGVEaXJ0eSIsImRlZm9ybVZlcnRpY2VzIiwiYm9uZXMiLCJfZ2VvbWV0cnlCb25lcyIsImdlb21ldHJ5RGF0YSIsIndlaWdodERhdGEiLCJoYXNEZWZvcm0iLCJpbmhlcml0RGVmb3JtIiwid2VpZ2h0RmxvYXRPZmZzZXQiLCJpRCIsImlCIiwiaVYiLCJpRiIsImJvbmVDb3VudCIsInhHIiwieUciLCJib25lSW5kZXgiLCJib25lIiwiZ2xvYmFsVHJhbnNmb3JtTWF0cml4IiwieEwiLCJ5TCIsImMiLCJ0eCIsImQiLCJ0eSIsIl9nZXRHbG9iYWxUcmFuc2Zvcm1NYXRyaXgiLCJzZXRNYXRyaXgiLCJuZXdNYXRyaXgiLCJfcGl2b3RYIiwiX3Bpdm90WSIsIk1pbmlHTEFybWF0dXJlRGlzcGxheSIsImV2ZW50T2JqZWN0IiwiZnVuYyIsIm9uIiwib2ZmIiwiYXJtYXR1cmUiLCJFdmVudExpc3RlbmVyIiwiZHJhd2VyIiwiZ2V0Qm9uZXMiLCJib25lTGVuZ3RoIiwiYm9uZURhdGEiLCJlbmRYIiwiZW5kWSIsImFuaW1hdGlvbiIsIkRyYWdvbkJvbmVzIiwiQmFzZUZhY3RvcnkiLCJCdWlsZEFybWF0dXJlUGFja2FnZSIsIkFybWF0dXJlIiwiRHJhZ29uQm9uZU9iamVjdCIsImdldERyYWdvbkJvbmVzSW5zdGFuY2UiLCJfZHJhZ29uQm9uZXNJbnN0YW5jZSIsImhhc0RCRXZlbnRMaXN0ZW5lciIsImRpc3BhdGNoREJFdmVudCIsImFkZEZyYW1lRXZlbnQiLCJhcm1hdHVyZU5hbWUiLCJkcmFnb25Cb25lc05hbWUiLCJza2luTmFtZSIsInRleHR1cmVBdGxhc05hbWUiLCJidWlsZEFybWF0dXJlIiwiY2xvY2siLCJkYXRhUGFja2FnZSIsImFybWF0dXJlRGlzcGxheSIsIl9kcmFnb25Cb25lcyIsIl9kYXRhUGFja2FnZSIsInNsb3REYXRhIiwic2xvdCIsInNwcml0ZSIsIk1pbmlHTCIsInRleHR1cmVBdGxhc0RhdGEiLCJ0ZXh0dXJlQXRsYXMiLCJzZXRSZW5kZXJUZXh0dXJlIiwiYWR2YW5jZVRpbWUiLCJjb250ZXh0T3B0aW9uIiwiYW50aWFsaWFzU2FtcGxlcyIsInN0ZW5jaWwiLCJwb3dlclByZWZlcmVuY2UiLCJwcmVzZXJ2ZURyYXdpbmdCdWZmZXIiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJhcHBlbmRDaGlsZCIsImdldENvbnRleHQiLCJlcnJvciIsIlZpZXdwb3J0IiwicmVzaXplIiwiY29udHJvbGxlciIsIkZseUxpbmUiLCJyZXF1aXJlIiwiTWVzaEJhc2UiLCJJbnN0YW5jZU1lc2giLCJVdGlsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7SUFDTUEsSTs7OztzREFFTyxFOzswREFDRSxFOzs7Ozs7QUFFWDtBQUNKO0FBQ0E7QUFDSSxnQkFBR0MsSUFBSCxFQUFTQyxRQUFULEVBQW1CO0FBQ2YsVUFBSUMsU0FBUyxHQUFHLEtBQUtDLFVBQXJCOztBQUNBLFVBQUlELFNBQVMsQ0FBQ0YsSUFBRCxDQUFULEtBQW9CSSxTQUF4QixFQUFtQztBQUMvQkYsaUJBQVMsQ0FBQ0YsSUFBRCxDQUFULEdBQWtCLEVBQWxCO0FBQ0g7O0FBQ0QsVUFBSUUsU0FBUyxDQUFDRixJQUFELENBQVQsQ0FBZ0JLLE9BQWhCLENBQXdCSixRQUF4QixNQUFzQyxDQUFDLENBQTNDLEVBQThDO0FBQzFDQyxpQkFBUyxDQUFDRixJQUFELENBQVQsQ0FBZ0JNLElBQWhCLENBQXFCTCxRQUFyQjtBQUNIO0FBQ0o7QUFFRDtBQUNKO0FBQ0E7QUFDQTtBQUNBOzs7O1dBQ0ksY0FBS0QsSUFBTCxFQUFXTyxLQUFYLEVBQWtCO0FBQ2Qs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ZmlsZSI6IjMyNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiDlm77lsYLln7rnoYDnsbtcbiAqIEBjbGFzc1xuICovXG5jbGFzcyBCYXNlIHtcblxuICAgIGxheWVycyA9IFtdXG4gICAgX2xpc3RlbmVycz17fVxuXG4gICAgLyoqXG4gICAgICog5LqL5Lu255uR5ZCsLOeUqOazleWQjGpRdWVyeS5vblxuICAgICAqL1xuICAgIG9uKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICAgIHZhciBsaXN0ZW5lcnMgPSB0aGlzLl9saXN0ZW5lcnM7XG4gICAgICAgIGlmIChsaXN0ZW5lcnNbdHlwZV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgbGlzdGVuZXJzW3R5cGVdID0gW107XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGxpc3RlbmVyc1t0eXBlXS5pbmRleE9mKGxpc3RlbmVyKSA9PT0gLTEpIHtcbiAgICAgICAgICAgIGxpc3RlbmVyc1t0eXBlXS5wdXNoKGxpc3RlbmVyKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOinpuWPkeS6i+S7tlxuICAgICAqIEBleGFtcGxlXG4gICAgICogdGhpcy5maXJlKFwiY2hhbmdlXCIsZXZlbnQpXG4gICAgICovXG4gICAgZmlyZSh0eXBlLCBldmVudCkge1xuICAgICAgICB2YXIgbGlzdGVuZXJzID0gdGhpcy5fbGlzdGVuZXJzO1xuICAgICAgICB2YXIgbGlzdGVuZXJBcnJheSA9IGxpc3RlbmVyc1t0eXBlXTtcbiAgICAgICAgaWYgKGxpc3RlbmVyQXJyYXkgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdmFyIGFycmF5ID0gbGlzdGVuZXJBcnJheS5zbGljZSgwKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gYXJyYXkubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgYXJyYXlbaV0uY2FsbCh0aGlzLCBldmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDlhbPpl63kuovku7ZcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIHRoaXMub2ZmKCdjaGFuZ2UnLG9uQ2hhbmdlKVxuICAgICAqL1xuICAgIG9mZih0eXBlLCBsaXN0ZW5lcikge1xuICAgICAgICB2YXIgbGlzdGVuZXJzID0gdGhpcy5fbGlzdGVuZXJzO1xuICAgICAgICB2YXIgbGlzdGVuZXJBcnJheSA9IGxpc3RlbmVyc1t0eXBlXTtcbiAgICAgICAgaWYgKGxpc3RlbmVyQXJyYXkgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaWYgKGxpc3RlbmVyKSB7XG4gICAgICAgICAgICAgICAgdmFyIGluZGV4ID0gbGlzdGVuZXJBcnJheS5pbmRleE9mKGxpc3RlbmVyKTtcbiAgICAgICAgICAgICAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIGxpc3RlbmVyQXJyYXkuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuX2xpc3RlbmVyc1t0eXBlXSA9IFtdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaW5pdENvbmZpZyhjb25maWcpIHtcblxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOWcsOWbvua3u+WKoOWbvuWxguaXtuiwg+eUqCznlLHlrZDnsbvlrp7njrBcbiAgICAgKiBAcGFyYW0ge01hcH0gbWFwXG4gICAgICovXG4gICAgb25BZGQobWFwKSB7XG4gICAgICAgIHRoaXMubWluaUdMID0gbWFwO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOWcsOWbvuavj+W4p+iwg+eUqOivpeWHveaVsFxuICAgICAqL1xuICAgIHVwZGF0ZSgpIHtcblxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOenu+mZpOWbvuWxguaXtuiwg+eUqFxuICAgICAqL1xuICAgIG9uUmVtb3ZlKCkge1xuICAgICAgICB0aGlzLl9saXN0ZW5lcnMgPSB7fTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDmt7vliqDlm77lsYJcbiAgICAgKiBAcGFyYW0ge0xheWVyfSBsYXllciAtIOWbvuWxglxuICAgICAqL1xuICAgIGFkZExheWVyKGxheWVyKSB7XG4gICAgICAgIGxheWVyLmlkID0gKyt0aGlzLl9sYXllcmlkO1xuICAgICAgICB0aGlzLmxheWVycy5wdXNoKGxheWVyKTtcbiAgICAgICAgbGF5ZXIub25BZGQodGhpcyk7IC8vIOWIneWni+WMlmxheWVyXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5Yig6Zmk5Zu+5bGCXG4gICAgICogQHBhcmFtIHtMYXllcn0gbGF5ZXIgLSDlm77lsYJcbiAgICAgKi9cbiAgICByZW1vdmVMYXllcihsYXllcikge1xuICAgICAgICBmb3IgKGxldCB4IGluIHRoaXMubGF5ZXJzKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5sYXllcnNbeF0uaWQgPT09IGxheWVyLmlkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sYXllcnNbeF0ub25SZW1vdmUgJiYgdGhpcy5sYXllcnNbeF0ub25SZW1vdmUoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmxheWVycy5zcGxpY2UoeCwgMSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6I635Y+W5Zu+5bGC6YCa6L+HaWRcbiAgICAgKi9cbiAgICBnZXRMYXllckJ5SWQoaWQpIHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmxheWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKHRoaXMubGF5ZXJzW2ldLmlkID09PSBpZCkgcmV0dXJuIHRoaXMubGF5ZXJzW2ldO1xuICAgICAgICB9XG4gICAgfVxuXG59XG5leHBvcnQgZGVmYXVsdCBCYXNlO1xuIiwiaW1wb3J0IHttYXQzfSBmcm9tICdnbC1tYXRyaXgnO1xuXG4vKipcbiAqIEBjbGFzc1xuICovXG5jbGFzcyBWaWV3UG9ydCB7XG5cdGNvbnN0cnVjdG9yKGNvbmZpZykge1xuXHRcdHRoaXMubWluaUdMID0gY29uZmlnLm1pbmlHTDtcblx0XHR0aGlzLmdsID0gdGhpcy5taW5pR0wuZ2w7XG5cdFx0dGhpcy5jb25maWcgPSBPYmplY3QuYXNzaWduKHtcblxuXHRcdH0sIGNvbmZpZy5jb25maWcpO1xuXHRcdHRoaXMudHJhbnNmb3JtID0gbWF0My5jcmVhdGUoKTsvLyAyZOinhuWbvui9rOaNouefqemYtVxuXHRcdHRoaXMuY29udmVydFRyYW5zZm9ybSA9IG1hdDMuY3JlYXRlKCk7Ly8g56m66Ze06L2s5o2i55+p6Zi1XG5cdFx0dGhpcy5zY2FsZSA9IDE7XG5cdFx0dGhpcy50cmFuc2xhdGUgPSBbMCwgMF07XG5cdFx0dGhpcy5yb3RhdGlvbiA9IE1hdGguUEkgKiAyOy8vIOW8p+W6plxuXHR9XG5cblx0LyoqXG5cdCAqIEBwYXJhbSAge30geD0wXG5cdCAqIEBwYXJhbSAge30geT0wXG5cdCAqL1xuXHRjb252ZXJ0U2NyZWVuVG9DbGlwKHggPSAwLCB5ID0gMCkge1xuXHRcdHJldHVybiB7XG5cdFx0XHR4OiB4ICogMiAvIHRoaXMud2lkdGggLSAxLFxuXHRcdFx0eTogMSAtIHkgKiAyIC8gdGhpcy5oZWlnaHRcblx0XHR9O1xuXHR9XG5cblx0LyoqXG5cdCAqIEBwYXJhbSAge30geD0wXG5cdCAqIEBwYXJhbSAge30geT0wXG5cdCAqL1xuXHRjb252ZXJ0Q2xpcFRvU2NyZWVuKHggPSAwLCB5ID0gMCkge1xuXHRcdHJldHVybiB7XG5cdFx0XHR4OiAoeCArIDEpICogdGhpcy53aWR0aCAvIDIsXG5cdFx0XHR5OiAoMSAtIHkpICogdGhpcy5oZWlnaHQgLyAyXG5cdFx0fTtcblx0fVxuXG5cdC8qKlxuXHQgKiDph43mlrDluIPlsYBcblx0ICovXG5cdHJlc2l6ZSgpIHtcbiAgICAgICAgY29uc3QgcmF0aW8gPSB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbztcbiAgICAgICAgdGhpcy5waXhlbFJhdGlvID0gcmF0aW87XG5cdFx0Y29uc3Qgd2lkdGggPSAodGhpcy5jb25maWcud2lkdGggfHwgdGhpcy5taW5pR0wuY29udGFpbmVyLmNsaWVudFdpZHRoKTtcblx0XHRjb25zdCBoZWlnaHQgPSAodGhpcy5jb25maWcuaGVpZ2h0IHx8IHRoaXMubWluaUdMLmNvbnRhaW5lci5jbGllbnRIZWlnaHQpO1xuICAgICAgICBjb25zdCByZW5kZXJXaWR0aCA9IHdpZHRoKnJhdGlvO1xuICAgICAgICBjb25zdCByZW5kZXJIZWlnaHQgPSBoZWlnaHQqcmF0aW9cblx0XHR0aGlzLm1pbmlHTC5jYW52YXNET00ud2lkdGggPSByZW5kZXJXaWR0aDtcblx0XHR0aGlzLm1pbmlHTC5jYW52YXNET00uaGVpZ2h0ID0gcmVuZGVySGVpZ2h0O1xuICAgICAgICB0aGlzLm1pbmlHTC5jYW52YXNET00uc3R5bGUud2lkdGggPSB3aWR0aCsncHgnO1xuICAgICAgICB0aGlzLm1pbmlHTC5jYW52YXNET00uc3R5bGUuaGVpZ2h0ID0gaGVpZ2h0KydweCc7XG5cdFx0dGhpcy5nbC52aWV3cG9ydCgwLCAwLCByZW5kZXJXaWR0aCwgcmVuZGVySGVpZ2h0KTtcbiAgICAgICAgdGhpcy5yZW5kZXJXaWR0aCA9IHJlbmRlcldpZHRoO1xuICAgICAgICB0aGlzLnJlbmRlckhlaWdodCA9IHJlbmRlckhlaWdodDtcblx0XHR0aGlzLndpZHRoID0gd2lkdGg7XG5cdFx0dGhpcy5oZWlnaHQgPSBoZWlnaHQ7XG5cdFx0dGhpcy5yYXRpbyA9IHdpZHRoIC8gaGVpZ2h0O1xuXHRcdHRoaXMubWFrZU1hdHJpeCgpO1xuXHR9XG5cblx0bWFrZU1hdHJpeCgpIHtcblx0XHQvLyDorqHnrpflpb3lnZDmoIfovazmjaLnn6npmLVcblx0XHRjb25zdCB0cmFuc2Zvcm0gPSBtYXQzLmNyZWF0ZSgpO1xuXHRcdG1hdDMuc2NhbGUodHJhbnNmb3JtLCB0cmFuc2Zvcm0sIFsyIC8gdGhpcy53aWR0aCwgLTIgLyB0aGlzLmhlaWdodF0pO1xuXHRcdC8vIGdsLW1hdHJpeOS8muS7peWIneasoei/m+ihjOaNoueul+eahOWdkOagh+ezu+S4uuWfuuWHhuepuumXtO+8jOadpei/m+ihjOaNoueul1xuXHRcdC8vIOS5n+WwseaYr+ivtOavj+asoei/m+ihjOi9rOaNoueahOaXtuWAme+8jOmDveaYr+WcqOWOn+efqemYteS4iuWBmuiuoeeul+WSjOi9rOaNou+8jOiAjOS4jeWPquaYr+aUueWPmOefqemYteeahOWAvFxuXHRcdG1hdDMudHJhbnNsYXRlKHRyYW5zZm9ybSwgdHJhbnNmb3JtLCBbLXRoaXMud2lkdGggLyAyLCAtdGhpcy5oZWlnaHQgLyAyXSk7XG5cdFx0dGhpcy5tYXRyaXggPSB0cmFuc2Zvcm07XG5cdFx0bWF0My5jb3B5KHRoaXMudHJhbnNmb3JtLCB0cmFuc2Zvcm0pO1xuXHR9XG59XG5leHBvcnQgZGVmYXVsdCBWaWV3UG9ydDtcbiIsImV4cG9ydCBkZWZhdWx0IHtcbiAgICB2ZXJ0ZXhTaGFkZXI6IGBcblx0cHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xuXHRhdHRyaWJ1dGUgdmVjMiBwb3NpdGlvbjtcblx0YXR0cmlidXRlIHZlYzQgY29sb3I7XG5cdHZhcnlpbmcgdmVjNCB2Q29sb3I7XG4gICAgdW5pZm9ybSBtYXQzIHRyYW5zZm9ybTtcbiAgICB1bmlmb3JtIG1hdDMgbW9kZWxWaWV3O1xuXHR1bmlmb3JtIGZsb2F0IHo7XG5cdHZvaWQgbWFpbigpXG5cdHtcblx0XHR2Q29sb3IgPSBjb2xvcjtcblx0XHR2ZWMzIG1Qb3NpdGlvbiA9IHRyYW5zZm9ybSAqIG1vZGVsVmlldyAqIHZlYzMocG9zaXRpb24sMS4pO1xuXHRcdGdsX1Bvc2l0aW9uID0gdmVjNChtUG9zaXRpb24ueHkseiwxLjApO1xuXHRcdFxuXHR9XG5cdGAsXG4gICAgZnJhZ21lbnRTaGFkZXI6IGBcblx0cHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xuXHR2YXJ5aW5nIHZlYzQgdkNvbG9yO1xuXHR2b2lkIG1haW4oKVxuXHR7XG5cdFx0Z2xfRnJhZ0NvbG9yID0gdkNvbG9yO1xuXHR9XG5cdGBcbn07XG4iLCJpbXBvcnQgbWVzaFNoYWRlciBmcm9tICcuLi9TaGFkZXJzL21lc2gnO1xuaW1wb3J0IEJhc2UgZnJvbSAnLi9CYXNlJztcbmltcG9ydCBsb2FkVGV4dHVyZSBmcm9tICcuLi9VdGlscy9Mb2FkVGV4dHVyZSc7XG5cbmNsYXNzIE1lc2ggZXh0ZW5kcyBCYXNlIHtcbiAgICBkcmF3VHlwZSA9ICdUUklBTkdMRVMnO1xuXG4gICAgb2Zmc2V0ID0gMDsvLyBhcnJheS5CWVRFU19QRVJfRUxFTUVOVCAqIGluZGljZXNFYWNoTGVuZ3RoXG5cbiAgICBjb25zdHJ1Y3Rvcihjb25maWcgPSB7XG4gICAgICAgIHdpcmVGcmFtZTogZmFsc2VcbiAgICB9KSB7XG4gICAgICAgIHN1cGVyKGNvbmZpZyk7XG4gICAgICAgIHRoaXMuc2hhZGVycyA9IHtcbiAgICAgICAgICAgIHZlcnRleDogbWVzaFNoYWRlci52ZXJ0ZXhTaGFkZXIsXG4gICAgICAgICAgICBmcmFnbWVudDogbWVzaFNoYWRlci5mcmFnbWVudFNoYWRlclxuICAgICAgICB9O1xuICAgICAgICB0aGlzLnVuaWZvcm1EYXRhLnogPSB7XG4gICAgICAgICAgICB2YWx1ZTogY29uZmlnLnogfHwgMSxcbiAgICAgICAgICAgIHR5cGU6ICd1bmlmb3JtMWYnXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuaW5pdChjb25maWcpO1xuICAgICAgICB0aGlzLnZTaXplID0gMjtcblxuICAgIH1cblxuICAgIHNldE1hcChzcmMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubG9hZFRleHR1cmUodGhpcy5nbCwgc3JjKS50aGVuKCh0ZXh0dXJlKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNldERhdGEodGV4dHVyZSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHNldERhdGEoZGF0YSwgaW5kaWNlcykge1xuXG4gICAgICAgIHRoaXMuZGlzcG9zZSgpO1xuXG4gICAgICAgIGNvbnN0IHBvaW50cyA9IFtdO1xuICAgICAgICBjb25zdCBjb2xvcnMgPSBbXTtcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICAgICAgZGF0YS5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgY29uc3QgY29vcmQgPSBbaXRlbS5wb3NpdGlvbi54LCBpdGVtLnBvc2l0aW9uLnldO1xuICAgICAgICAgICAgY29uc3QgY29sb3IgPSBpdGVtLmNvbG9yIHx8IFsxLCAxLCAwLCAxXTtcbiAgICAgICAgICAgIGNvbG9ycy5wdXNoKC4uLmNvbG9yKTtcbiAgICAgICAgICAgIHBvaW50cy5wdXNoKC4uLmNvb3JkKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMudmVydGV4ID0gcG9pbnRzO1xuICAgICAgICB0aGlzLnNldEJ1ZmZlckRhdGEocG9pbnRzLCAncG9zaXRpb24nLCAyKTtcbiAgICAgICAgdGhpcy5zZXRCdWZmZXJEYXRhKGNvbG9ycywgJ2NvbG9yJywgNCk7XG4gICAgICAgIHRoaXMuc2V0SW5kaWNlcyhpbmRpY2VzKTtcbiAgICB9XG5cbiAgICBzZXRCdWZmZXJEYXRhcyh7XG4gICAgICAgIHBvc2l0aW9uLCBjb2xvciwgaW5kaWNlcywgdXZzXG4gICAgfSkge1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICBtaW5pR0w6IHsgdmlld3BvcnQgfVxuICAgICAgICB9ID0gdGhpcztcbiAgICAgICAgdGhpcy5kaXNwb3NlKCk7XG5cbiAgICAgICAgdGhpcy52ZXJ0ZXggPSBwb3NpdGlvbjtcbiAgICAgICAgdGhpcy5zZXRCdWZmZXJEYXRhKHBvc2l0aW9uLCAncG9zaXRpb24nLCAyKTtcbiAgICAgICAgdGhpcy5zZXRCdWZmZXJEYXRhKGNvbG9yLCAnY29sb3InLCA0KTtcbiAgICAgICAgdGhpcy5zZXRCdWZmZXJEYXRhKHV2cywgJ3V2JywgMik7XG4gICAgICAgIHRoaXMuc2V0SW5kaWNlcyhpbmRpY2VzKTtcbiAgICB9XG5cbiAgICBzZXRJbmRpY2VzKGlucHV0KSB7XG4gICAgICAgIGxldCBpbmRpY2VzID0gW107XG4gICAgICAgIC8vIOaUr+aMgeaYvuekuue9keagvOe6v1xuICAgICAgICBpZiAodGhpcy5jb25maWcud2lyZUZyYW1lICYmIHRoaXMuZHJhd1R5cGUgPT09ICdUUklBTkdMRVMnKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0Lmxlbmd0aCAtIDI7IGkgKz0gMykge1xuICAgICAgICAgICAgICAgIGluZGljZXMucHVzaChpbnB1dFtpXSwgaW5wdXRbaSArIDFdLCBpbnB1dFtpICsgMV0sIGlucHV0W2kgKyAyXSwgaW5wdXRbaSArIDJdLCBpbnB1dFtpXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpbmRpY2VzID0gaW5wdXQ7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pbmRpY2VzID0gaW5kaWNlcztcbiAgICAgICAgLy8g6aG254K5YnVmZmVyXG4gICAgICAgIHRoaXMuZ2wuYmluZEJ1ZmZlcih0aGlzLmdsLkVMRU1FTlRfQVJSQVlfQlVGRkVSLCB0aGlzLmluZGljZXNQb2ludGVyKTtcbiAgICAgICAgdGhpcy5nbC5idWZmZXJEYXRhKHRoaXMuZ2wuRUxFTUVOVF9BUlJBWV9CVUZGRVIsIG5ldyBVaW50MTZBcnJheShpbmRpY2VzKSwgdGhpcy5nbC5TVEFUSUNfRFJBVyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICAvLyAyRCDlj6rpnIDopoHkuKTkuKrlnZDmoIfovbTmoIfor4bkvY3nva5cbiAgICAgICAgY29uc3Qgb2Zmc2V0ID0gMDsvLyDku47mlbDmja7nrKzlh6DkvY3lvIDlp4vlgY/np7tcbiAgICAgICAgY29uc3Qgbm9ybWFsaXplID0gZmFsc2U7XG5cbiAgICAgICAgLy8g5YiG5Yir57uR5a6a5pWw5o2u5Yiwc2hhZGVy56iL5bqP5LitXG4gICAgICAgIGZvciAobGV0IGtleSBpbiB0aGlzLmJ1ZmZlcnMpIHtcbiAgICAgICAgICAgIGNvbnN0IGJ1ZmZlckRhdGEgPSB0aGlzLmJ1ZmZlcnNba2V5XTtcbiAgICAgICAgICAgIGNvbnN0IGJ1ZmZlclBvc2l0aW9uID0gdGhpcy5nZXRBdHRyaWJMb2NhdGlvbihrZXkpO1xuICAgICAgICAgICAgLy8g5YiG5Yir57uR5a6a5pWw5o2u5Yiwc2hhZGVy56iL5bqP5LitXG4gICAgICAgICAgICB0aGlzLmdsLmJpbmRCdWZmZXIodGhpcy5nbC5BUlJBWV9CVUZGRVIsIGJ1ZmZlckRhdGEpO1xuICAgICAgICAgICAgdGhpcy5nbC52ZXJ0ZXhBdHRyaWJQb2ludGVyKGJ1ZmZlclBvc2l0aW9uLCB0aGlzLmJ1ZmZlcnNTaXplW2tleV0sIHRoaXMuZ2wuRkxPQVQsIG5vcm1hbGl6ZSwgMCwgb2Zmc2V0KTtcbiAgICAgICAgICAgIHRoaXMuZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkoYnVmZmVyUG9zaXRpb24pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8g5L2/55So6aG254K55pWw5o2uXG4gICAgICAgIHRoaXMuZ2wuYmluZEJ1ZmZlcih0aGlzLmdsLkVMRU1FTlRfQVJSQVlfQlVGRkVSLCB0aGlzLmluZGljZXNQb2ludGVyKTtcblxuICAgICAgICAvLyDliqDovb1zaGFkZXLnqIvluo9cbiAgICAgICAgdGhpcy5nbC51c2VQcm9ncmFtKHRoaXMuc2hhZGVyUHJvZ3JhbSk7XG5cbiAgICAgICAgdGhpcy5zZXRVbmlmb3JtRGF0YSgpO1xuXG4gICAgICAgIC8vIOa4suafk1xuICAgICAgICBpZiAodGhpcy5pbmRpY2VzLmxlbmd0aCkge1xuICAgICAgICAgICAgY29uc3QgZHJhd1R5cGUgPSB0aGlzLmNvbmZpZy53aXJlRnJhbWUgPyAnTElORVMnIDogdGhpcy5nbFt0aGlzLmRyYXdUeXBlXTtcbiAgICAgICAgICAgIC8vIG9mZnNldOW/hemhu+S5mOS7peexu+Wei+aVsOe7hOeahOmVv+W6pu+8jOaEj+WRs+edgOimgeS7juWGheWtmOS4reaVsOaNrueahOWvueW6lOWtl+iKguaVsOW8gOWni+eulyDmoLnmja7nsbvlnovkuZjlr7nlupTnmoRCWVRFU19QRVJfRUxFTUVOVFxuICAgICAgICAgICAgdGhpcy5nbC5kcmF3RWxlbWVudHMoZHJhd1R5cGUsIHRoaXMuaW5kaWNlcy5sZW5ndGgsIHRoaXMuZ2wuVU5TSUdORURfU0hPUlQsIHRoaXMub2Zmc2V0KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydCBkZWZhdWx0IE1lc2g7XG4iLCJleHBvcnQgZGVmYXVsdCB7XG5cdHZlcnRleFNoYWRlcjogKGNvbmZpZyk9Pntcblx0XHRyZXR1cm4gYFxuXHRcdHByZWNpc2lvbiBtZWRpdW1wIGZsb2F0O1xuXHRcdGF0dHJpYnV0ZSB2ZWMyIHBvc2l0aW9uO1xuXHRcdGF0dHJpYnV0ZSB2ZWM0IGNvbG9yO1xuXHRcdGF0dHJpYnV0ZSBmbG9hdCBzaXplO1xuXHRcdGF0dHJpYnV0ZSBmbG9hdCBpbml0VGltZTtcblx0XHR1bmlmb3JtIGZsb2F0IHo7XG5cdFx0dW5pZm9ybSBtYXQzIHRyYW5zZm9ybTtcblx0XHR2YXJ5aW5nIHZlYzQgdkNvbG9yO1xuXHRcdHVuaWZvcm0gZmxvYXQgdDtcbiAgICAgICAgdW5pZm9ybSBmbG9hdCBwaXhlbFJhdGlvO1xuXHRcdHZhcnlpbmcgZmxvYXQgdlRpbWU7XG5cdFx0XG5cdFx0dm9pZCBtYWluKClcblx0XHR7XG5cdFx0XHR2Q29sb3IgPSBjb2xvcjtcblx0XHRcdGdsX1BvaW50U2l6ZSA9IHNpemUgKiBwaXhlbFJhdGlvO1xuXHRcdFx0dmVjMyBtUG9zaXRpb24gPSB0cmFuc2Zvcm0gKiB2ZWMzKHBvc2l0aW9uLDEuKTtcblx0XHRcdGdsX1Bvc2l0aW9uID0gdmVjNChtUG9zaXRpb24ueHkseiwxLik7XG5cdFx0XHR2VGltZSA9IGluaXRUaW1lO1xuXHRcdH1cblx0XHRgO1xuXHR9LFxuXG5cdGZyYWdtZW50U2hhZGVyOiAoe2lzUm91bmQsIG1hcCwgaXNHcmFkdWFsfSk9Pntcblx0XHRjb25zb2xlLmxvZyhpc1JvdW5kKTtcblx0XHRyZXR1cm4gYFxuXHRcdHByZWNpc2lvbiBtZWRpdW1wIGZsb2F0O1xuXHRcdHVuaWZvcm0gZmxvYXQgdDtcblx0XHR1bmlmb3JtIGZsb2F0IGFudGlhbGlhcztcblx0XHR1bmlmb3JtIHNhbXBsZXIyRCBtYXA7XG5cdFx0dmFyeWluZyBmbG9hdCB2VGltZTtcblx0XHR2YXJ5aW5nIHZlYzQgdkNvbG9yO1xuXHRcdHZvaWQgbWFpbigpXG5cdFx0e1xuXHRcdFx0ZmxvYXQgZGlzdGFuY2UgPSBkaXN0YW5jZShnbF9Qb2ludENvb3JkLCB2ZWMyKDAuNSwgMC41KSk7XG5cdFx0JHtpc1JvdW5kID8gYFxuXHRcdFx0aWYgKGRpc3RhbmNlIDw9IDAuNSl7YCA6ICcnfVxuXHRcdFx0JHttYXAgPyBgXG5cdFx0XHRcdHZlYzQgdGV4ZWxDb2xvciA9IHRleHR1cmUyRCggbWFwLCBnbF9Qb2ludENvb3JkICk7IFxuXHRcdFx0XHRnbF9GcmFnQ29sb3IgPSB0ZXhlbENvbG9yO1xuXHRcdFx0XHQke2lzR3JhZHVhbCA/IGBcblx0XHRcdFx0Z2xfRnJhZ0NvbG9yLncgKj0gc2luKHQrdlRpbWUpKjAuNzUvMi4gKyAxLi0wLjc1LzIuYCA6ICcnfTtcblx0XHRcdFx0aWYodGV4ZWxDb2xvci53PD0wLjAxKXtcblx0XHRcdFx0XHRkaXNjYXJkO1xuXHRcdFx0XHR9XG5cdFx0XHRgIDogYFxuXHRcdFx0XHRnbF9GcmFnQ29sb3IgPSB2Q29sb3I7XG5cdFx0XHRcdCR7aXNHcmFkdWFsID8gYFxuXHRcdFx0XHRnbF9GcmFnQ29sb3IudyA9IDEuIC0gZGlzdGFuY2UqMi47XG5cdFx0XHRcdGdsX0ZyYWdDb2xvci53ICo9IHNpbih0K3ZUaW1lKSowLjc1LzIuICsgMS4tMC43NS8yLiA7YCA6ICcnfVxuXHRcdFx0YH1cblx0XHQke2lzUm91bmQgPyBgXG5cdFx0XHRcdGZsb2F0IHNtb290aFNpZGVSYXRpbyA9IHNtb290aHN0ZXAoMC4sYW50aWFsaWFzLCgwLjUtZGlzdGFuY2UpKTtcblx0XHRcdFx0Z2xfRnJhZ0NvbG9yLncgKj0gc21vb3RoU2lkZVJhdGlvO1xuXHRcdFx0fWVsc2V7XG5cdFx0XHRcdGRpc2NhcmQ7XG5cdFx0XHR9XG5cdFx0YCA6ICcnfVxuXHRcdH1cblx0XHRgO1xuXHR9XG59O1xuIiwiaW1wb3J0IHBvaW50U2hhZGVyIGZyb20gJy4uL1NoYWRlcnMvcG9pbnQnO1xuaW1wb3J0IEJhc2UgZnJvbSAnLi9CYXNlJztcblxuY2xhc3MgUG9pbnQgZXh0ZW5kcyBCYXNlIHtcblx0ZHJhd1R5cGUgPSAnUE9JTlRTJztcblx0dmVydGV4ID0gW107XG5cdG9mZnNldCA9IDA7XG5cdHZTaXplID0gMjtcblx0Y29uc3RydWN0b3IoY29uZmlnKSB7XG5cdFx0Y29uZmlnID0gT2JqZWN0LmFzc2lnbih7XG5cdFx0XHRpc1JvdW5kOiB0cnVlLFxuXHRcdFx0aW5pdFRpbWU6IGZhbHNlXG5cdFx0fSwgY29uZmlnKTtcblx0XHRzdXBlcihjb25maWcpO1xuXHRcdHRoaXMuc2hhZGVycyA9IHtcblx0XHRcdHZlcnRleDogY29uZmlnLnZlcnRleFNoYWRlciB8fCBwb2ludFNoYWRlci52ZXJ0ZXhTaGFkZXIoY29uZmlnKSxcblx0XHRcdGZyYWdtZW50OiBjb25maWcuZnJhZ21lbnRTaGFkZXIgfHwgcG9pbnRTaGFkZXIuZnJhZ21lbnRTaGFkZXIoY29uZmlnKVxuXHRcdH07XG5cdFx0dGhpcy51bmlmb3JtRGF0YSA9IHtcblx0XHRcdHo6IHtcblx0XHRcdFx0dmFsdWU6IDEsXG5cdFx0XHRcdHR5cGU6ICd1bmlmb3JtMWYnXG5cdFx0XHR9LFxuXHRcdFx0dDoge1xuXHRcdFx0XHR2YWx1ZTogMSxcblx0XHRcdFx0dHlwZTogJ3VuaWZvcm0xZidcblx0XHRcdH0sXG5cdFx0XHRhbnRpYWxpYXM6IHtcblx0XHRcdFx0dmFsdWU6IDAuMSxcblx0XHRcdFx0dHlwZTogJ3VuaWZvcm0xZidcblx0XHRcdH1cblx0XHR9O1xuXHRcdHRoaXMuaW5pdChjb25maWcpO1xuXHR9XG5cblx0c2V0RGF0YShkYXRhKSB7XG5cblx0XHR0aGlzLmRpc3Bvc2UoKTtcblxuXHRcdGNvbnN0IHBvaW50cyA9IFtdO1xuXHRcdGNvbnN0IGNvbG9ycyA9IFtdO1xuXHRcdGNvbnN0IHNpemUgPSBbXTtcblx0XHRjb25zdCB2VGltZSA9IFtdO1xuXHRcdHRoaXMuZGF0YSA9IGRhdGE7XG5cdFx0ZGF0YS5mb3JFYWNoKGl0ZW09Pntcblx0XHRcdHBvaW50cy5wdXNoKGl0ZW0ucG9zaXRpb24ueCwgaXRlbS5wb3NpdGlvbi55KTtcblx0XHRcdGNvbG9ycy5wdXNoKC4uLihpdGVtLmNvbG9yIHx8IFsxLCAwLCAwLCAxXSkpO1xuXHRcdFx0c2l6ZS5wdXNoKGl0ZW0uc2l6ZSB8fCAxMCk7XG5cdFx0XHR2VGltZS5wdXNoKGl0ZW0uaW5pdFRpbWUgfHwgdGhpcy5jb25maWcuaW5pdFRpbWUgfHwgMiAqIE1hdGgucmFuZG9tKCkgKiBNYXRoLlBJKTtcblx0XHR9KTtcblxuXHRcdHRoaXMudmVydGV4ID0gcG9pbnRzO1xuXHRcdHRoaXMuc2V0QnVmZmVyRGF0YShwb2ludHMsICdwb3NpdGlvbicsIDIpO1xuXHRcdHRoaXMuc2V0QnVmZmVyRGF0YShjb2xvcnMsICdjb2xvcicsIDQpO1xuXHRcdHRoaXMuc2V0QnVmZmVyRGF0YShzaXplLCAnc2l6ZScsIDEpO1xuXHRcdHRoaXMuc2V0QnVmZmVyRGF0YSh2VGltZSwgJ2luaXRUaW1lJywgMSk7XG5cdH1cblxuXHRzZXRCdWZmZXJEYXRhcyh7XG5cdFx0cG9zaXRpb24sIGNvbG9yLCBzaXplLCBpbml0VGltZVxuXHR9KSB7XG5cdFx0Y29uc3Qge1xuXHRcdFx0bWluaUdMOiB7dmlld3BvcnR9XG5cdFx0fSA9IHRoaXM7XG5cdFx0dGhpcy5kaXNwb3NlKCk7XG5cdFx0dGhpcy51bmlmb3JtRGF0YS50cmFuc2Zvcm0gPSB7XG5cdFx0XHR2YWx1ZTogdmlld3BvcnQudHJhbnNmb3JtLFxuXHRcdFx0dHlwZTogJ3VuaWZvcm1NYXRyaXgzZnYnXG5cdFx0fTtcblx0XHR0aGlzLnZlcnRleCA9IHBvc2l0aW9uO1xuXHRcdHRoaXMuc2V0QnVmZmVyRGF0YShwb3NpdGlvbiwgJ3Bvc2l0aW9uJywgMik7XG5cdFx0dGhpcy5zZXRCdWZmZXJEYXRhKGNvbG9yLCAnY29sb3InLCA0KTtcblx0XHR0aGlzLnNldEJ1ZmZlckRhdGEoc2l6ZSwgJ3NpemUnLCAxKTtcblx0XHRpZiAoaW5pdFRpbWUpIHtcblx0XHRcdHRoaXMuc2V0QnVmZmVyRGF0YShpbml0VGltZSwgJ2luaXRUaW1lJywgMSk7XG5cdFx0fVxuXHR9XG5cbn1cbmV4cG9ydCBkZWZhdWx0IFBvaW50O1xuIiwiZXhwb3J0IGRlZmF1bHQge1xuXHQvLyDlhYjmsYLov57mjqXnur/nhLblkI7lho3msYLlnoLnur9cblx0Ly8g5rGC5Ye6562J5q+U5pS+5aSn55qE5YC8XG5cdHZlcnRleFNoYWRlcjogYFxuXHRwcmVjaXNpb24gbG93cCBmbG9hdDtcblx0YXR0cmlidXRlIHZlYzIgbm93O1xuXHRhdHRyaWJ1dGUgdmVjMiBwcmU7XG5cdGF0dHJpYnV0ZSB2ZWMyIG5leHQ7XG5cdGF0dHJpYnV0ZSBmbG9hdCBzaWRlO1xuXHR1bmlmb3JtIGZsb2F0IHdpZHRoO1xuXHR1bmlmb3JtIGZsb2F0IGFzcGVjdDtcblx0dW5pZm9ybSBtYXQzIHRyYW5zZm9ybTtcblx0dW5pZm9ybSBmbG9hdCBvZmZzZXQ7XG5cdHZhcnlpbmcgZmxvYXQgdlNpZGU7XG5cdHZvaWQgbWFpbigpXG5cdHtcblx0XHR2U2lkZSA9IHNpZGU7XG5cblx0XHQvLyDlhYjovazmjaLlnZDmoIfns7tcblx0XHR2ZWMyIG1Ob3cgPSAodHJhbnNmb3JtKnZlYzMobm93LDEuKSkueHk7XG5cdFx0dmVjMiBtTmV4dCA9ICh0cmFuc2Zvcm0qdmVjMyhuZXh0LDEuKSkueHk7XG5cdFx0dmVjMiBtUHJlID0gKHRyYW5zZm9ybSp2ZWMzKHByZSwxLikpLnh5O1xuXHRcdHZlYzIgX25vdyA9IHZlYzIobU5vdyk7XG5cdFx0dmVjMiBfbmV4dCA9IHZlYzIobU5leHQpO1xuXHRcdHZlYzIgX3ByZSA9ICB2ZWMyKG1QcmUpO1xuXHRcblx0XHQvLyDlhYjmiormnKzlnZDmoIfns7vnmoTlnZDmoIfmlL7lpKfvvIzlkoznnJ/lrp7nmoTlpJbnlYzlnZDmoIfkuIDmoLcs6L+Z5qC35rGC5Ye65p2l55qE55u45a+55ZCR6YeP5piv5YeG56Gu55qE77yM5aaC5p6c5Zyo5ZCO6Z2i5LmL6Ze05a+5bm9ybWFs6L+b6KGM5Y+Y5YyW77yM5bCx5Lya5b6X5Ye66ZSZ6K+v55qE57uT5p6cXG5cdFx0X25vdy54ICo9IGFzcGVjdDtcblx0XHRfbmV4dC54ICo9IGFzcGVjdDtcblx0XHRfcHJlLnggKj0gYXNwZWN0O1xuXHRcdFxuXHRcdHZlYzIgcG9pbnQwXzEgPSBub3JtYWxpemUoX25vdyAtIF9wcmUpO1xuXHRcdHZlYzIgcG9pbnQyXzEgPSBub3JtYWxpemUoX25leHQgLSBfbm93KTtcblx0XHR2ZWMyIHBvaW50Ml8xXzB2ID0gbm9ybWFsaXplKHBvaW50Ml8xICsgcG9pbnQwXzEpO1xuXHRcdFxuXHRcdHZlYzIgbm9ybWFsID0gdmVjMiggLXBvaW50Ml8xXzB2LnkgLCBwb2ludDJfMV8wdi54ICk7XG5cdFx0dmVjMiBvZmZzZXRzID0gb2Zmc2V0Km5vcm1hbDtcblxuXHRcdC8v6L+Z5Liq566X5rOV5LiL5YWI5pS+5aSnLOaxguWHuueahE5vcm1hbOavlOS+i+WcqOaUvuWkp+eahOWdkOagh+ezu+S4i+aYr+WvueeahO+8jOagueaNrui/meS4qm5vcm1hbOaxguWHuuaUvuWkp+eahOavlOS+i1xuXHRcdGZsb2F0IHJhdGlvID0gc3FydCgxLjAgLSBwb3coZG90KG5vcm1hbCxwb2ludDBfMSksMi4wKSk7XG5cdFx0dmVjMiBkaXIgPSBub3JtYWwgKiB3aWR0aC9yYXRpbyAqIC41ICogc2lkZSArIG9mZnNldHM7XG5cblx0XHQvLyDlvpflh7rnmoR45Z2Q5qCH5Lya6KKr5pS+5aSn77yM6L+Z6YeM6KaB6Zmk5o6JLOiusOW+l+imgeeUqOi9rOaNouWQjuWdkOagh+i/m+ihjOWKoOWHj1xuXHRcdGdsX1Bvc2l0aW9uID0gdmVjNChtTm93LnggKyBkaXIueC9hc3BlY3QsbU5vdy55K2Rpci55ICwgMS4sIDEuKTtcblx0fVxuXHRgLFxuXG5cdGZyYWdtZW50U2hhZGVyOiBgXG5cdHByZWNpc2lvbiBsb3dwIGZsb2F0O1xuXHR1bmlmb3JtIHZlYzQgY29sb3I7XG5cdHZhcnlpbmcgZmxvYXQgdlNpZGU7XG5cdHZvaWQgbWFpbigpXG5cdHtcblx0XHRmbG9hdCBzbW9vdGhTaWRlUmF0aW8gPSBtYXgoMC4xLHNtb290aHN0ZXAoMC4sMC40LCgxLiAtIGFicyh2U2lkZSkpKSk7XG5cdFx0Z2xfRnJhZ0NvbG9yID0gY29sb3I7XG5cdFx0Z2xfRnJhZ0NvbG9yLncgPSBzbW9vdGhTaWRlUmF0aW87XG5cdH1cblx0YFxufSIsImltcG9ydCBzaGFkZXIgZnJvbSAnLi4vU2hhZGVycy93aWR0aExpbmUnO1xuaW1wb3J0IEJhc2UgZnJvbSAnLi9CYXNlJztcbmNsYXNzIFdpZHRoTGluZSBleHRlbmRzIEJhc2Uge1xuXHRkcmF3VHlwZSA9ICdUUklBTkdMRVMnLy8gXCJUUklBTkdMRV9TVFJJUFwiO1xuXHRzaGFkZXJzID0ge1xuXHRcdHZlcnRleDogc2hhZGVyLnZlcnRleFNoYWRlcixcblx0XHRmcmFnbWVudDogc2hhZGVyLmZyYWdtZW50U2hhZGVyXG5cdH1cblx0b2Zmc2V0PTA7XG5cblx0Y29uc3RydWN0b3IoY29uZmlnKSB7XG5cdFx0c3VwZXIoKTtcblx0XHRjb25maWcgPSBPYmplY3QuYXNzaWduKHtcblx0XHRcdHdpZHRoOiAyMCxcblx0XHRcdHo6IDEsXG5cdFx0XHRvZmZzZXQ6IDBcblx0XHR9LCBjb25maWcpO1xuXHRcdHRoaXMudW5pZm9ybURhdGEgPSB7XG5cdFx0XHR6OiB7XG5cdFx0XHRcdHZhbHVlOiBjb25maWcueiB8fCAxLFxuXHRcdFx0XHR0eXBlOiAndW5pZm9ybTFmJ1xuXHRcdFx0fVxuXHRcdH07XG5cdFx0dGhpcy5pbml0KGNvbmZpZyk7XG5cdH1cblxuXHRzZXREYXRhKGRhdGEpIHtcblx0XHRjb25zdCB7XG5cdFx0XHRtaW5pR0w6IHt2aWV3cG9ydH1cblx0XHR9ID0gdGhpcztcblxuXHRcdGlmICghZGF0YS5sZW5ndGggJiYgZGF0YS5sZW5ndGggPCAyKSByZXR1cm4gY29uc29sZS53YXJuKCduZWVkIGlucHV0IGRhdGEubGVuZ3RoID49IDInKTtcblxuXHRcdFxuXHRcdHRoaXMudW5pZm9ybURhdGEuY29sb3IgPSB7XG5cdFx0XHR2YWx1ZTogdGhpcy5jb25maWcuY29sb3IgfHwgWzEsIDAsIDEsIDFdLFxuXHRcdFx0dHlwZTogJ3VuaWZvcm00ZnYnXG5cdFx0fTtcblx0XHR0aGlzLnVuaWZvcm1EYXRhLndpZHRoID0ge1xuXHRcdFx0dmFsdWU6IDIgKiB0aGlzLmNvbmZpZy53aWR0aCAvIHRoaXMubWluaUdMLnZpZXdwb3J0LmhlaWdodCxcblx0XHRcdHR5cGU6ICd1bmlmb3JtMWYnXG5cdFx0fTtcblx0XHR0aGlzLnVuaWZvcm1EYXRhLm9mZnNldCA9IHtcblx0XHRcdHZhbHVlOiAyICogdGhpcy5jb25maWcub2Zmc2V0IC8gdGhpcy5taW5pR0wudmlld3BvcnQuaGVpZ2h0LFxuXHRcdFx0dHlwZTogJ3VuaWZvcm0xZidcblx0XHR9O1xuXHRcdHRoaXMuZGF0YSA9IGRhdGE7XG5cblx0XHRjb25zdCBwb2ludHMgPSBbXTtcblx0XHRkYXRhLmZvckVhY2goaXRlbT0+e1xuXHRcdFx0cG9pbnRzLnB1c2goaXRlbS5wb3NpdGlvbi54LCBpdGVtLnBvc2l0aW9uLnkpO1xuXHRcdH0pO1xuXG5cdFx0Ly8g55Sf5Lqn5Y+M5YCN54K5Zm9y5Lik5Liq6L65XG5cdFx0Y29uc3QgcmVzID0gdGhpcy5jYWxjU2lkZVBvaW50cyhwb2ludHMpO1xuXG5cdFx0dGhpcy5zZXRCdWZmZXJEYXRhKHJlcy5ub3dEYXRhLCAnbm93JywgMik7XG5cdFx0dGhpcy5zZXRCdWZmZXJEYXRhKHJlcy5wcmVEYXRhLCAncHJlJywgMik7XG5cdFx0dGhpcy5zZXRCdWZmZXJEYXRhKHJlcy5uZXh0RGF0YSwgJ25leHQnLCAyKTtcblx0XHR0aGlzLnNldEJ1ZmZlckRhdGEocmVzLnNpZGUsICdzaWRlJywgMSk7XG5cblx0XHQvLyDnlJ/miJDpobbngrlcblx0XHRjb25zdCBpbmRpY2VzID0gW107XG5cdFx0Y29uc3QgaW5kaWNlc0xlbmd0aCA9IHJlcy5ub3dEYXRhLmxlbmd0aCAvIDI7XG5cdFx0Ly8gVFJJQU5HTEVT5oOF5Ya1XG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBpbmRpY2VzTGVuZ3RoIC0gMjsgaSArPSAyKSB7XG5cdFx0XHRpbmRpY2VzLnB1c2goaSk7XG5cdFx0XHRpbmRpY2VzLnB1c2goaSArIDEpO1xuXHRcdFx0aW5kaWNlcy5wdXNoKGkgKyAyKTtcblx0XHRcdGluZGljZXMucHVzaChpICsgMik7XG5cdFx0XHRpbmRpY2VzLnB1c2goaSArIDEpO1xuXHRcdFx0aW5kaWNlcy5wdXNoKGkgKyAzKTtcblx0XHR9XG5cdFx0Ly8gU3RyaXDpgIDljJbmlrnmoYjlpKrlj43kurrnsbvvvIzkuI1oYWNrIOS6hlxuXHRcdC8vIGZvciAobGV0IGkgPSAwOyBpIDwgaW5kaWNlc0xlbmd0aDsgaSsrKSB7XG5cdFx0Ly8gXHQvLzAxMiAyMTMgMjMzIDMzNiAzNjYgNjY3IDY3OFxuXHRcdC8vIFx0Ly8gNCA9PjMgNT0+NiAvL+mAgOWMlui/h+eoi1xuXHRcdC8vIFx0Ly8gZGF0YVtsZW5ndGggLSAxXSxcblx0XHQvLyBcdGluZGljZXMucHVzaChpKTtcblx0XHQvLyB9XG5cdFx0dGhpcy5zZXRJbmRpY2VzKGluZGljZXMpO1xuXHRcdHRoaXMucmVzID0gcmVzO1xuICAgIH1cblxuICAgIGFkZERhdGEoZGF0YSkge1xuXG4gICAgfVxuXG5cdGNhbGNTaWRlUG9pbnRzKGRhdGEgPSBbXSkge1xuXHRcdGNvbnN0IGxlbmd0aCA9IGRhdGEubGVuZ3RoO1xuXHRcdGxldCBzaWRlID0gW107XG5cdFx0bGV0IG5leHREYXRhID0gW107XG5cdFx0bGV0IHByZURhdGEgPSBbXTtcblx0XHRsZXQgbm93RGF0YSA9IFtdO1xuXHRcdC8vIOeUn+S6p+WPjOWAjeeCuWZvcuS4pOS4qui+uVxuXHRcdGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpICs9IDIpIHtcblx0XHRcdHNpZGUucHVzaCgxLCAtMSk7XG5cdFx0XHRub3dEYXRhLnB1c2goZGF0YVtpXSwgZGF0YVtpICsgMV0sIGRhdGFbaV0sIGRhdGFbaSArIDFdKTtcblx0XHR9XG5cdFx0Y29uc3QgbmV4dCA9IFsyICogZGF0YVtsZW5ndGggLSAyXSAtIGRhdGFbbGVuZ3RoIC0gNF0sIDIgKiBkYXRhW2xlbmd0aCAtIDFdIC0gZGF0YVtsZW5ndGggLSAzXV07XG5cdFx0bmV4dERhdGEgPSBbXG5cdFx0XHQuLi5ub3dEYXRhLFxuXHRcdFx0Li4ubmV4dCwgLi4ubmV4dFxuXHRcdF07XG5cdFx0bmV4dERhdGEuc3BsaWNlKDAsIDQpO1xuXHRcdGNvbnN0IHByZSA9IFsyICogZGF0YVswXSAtIGRhdGFbMl0sIDIgKiBkYXRhWzFdIC0gZGF0YVszXV07XG5cdFx0cHJlRGF0YSA9IFtcblx0XHRcdC4uLnByZSxcblx0XHRcdC4uLnByZSxcblx0XHRcdC4uLm5vd0RhdGFdO1xuXHRcdHJldHVybiB7XG5cdFx0XHRub3dEYXRhLFxuXHRcdFx0cHJlRGF0YSxcblx0XHRcdHNpZGUsXG5cdFx0XHRuZXh0RGF0YVxuXHRcdH07XG5cdH1cblxuXHRyZW5kZXIoKSB7XG5cdFx0Ly8gMkQg5Y+q6ZyA6KaB5Lik5Liq5Z2Q5qCH6L205qCH6K+G5L2N572uXG5cdFx0Y29uc3Qgb2Zmc2V0ID0gMDsvLyDku47mlbDmja7nrKzlh6DkvY3lvIDlp4vlgY/np7tcblx0XHRjb25zdCBub3JtYWxpemUgPSBmYWxzZTtcblxuXHRcdGZvciAobGV0IGtleSBpbiB0aGlzLmJ1ZmZlcnMpIHtcblx0XHRcdGNvbnN0IGJ1ZmZlckRhdGEgPSB0aGlzLmJ1ZmZlcnNba2V5XTtcblx0XHRcdGNvbnN0IGJ1ZmZlclBvc2l0aW9uID0gdGhpcy5nZXRBdHRyaWJMb2NhdGlvbihrZXkpO1xuXHRcdFx0Ly8g5YiG5Yir57uR5a6a5pWw5o2u5Yiwc2hhZGVy56iL5bqP5LitXG5cdFx0XHR0aGlzLmdsLmJpbmRCdWZmZXIodGhpcy5nbC5BUlJBWV9CVUZGRVIsIGJ1ZmZlckRhdGEpO1xuXHRcdFx0dGhpcy5nbC52ZXJ0ZXhBdHRyaWJQb2ludGVyKGJ1ZmZlclBvc2l0aW9uLCB0aGlzLmJ1ZmZlcnNTaXplW2tleV0sIHRoaXMuZ2wuRkxPQVQsIG5vcm1hbGl6ZSwgMCwgb2Zmc2V0KTtcblxuXHRcdFx0Ly8gdG9kbzp3ZWJnbDIuMCDlrp7kvovmlbDnu4Tog73lh4/lsJHlkIzmoLflvaLnirbkvYbmuLLmn5PkuI3lkIznmoTpq5jmgKfog73mlrnmoYhcblx0XHRcdHRoaXMuZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkoYnVmZmVyUG9zaXRpb24pO1xuXHRcdH1cblxuXHRcdC8vIOS9v+eUqOmhtueCueaVsOaNrlxuXHRcdHRoaXMuZ2wuYmluZEJ1ZmZlcih0aGlzLmdsLkVMRU1FTlRfQVJSQVlfQlVGRkVSLCB0aGlzLmluZGljZXNQb2ludGVyKTtcblxuXHRcdC8vIOWKoOi9vXNoYWRlcueoi+W6j1xuXHRcdHRoaXMuZ2wudXNlUHJvZ3JhbSh0aGlzLnNoYWRlclByb2dyYW0pO1xuXG5cdFx0dGhpcy5zZXRVbmlmb3JtRGF0YSgpO1xuXG5cdFx0Ly8g5riy5p+TXG5cdFx0aWYgKHRoaXMuaW5kaWNlcy5sZW5ndGgpIHt0aGlzLmdsLmRyYXdFbGVtZW50cyh0aGlzLmdsW3RoaXMuZHJhd1R5cGVdLCB0aGlzLmluZGljZXMubGVuZ3RoLCB0aGlzLmdsLlVOU0lHTkVEX1NIT1JULCB0aGlzLm9mZnNldCk7fVxuXHR9XG59XG5leHBvcnQgZGVmYXVsdCBXaWR0aExpbmU7XG4iLCJcbmltcG9ydCBNZXNoIGZyb20gJy4uL01lc2gvTWVzaCc7XG5pbXBvcnQgUG9pbnQgZnJvbSAnLi4vTWVzaC9Qb2ludCc7XG5pbXBvcnQgTGluZSBmcm9tICcuLi9NZXNoL0xpbmUnO1xuaW1wb3J0IFdpZHRoTGluZSBmcm9tICcuLi9NZXNoL1dpZHRoTGluZSc7XG5pbXBvcnQgeyBtYXQzIH0gZnJvbSAnZ2wtbWF0cml4Jztcbi8qKlxuICogQGNsYXNzXG4gKi9cbmNsYXNzIENhbnZhcyB7XG4gICAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgICAgIHRoaXMuaW5kZXggPSAwO1xuICAgICAgICB0aGlzLm1lc2hlcyA9IFtdO1xuICAgICAgICB0aGlzLm1pbmlHTCA9IGNvbmZpZy5taW5pR0w7XG4gICAgICAgIHRoaXMuZ2wgPSB0aGlzLm1pbmlHTC5nbDtcbiAgICAgICAgLy8g5Z+656GA5riy5p+T5Lul5LiL57G777yM5YW25LuW5b2i54q26K6p6K6p55So5oi36Ieq5bexbmV3XG4gICAgICAgIC8vIOeJuueJsuS4gOS6m+aAp+iDve+8jOa4suafk+WkmuasoWRyYXdFbGVtZW50c+adpemBv+WFjemAmui/h+mAgOWMluS4ieinkuW9ouWQiOW5tuW9oueKtu+8jOWvvOiHtOeahOS6i+S7tuWkhOeQhuWbsOmavu+8iOmcgOimgeWIhuWxguWkhOeQhuWQiOW5tueahOWbvuWxgu+8jOeEtuWQjuaMieeFp+WDj+e0oOWOu+ajgOa1i++8jOavlOi+g+aBtuW/g++8iVxuICAgICAgICB0aGlzLm1lc2ggPSBuZXcgTWVzaChjb25maWcubWVzaENvbmZpZyk7XG4gICAgICAgIHRoaXMucG9pbnQgPSBuZXcgUG9pbnQoY29uZmlnLnBvaW50Q29uZmlnKTtcbiAgICAgICAgdGhpcy5saW5lID0gbmV3IExpbmUoY29uZmlnLmxpbmVDb25maWcpO1xuICAgICAgICB0aGlzLndpZHRoTGluZSA9IG5ldyBXaWR0aExpbmUoY29uZmlnLndpZHRoTGluZUNvbmZpZyk7XG4gICAgICAgIHRoaXMuYWRkKHRoaXMubWVzaCk7XG4gICAgICAgIHRoaXMuYWRkKHRoaXMucG9pbnQpO1xuICAgICAgICB0aGlzLmFkZCh0aGlzLmxpbmUpO1xuICAgICAgICB0aGlzLmFkZCh0aGlzLndpZHRoTGluZSk7XG4gICAgfVxuXG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgdGhpcy5tZXNoZXMuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICAgIHRoaXMucmVtb3ZlKGl0ZW0pO1xuICAgICAgICAgICAgaXRlbS5kZXN0cm95ICYmIGl0ZW0uZGVzdHJveSgpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5tZXNoZXMgPSBbXTtcbiAgICB9XG5cbiAgICB0b0RhdGFVcmwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdsLmNhbnZhcy50b0RhdGFVcmwoKTtcbiAgICB9XG5cbiAgICB1cGRhdGUgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICAgICAgY29uc3QgZGVsdGEgPSB0aW1lIC0gdGhpcy5iZWZvcmVUaW1lO1xuICAgICAgICB0aGlzLmJlZm9yZVRpbWUgPSB0aW1lO1xuICAgICAgICB0aGlzLnJlbmRlcihkZWx0YSk7XG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnVwZGF0ZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBwYXJhbSAge30gbWVzaFxuICAgICAqIEBwYXJhbSAge30gW2tleV1cbiAgICAgKiBAcmV0dXJucyB7U3RyaW5nfSBrZXlcbiAgICAgKi9cbiAgICBhZGQobWVzaCkge1xuICAgICAgICB0aGlzLm1lc2hlcy5wdXNoKG1lc2gpO1xuICAgICAgICBtZXNoLm9uQWRkICYmIG1lc2gub25BZGQodGhpcy5taW5pR0wpO1xuICAgICAgICBtZXNoLnBhcmVudCA9IHRoaXM7XG4gICAgICAgIHJldHVybiBtZXNoO1xuICAgIH1cblxuICAgIHJlbW92ZShjaGlsZCkge1xuICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMubWVzaGVzLmluZGV4T2YoY2hpbGQpO1xuICAgICAgICB0aGlzLm1lc2hlcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cblxuICAgIGFkZENoaWxkKCkge1xuICAgICAgICB0aGlzLmFkZC5jYWxsKHRoaXMsIC4uLmFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgcmVtb3ZlQ2hpbGQoKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlLmNhbGwodGhpcywgLi4uYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICByZW5kZXIoZGVsdGEpIHtcbiAgICAgICAgY29uc3QgeyBnbCB9ID0gdGhpcztcbiAgICAgICAgdGhpcy5taW5pR0wuZmlyZSgnYmVmb3JlcmVuZGVyJywgZGVsdGEpO1xuICAgICAgICAvLyDmuIXnqbpcbiAgICAgICAgZ2wuY2xlYXJEZXB0aCgxLjApO1xuICAgICAgICAvLyBnbC5lbmFibGUoZ2wuREVQVEhfVEVTVCk7XG4gICAgICAgIGdsLmRpc2FibGUoZ2wuREVQVEhfVEVTVCk7XG4gICAgICAgIGdsLmRlcHRoRnVuYyhnbC5MRVFVQUwpO1xuICAgICAgICBnbC5kaXNhYmxlKGdsLkNVTExfRkFDRSk7XG5cbiAgICAgICAgZ2wuY2xlYXIoZ2wuQ09MT1JfQlVGRkVSX0JJVCB8IGdsLkRFUFRIX0JVRkZFUl9CSVQpO1xuICAgICAgICBmb3IgKGxldCBrZXkgaW4gdGhpcy5tZXNoZXMpIHtcbiAgICAgICAgICAgIHRoaXMucmVuZGVyTWVzaCh0aGlzLm1lc2hlc1trZXldLCBkZWx0YSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gIHt9IG1lc2hcbiAgICAgKiBAcGFyYW0gIHt9IGRlbHRhXG4gICAgICogQHBhcmFtICB7fSBwYXJlbnRNYXRyaXgg5LiA57qn57qn5Lyg5LiL5p2l55qE55+p6Zi1XG4gICAgICovXG4gICAgcmVuZGVyTWVzaChtZXNoLCBkZWx0YSwgcGFyZW50TWF0cml4KSB7XG4gICAgICAgIGNvbnN0IHsgZ2wgfSA9IHRoaXM7XG5cbiAgICAgICAgY29uc3QgYmxlbmRNb2RlID0gKG1lc2gudGV4dHVyZSB8fCB7fSkucHJlbXVsdGlwbHlBbHBoYSA/ICdPTkUnIDogJ1NSQ19BTFBIQSc7XG4gICAgICAgIGdsLmVuYWJsZShnbC5CTEVORCk7XG4gICAgICAgIGdsLmJsZW5kRnVuYyhnbFtibGVuZE1vZGVdLCBtZXNoLmJsZW5kTW9kZSB8fCBnbC5PTkVfTUlOVVNfU1JDX0FMUEhBKTtcblxuICAgICAgICAvLyDlhpnlhaXmt7HluqbnvJPlhrJcbiAgICAgICAgaWYgKG1lc2gudmlzaWJsZSkge1xuICAgICAgICAgICAgdGhpcy5tYWtlVHJhbnNmb3JtKG1lc2gsIHBhcmVudE1hdHJpeCk7XG4gICAgICAgICAgICB0aGlzLm1ha2VOZWVkVW5pZm9ybShtZXNoKTtcbiAgICAgICAgICAgIG1lc2gucmVuZGVyKGRlbHRhKTtcbiAgICAgICAgICAgIC8vIOabtOaWsOWtkOWFg+e0oFxuICAgICAgICAgICAgaWYgKG1lc2guY2hpbGRyZW4pIHtcbiAgICAgICAgICAgICAgICBtZXNoLmNoaWxkcmVuLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyTWVzaChpdGVtLCBkZWx0YSwgbWVzaC51bmlmb3JtRGF0YS5tb2RlbFZpZXcudmFsdWUpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgbWFrZU5lZWRVbmlmb3JtKGl0ZW0pe1xuICAgICAgICBpdGVtLnVuaWZvcm1EYXRhLmFzcGVjdCA9IHtcblx0XHRcdHZhbHVlOiB0aGlzLm1pbmlHTC52aWV3cG9ydC5yYXRpbyxcblx0XHRcdHR5cGU6ICd1bmlmb3JtMWYnXG5cdFx0fTtcbiAgICAgICAgaXRlbS51bmlmb3JtRGF0YS5waXhlbFJhdGlvID0ge1xuXHRcdFx0dmFsdWU6IHRoaXMubWluaUdMLnZpZXdwb3J0LnBpeGVsUmF0aW8sXG5cdFx0XHR0eXBlOiAndW5pZm9ybTFmJ1xuXHRcdH07XG4gICAgfVxuXG4gICAgbWFrZVRyYW5zZm9ybShpdGVtLCBwYXJlbnRNYXRyaXgpIHtcbiAgICAgICAgaWYgKHBhcmVudE1hdHJpeCkge1xuICAgICAgICAgICAgY29uc3QgbW9kZWxWaWV3ID0gbWF0My5tdWwobWF0My5jcmVhdGUoKSwgcGFyZW50TWF0cml4LCBpdGVtLm1hdHJpeCk7XG4gICAgICAgICAgICBpdGVtLnVuaWZvcm1EYXRhLm1vZGVsVmlldyA9IHtcbiAgICAgICAgICAgICAgICB2YWx1ZTogbW9kZWxWaWV3LFxuICAgICAgICAgICAgICAgIHR5cGU6ICd1bmlmb3JtTWF0cml4M2Z2J1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGl0ZW0udW5pZm9ybURhdGEubW9kZWxWaWV3ID0ge1xuICAgICAgICAgICAgICAgIHZhbHVlOiBpdGVtLm1hdHJpeCxcbiAgICAgICAgICAgICAgICB0eXBlOiAndW5pZm9ybU1hdHJpeDNmdidcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaXRlbS51bmlmb3JtRGF0YS50cmFuc2Zvcm0gPSB7XG4gICAgICAgICAgICB2YWx1ZTogdGhpcy5taW5pR0wudmlld3BvcnQudHJhbnNmb3JtLFxuICAgICAgICAgICAgdHlwZTogJ3VuaWZvcm1NYXRyaXgzZnYnXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgQ2FudmFzO1xuIiwiaW1wb3J0IHttYXQzfSBmcm9tICdnbC1tYXRyaXgnO1xuY2xhc3MgQ29udHJvbGxlciB7XG4gICAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgICAgIHRoaXMubWluaUdMID0gY29uZmlnLm1pbmlHTDtcbiAgICAgICAgdGhpcy52aWV3cG9ydCA9IHRoaXMubWluaUdMLnZpZXdwb3J0O1xuXHRcdHRoaXMuZ2wgPSB0aGlzLm1pbmlHTC5nbDtcblx0XHR0aGlzLmNvbmZpZyA9IE9iamVjdC5hc3NpZ24oe1xuICAgICAgICAgICAgLy8g6buY6K6k5Y+C5pWwXG4gICAgICAgIH0sIGNvbmZpZy5jb25maWcpO1xuICAgICAgICBpZiAoIWNvbmZpZy5kaXNhYmxlQ29udHJvbGxlcikge1xuICAgICAgICAgICAgdGhpcy5hZGRFdmVudHMoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm1hdHJpeCA9IG1hdDMuY3JlYXRlKCk7XG4gICAgfVxuXG4gICAgYWRkRXZlbnRzKCkge1xuICAgICAgICBjb25zdCB7Y29udGFpbmVyfSA9IHRoaXMubWluaUdMO1xuICAgICAgICBjb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgKGUpPT57XG4gICAgICAgICAgICBpZiAoZS5jdHJsS2V5KSB7ZS5wcmV2ZW50RGVmYXVsdCgpO3JldHVybjt9XG4gICAgICAgICAgICB0aGlzLnN0YXJ0WFkgPSB7XG4gICAgICAgICAgICAgICAgeDogZS5vZmZzZXRYLFxuICAgICAgICAgICAgICAgIHk6IGUub2Zmc2V0WSxcbiAgICAgICAgICAgICAgICBzdGFydFg6IHRoaXMudmlld3BvcnQudHJhbnNsYXRlWzBdLFxuICAgICAgICAgICAgICAgIHN0YXJ0WTogdGhpcy52aWV3cG9ydC50cmFuc2xhdGVbMV1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLmFkZE1vdmVFdmVudHMoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCd3aGVlbCcsIChlKT0+e1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgdGhpcy56b29tKGUuZGVsdGFZID4gMCA/IDAuOTkgOiAxLjAxLCBlLnBhZ2VYLCBlLnBhZ2VZKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgYWRkTW92ZUV2ZW50cygpIHtcbiAgICAgICAgY29uc3Qge2NvbnRhaW5lcn0gPSB0aGlzLm1pbmlHTDtcbiAgICAgICAgY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHRoaXMub25Nb3VzZU1vdmUpO1xuICAgICAgICBjb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMub25Nb3VzZVVwKTtcbiAgICB9XG5cbiAgICBvbk1vdXNlTW92ZSA9IChlKT0+e1xuXG4gICAgICAgIGNvbnN0IHggPSBlLm9mZnNldFggLSB0aGlzLnN0YXJ0WFkueCArIHRoaXMuc3RhcnRYWS5zdGFydFg7XG4gICAgICAgIGNvbnN0IHkgPSBlLm9mZnNldFkgLSB0aGlzLnN0YXJ0WFkueSArIHRoaXMuc3RhcnRYWS5zdGFydFk7XG4gICAgICAgIHRoaXMubW92ZVRvKHgsIHkpO1xuICAgIH1cblxuICAgIG9uTW91c2VVcD0oKT0+e1xuICAgICAgICBjb25zdCB7Y29udGFpbmVyfSA9IHRoaXMubWluaUdMO1xuICAgICAgICBjb250YWluZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgdGhpcy5vbk1vdXNlTW92ZSk7XG4gICAgICAgIGNvbnRhaW5lci5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgdGhpcy5vbk1vdXNlVXApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gIHt9IHNjYWxlXG4gICAgICogQHBhcmFtICB7fSBjeFxuICAgICAqIEBwYXJhbSAge30gY3lcbiAgICAgKi9cbiAgICB6b29tVG8oc2NhbGUsIGN4LCBjeSkge1xuXG4gICAgICAgIGxldCBjaGFuZ2VTY2FsZSA9IHNjYWxlIC8gdGhpcy52aWV3cG9ydC5zY2FsZTtcbiAgICAgICAgdGhpcy56b29tKGNoYW5nZVNjYWxlLCBjeCwgY3kpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSAge30gc2NhbGVcbiAgICAgKiBAcGFyYW0gIHt9IGN4XG4gICAgICogQHBhcmFtICB7fSBjeVxuICAgICAqL1xuICAgIHpvb20oc2NhbGUsIGN4LCBjeSkge1xuICAgICAgICAvLyDmsYLlj5jmjaLliY3nmoTlsY/luZXlnZDmoIdcbiAgICAgICAgY29uc3QgY2FudmFzUG9zID0gW1xuICAgICAgICAgICAgKGN4IC0gdGhpcy52aWV3cG9ydC50cmFuc2xhdGVbMF0pIC8gdGhpcy52aWV3cG9ydC5zY2FsZSxcbiAgICAgICAgICAgIChjeSAtIHRoaXMudmlld3BvcnQudHJhbnNsYXRlWzFdKSAvIHRoaXMudmlld3BvcnQuc2NhbGVcbiAgICAgICAgXTtcbiAgICAgICAgY29uc3QgbmV4dFNjYWxlID0gc2NhbGUgKiB0aGlzLnZpZXdwb3J0LnNjYWxlO1xuICAgICAgICAvLyDmsYLlh7rlj5jmjaLlkI7nmoTlgY/np7vlnZDmoIdcbiAgICAgICAgY29uc3QgeCA9IGN4IC0gY2FudmFzUG9zWzBdICogbmV4dFNjYWxlO1xuICAgICAgICBjb25zdCB5ID0gY3kgLSBjYW52YXNQb3NbMV0gKiBuZXh0U2NhbGU7XG4gICAgICAgIHRoaXMudHJhbnNmb3JtKG5leHRTY2FsZSwgeCwgeSk7XG4gICAgfVxuXG4gICAgLy8g6L+Z5LiqeCx55piv5b2T5YmN5bGP5bmV55qEeCx5LOWPmOaNouWQjueahFxuICAgIC8qKlxuICAgICAqIEBwYXJhbSAge30geFxuICAgICAqIEBwYXJhbSAge30geVxuICAgICAqL1xuICAgIG1vdmVUbyh4LCB5KSB7XG4gICAgICAgIGNvbnN0IHtzY2FsZX0gPSB0aGlzLnZpZXdwb3J0O1xuICAgICAgICB0aGlzLnRyYW5zZm9ybShzY2FsZSwgeCwgeSk7XG4gICAgfVxuXG4gICAgbW92ZSh4LCB5KSB7XG4gICAgICAgIGNvbnN0IHtzY2FsZX0gPSB0aGlzLnZpZXdwb3J0O1xuICAgICAgICB4ID0geCArIHRoaXMudmlld3BvcnQudHJhbnNsYXRlWzBdO1xuICAgICAgICB5ID0geSArIHRoaXMudmlld3BvcnQudHJhbnNsYXRlWzFdO1xuICAgICAgICB0aGlzLnRyYW5zZm9ybShzY2FsZSwgeCwgeSk7XG4gICAgfVxuXG4gICAgLyoqIOi9rOaNouWIsOaMh+WumuaDheW9ou+8jOWFiOaUvuWkp+WQjuW5s+enu++8jOeEtuWQjuazqOWFpeWIsHZpZXdwb3J0LnRyYW5zZm9ybVxuICAgICAqIEBwYXJhbSAge30gc2NhbGVcbiAgICAgKiBAcGFyYW0gIHt9IHhcbiAgICAgKiBAcGFyYW0gIHt9IHlcbiAgICAgKi9cbiAgICB0cmFuc2Zvcm0oc2NhbGUsIHgsIHkpIHtcbiAgICAgICAgdGhpcy52aWV3cG9ydC50cmFuc2xhdGUgPSBbeCwgeV07XG4gICAgICAgIHRoaXMudmlld3BvcnQuc2NhbGUgPSBzY2FsZTtcbiAgICAgICAgdGhpcy5tYXRyaXggPSBtYXQzLmNyZWF0ZSgpO1xuICAgICAgICBtYXQzLnRyYW5zbGF0ZSh0aGlzLm1hdHJpeCwgdGhpcy5tYXRyaXgsIHRoaXMudmlld3BvcnQudHJhbnNsYXRlKTtcbiAgICAgICAgbWF0My5zY2FsZSh0aGlzLm1hdHJpeCwgdGhpcy5tYXRyaXgsIFtzY2FsZSwgc2NhbGVdKTtcbiAgICAgICAgbWF0My5tdWwodGhpcy52aWV3cG9ydC50cmFuc2Zvcm0sIHRoaXMudmlld3BvcnQubWF0cml4LCB0aGlzLm1hdHJpeCk7XG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMudmlld3BvcnQudHJhbnNmb3JtKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSAge30gcmFkXG4gICAgICogQHBhcmFtICB7fSBjeD10aGlzLnZpZXdwb3J0LndpZHRoLzJcbiAgICAgKiBAcGFyYW0gIHt9IGN5PXRoaXMudmlld3BvcnQuaGVpZ2h0LzJcbiAgICAgKi9cbiAgICByb3RhdGVUbyhyYWQsIGN4ID0gdGhpcy52aWV3cG9ydC53aWR0aCAvIDIsIGN5ID0gdGhpcy52aWV3cG9ydC5oZWlnaHQgLyAyKSB7XG4gICAgICAgIGxldCBjaGFuZ2VSYWQgPSByYWQgLSB0aGlzLnZpZXdwb3J0LnJvdGF0aW9uIHx8IDA7XG4gICAgICAgIHRoaXMucm90YXRlKGNoYW5nZVJhZCwgY3gsIGN5KTtcbiAgICB9XG5cbiAgICByb3RhdGUocmFkLCBjeCA9IHRoaXMudmlld3BvcnQud2lkdGggLyAyLCBjeSA9IHRoaXMudmlld3BvcnQuaGVpZ2h0IC8gMikge1xuICAgICAgICBjb25zdCB7dHJhbnNmb3JtfSA9IHRoaXMudmlld3BvcnQ7XG4gICAgICAgIHRoaXMudmlld3BvcnQucm90YXRpb24gKz0gcmFkO1xuICAgICAgICBtYXQzLnRyYW5zbGF0ZSh0cmFuc2Zvcm0sIHRyYW5zZm9ybSwgW2N4LCBjeV0pOy8vIOWGjeW5s+enu+WbnuWOu1xuICAgICAgICBtYXQzLnJvdGF0ZSh0cmFuc2Zvcm0sIHRyYW5zZm9ybSwgcmFkKTsvLyDlho3lubPnp7vlm57ljrtcbiAgICAgICAgbWF0My50cmFuc2xhdGUodHJhbnNmb3JtLCB0cmFuc2Zvcm0sIFstY3gsIC1jeV0pOy8vIOWFiOW5s+enu+WIsOWOn+eCuVxuICAgIH1cbn1cbmV4cG9ydCBkZWZhdWx0IENvbnRyb2xsZXI7XG4iLCJleHBvcnQgZGVmYXVsdCB7XG5cdC8vIHNoYWRlcuS4rei/m+ihjOWdkOagh+i9rOaNouS8muS4jeS8muW/q++8n0NQVeWPquS8muiwg+eUqOS4gOasoe+8jEdQVeavj+W4p+mDveimgemHjeWkjeWOu+i/kOeul++8jDJk5oOF5Ya15LiL5rKh5pyJ55u45py677yMXG5cdC8vIOayoeacieWdkOagh+WboOebuOacuuiAjOWPmOWMlueahOaDheWGte+8jOaJgOS7peS4jeeUqOWGjXNoYWRlcuS4rei/kOeul++8jOWPr+S7peWHj+WwkWNwdeeahOiwg+eUqOeOh1xuXHR2ZXJ0ZXhTaGFkZXI6IGBcblx0cHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7XG5cdGF0dHJpYnV0ZSB2ZWM0IHBvc2l0aW9uO1xuXHRhdHRyaWJ1dGUgZmxvYXQgbnVtYmVyO1xuXHR1bmlmb3JtIHZlYzQgc3RhcnRDb2xvcjtcblx0dW5pZm9ybSB2ZWM0IGVuZENvbG9yO1xuXHR1bmlmb3JtIGZsb2F0IGxlbmd0aDtcblx0dW5pZm9ybSBmbG9hdCB0O1xuXHR1bmlmb3JtIGZsb2F0IHo7XG5cdHZhcnlpbmcgdmVjNCB2Q29sb3I7XG5cdHZvaWQgbWFpbigpXG5cdHtcblx0XHRnbF9Qb3NpdGlvbiA9IHZlYzQocG9zaXRpb24ueHkseiwxLik7XG5cdFx0dkNvbG9yID0gZW5kQ29sb3IgLSAobGVuZ3RoICsgdCAtIG51bWJlcikvbGVuZ3RoKihlbmRDb2xvciAtIHN0YXJ0Q29sb3IpO1xuXHR9XG5cdGAsXG5cblx0ZnJhZ21lbnRTaGFkZXI6IGBcblx0cHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7XG5cdHZhcnlpbmcgdmVjNCB2Q29sb3I7XG5cdHZvaWQgbWFpbigpXG5cdHtcblx0XHRpZih2Q29sb3Iudzw9MC4wMil7XG5cdFx0XHRkaXNjYXJkO1xuXHRcdH1cblx0XHRnbF9GcmFnQ29sb3IgPSB2Q29sb3I7XG5cdH1cblx0YFxufSIsImZ1bmN0aW9uIG5vcm1hbGl6ZSh2KSB7XG5cdGNvbnN0IGxlbmd0aCA9IE1hdGguc3FydCh2LnggKiB2LnggKyB2LnkgKiB2LnkpO1xuXHRyZXR1cm4ge1xuXHRcdHg6IHYueCAvIGxlbmd0aCxcblx0XHR5OiB2LnkgLyBsZW5ndGhcblx0fTtcbn1cblxuZnVuY3Rpb24gYWRkVmVjdG9yKHYwLCB2MSkge1xuXHRyZXR1cm4ge1xuXHRcdHg6IHYwLnggKyB2MS54LFxuXHRcdHk6IHYwLnkgKyB2MS55XG5cdH07XG59XG5cbmZ1bmN0aW9uIGdldFZlY3Rvckxlbmd0aCh2KSB7XG5cdGNvbnN0IGxlbmd0aCA9IE1hdGguc3FydCh2LnggKiB2LnggKyB2LnkgKiB2LnkpO1xuXHRyZXR1cm4gbGVuZ3RoO1xufVxuXG5mdW5jdGlvbiBzdWJWZWN0b3IodjAsIHYxKSB7XG5cdHJldHVybiB7XG5cdFx0eDogdjEueCAtIHYwLngsXG5cdFx0eTogdjEueSAtIHYwLnlcblx0fTtcbn1cblxuZnVuY3Rpb24gbXVsdGlwbGUodiwgdCkge1xuXHRyZXR1cm4ge1xuXHRcdHg6IHYueCAqIHQsXG5cdFx0eTogdi55ICogdFxuXHR9O1xufVxuXG5leHBvcnQge1xuXHRub3JtYWxpemUsXG5cdGFkZFZlY3Rvcixcblx0bXVsdGlwbGUsXG5cdGdldFZlY3Rvckxlbmd0aCxcblx0c3ViVmVjdG9yXG59O1xuIiwiaW1wb3J0IHtnZXRWZWN0b3JMZW5ndGgsIHN1YlZlY3Rvcn0gZnJvbSAnLi92ZWN0b3InO1xuY2xhc3MgQmV6aWVyTGluZSB7XG5cblx0c2V0Q29udHJvbCh2MCwgdjEsIHYyLCB2Mykge1xuXHRcdHRoaXMudjAgPSB2MDtcblx0XHR0aGlzLnYxID0gdjE7XG5cdFx0dGhpcy52MiA9IHYyO1xuXHRcdHRoaXMudjMgPSB2Mztcblx0fVxuXG5cdHNldERhdGEoZGF0YSkge1xuXHRcdHRoaXMuZGF0YSA9IGRhdGE7XG5cdH1cblx0Z2V0UG9pbnQodCkge1xuXHRcdGNvbnN0IHt2MCwgdjEsIHYyLCB2M30gPSB0aGlzO1xuXHRcdHJldHVybiB7XG5cdFx0XHR4OiB0aGlzLmN1YmljQmV6aWVyKHQsIHYwLngsIHYxLngsIHYyLngsIHYzLngpLFxuXHRcdFx0eTogdGhpcy5jdWJpY0Jlemllcih0LCB2MC55LCB2MS55LCB2Mi55LCB2My55KVxuXHRcdH07XG5cdH1cblxuXHRjdWJpY0Jlemllcih0LCBwMCwgcDEsIHAyLCBwMykge1xuXHRcdHJldHVybiBDdWJpY0JlemllclAwKHQsIHAwKSArIEN1YmljQmV6aWVyUDEodCwgcDEpICsgQ3ViaWNCZXppZXJQMih0LCBwMikgK1xuXHRcdFx0Q3ViaWNCZXppZXJQMyh0LCBwMyk7XG5cdH1cblxuXHRnZXRTcGFjZWRQb2ludHMobikge1xuXHRcdGNvbnN0IHBvaW50cyA9IFtdO1xuXHRcdHRoaXMubGVuZ3RocyA9IHRoaXMuZ2V0TGVuZ3RocyhuKTsvLyDnvJPlrZjotbfmnaVcblx0XHRmb3IgKGxldCBpID0gMDtpIDw9IG47aSsrKSB7XG5cdFx0XHRjb25zdCB0ID0gdGhpcy5nZXRVdG9UbWFwcGluZyhpIC8gbik7XG5cdFx0XHRwb2ludHMucHVzaCh0aGlzLmdldFBvaW50KHQpKTtcblx0XHR9XG5cdFx0cmV0dXJuIHBvaW50cztcblx0fVxuXG5cdGdldExlbmd0aHMobiA9IDEwMCkge1xuXHRcdGxldCBsZW5ndGggPSAwO1xuXHRcdGNvbnN0IGxlbmd0aHMgPSBbMF07XG5cdFx0Zm9yIChsZXQgaSA9IDE7aSA8PSBuO2krKykge1xuXHRcdFx0Y29uc3QgY3VycmVudCA9IHRoaXMuZ2V0UG9pbnQoaSAvIG4pO1xuXHRcdFx0Y29uc3QgbGFzdCA9IHRoaXMuZ2V0UG9pbnQoKGkgLSAxKSAvIG4pO1xuXHRcdFx0bGVuZ3RoICs9IGdldFZlY3Rvckxlbmd0aChzdWJWZWN0b3IobGFzdCwgY3VycmVudCkpO1xuXHRcdFx0bGVuZ3Rocy5wdXNoKGxlbmd0aCk7XG5cdFx0fVxuXHRcdHJldHVybiBsZW5ndGhzO1xuXHR9XG5cblx0Z2V0TGVuZ3RoKG4pIHtcblx0XHRjb25zdCBsZW5ndGhzID0gdGhpcy5nZXRMZW5ndGhzKG4pO1xuXHRcdHJldHVybiBsZW5ndGhzW2xlbmd0aHMubGVuZ3RoIC0gMV07XG5cdH1cblxuXHQvLyDmoLnmja7mgLvplb/luqbnrpflh7rkuIDlrprmr5TkvovnmoTplb/luqbmiYDlr7nlupTnmoR05YC877yMXG5cdC8vIOi/meS4quetiei3neWIkuWIhueahOeul+azleS4jeefpemBk+S4uuS9leWcqOi0neWhnuWwlOS4remXtOeahOmDqOWIhumXtOi3nei/h+Wkp+S4jeWGjeetiei3ne+8jOacieepuuWGjeeci+S4i+WQp1xuXHRnZXRVdG9UbWFwcGluZyh1KSB7XG5cdFx0Y29uc3QgbGVuZ3RocyA9IHRoaXMubGVuZ3Rocztcblx0XHRjb25zdCBsZW5ndGggPSBsZW5ndGhzW2xlbmd0aHMubGVuZ3RoIC0gMV07XG5cdFx0Y29uc3QgdGFyZ2V0TGVuZ3RoID0gdSAqIGxlbmd0aDtcblx0XHRsZXQgbmV4dEluZGV4OyBsZXQgbm93SW5kZXggPSAwO1xuXHRcdGxlbmd0aHMuZmluZCgoaXRlbSwgaW5kZXgpPT57XG5cdFx0XHRpZiAoaXRlbSA+PSB0YXJnZXRMZW5ndGgpIHtcblx0XHRcdFx0bmV4dEluZGV4ID0gaW5kZXg7XG5cdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0bm93SW5kZXggPSBpbmRleDtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdGNvbnN0IHJlc3RSYXRpbyA9IHUgPT09IDAgPyAwIDogKHRhcmdldExlbmd0aCAtIGxlbmd0aHNbbm93SW5kZXhdKSAvIChsZW5ndGhzW25leHRJbmRleF0gLSBsZW5ndGhzW25vd0luZGV4XSk7XG5cdFx0Y29uc3QgdCA9IChub3dJbmRleCArIE1hdGgubWF4KHJlc3RSYXRpbywgMCkpIC8gKHRoaXMubGVuZ3Rocy5sZW5ndGggLSAxKTtcblx0XHRyZXR1cm4gdDtcblx0fVxufVxuXG5mdW5jdGlvbiBDdWJpY0JlemllclAwKHQsIHApIHtcblxuXHR2YXIgayA9IDEgLSB0O1xuXHRyZXR1cm4gayAqIGsgKiBrICogcDtcblxufVxuXG5mdW5jdGlvbiBDdWJpY0JlemllclAxKHQsIHApIHtcblxuXHR2YXIgayA9IDEgLSB0O1xuXHRyZXR1cm4gMyAqIGsgKiBrICogdCAqIHA7XG5cbn1cblxuZnVuY3Rpb24gQ3ViaWNCZXppZXJQMih0LCBwKSB7XG5cblx0cmV0dXJuIDMgKiAoMSAtIHQpICogdCAqIHQgKiBwO1xuXG59XG5cbmZ1bmN0aW9uIEN1YmljQmV6aWVyUDModCwgcCkge1xuXG5cdHJldHVybiB0ICogdCAqIHQgKiBwO1xuXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJlemllckxpbmU7XG4iLCJpbXBvcnQgbGluZVNoYWRlciBmcm9tICcuLi9TaGFkZXJzL2ZseWxpbmUnO1xuaW1wb3J0IEJhc2UgZnJvbSAnLi9CYXNlJztcbmltcG9ydCBCZXppZXJMaW5lIGZyb20gJy4uL1V0aWxzL0JlemllckxpbmUnO1xuaW1wb3J0IHtub3JtYWxpemUsIGFkZFZlY3RvciwgZ2V0VmVjdG9yTGVuZ3RoLCBzdWJWZWN0b3IsIG11bHRpcGxlIH0gZnJvbSAnLi4vVXRpbHMvdmVjdG9yJztcblxuY2xhc3MgTGluZSBleHRlbmRzIEJhc2Uge1xuXHRkcmF3VHlwZSA9ICdMSU5FX1NUUklQJztcblx0c2hhZGVycyA9IHtcblx0XHR2ZXJ0ZXg6IGxpbmVTaGFkZXIudmVydGV4U2hhZGVyLFxuXHRcdGZyYWdtZW50OiBsaW5lU2hhZGVyLmZyYWdtZW50U2hhZGVyXG5cdH1cblx0b2Zmc2V0PTA7XG5cdGRlcHRoTWFzaz1mYWxzZTtcblx0Y29uc3RydWN0b3IoY29uZmlnKSB7XG5cdFx0Y29uZmlnID0gT2JqZWN0LmFzc2lnbih7XG5cdFx0XHR6OiAwLjEsXG5cdFx0XHRsZW5ndGg6IDUwLFxuXHRcdFx0bGluZUhlaWdodDogMC4yLFxuXHRcdFx0c3BlZWQ6IDEsXG5cdFx0XHRzbW9vdGhOdW1iZXI6IDFcblx0XHR9LCBjb25maWcpO1xuXHRcdHN1cGVyKGNvbmZpZyk7XG5cdFx0dGhpcy5pbml0KGNvbmZpZyk7XG5cdFx0dGhpcy5iZXppZXJMaW5lID0gbmV3IEJlemllckxpbmUoKTtcblx0XHR0aGlzLnVuaWZvcm1EYXRhID0ge1xuXHRcdFx0dDoge1xuXHRcdFx0XHR2YWx1ZTogMCxcblx0XHRcdFx0dHlwZTogJ3VuaWZvcm0xZidcblx0XHRcdH0sXG5cdFx0XHRsZW5ndGg6IHtcblx0XHRcdFx0dmFsdWU6IGNvbmZpZy5sZW5ndGgsXG5cdFx0XHRcdHR5cGU6ICd1bmlmb3JtMWYnXG5cdFx0XHR9LFxuXHRcdFx0c3RhcnRDb2xvcjoge1xuXHRcdFx0XHR2YWx1ZTogY29uZmlnLnN0YXJ0Q29sb3IgfHwgWzEsIDAsIDAsIDBdLFxuXHRcdFx0XHR0eXBlOiAndW5pZm9ybTRmdidcblx0XHRcdH0sXG5cdFx0XHRlbmRDb2xvcjoge1xuXHRcdFx0XHR2YWx1ZTogY29uZmlnLmVuZENvbG9yIHx8IFsxLCAwLCAwLCAxXSxcblx0XHRcdFx0dHlwZTogJ3VuaWZvcm00ZnYnXG5cdFx0XHR9LFxuXHRcdFx0ejoge1xuXHRcdFx0XHR2YWx1ZTogdGhpcy5jb25maWcueixcblx0XHRcdFx0dHlwZTogJ3VuaWZvcm0xZidcblx0XHRcdH1cblx0XHR9O1xuXHR9XG5cblx0c2V0RGF0YShkYXRhKSB7XG5cdFx0Y29uc3Qge1xuXHRcdFx0bWluaUdMOiB7dmlld3BvcnR9XG5cdFx0fSA9IHRoaXM7XG5cdFx0dGhpcy5kYXRhID0gZGF0YTtcblx0XHR0aGlzLmRhdGEuc3RhcnRYWSA9IHZpZXdwb3J0LmNvbnZlcnRTY3JlZW5Ub0NsaXAoZGF0YS5zdGFydC54LCBkYXRhLnN0YXJ0LnkpO1xuXHRcdHRoaXMuZGF0YS5lbmRYWSA9IHZpZXdwb3J0LmNvbnZlcnRTY3JlZW5Ub0NsaXAoZGF0YS5lbmQueCwgZGF0YS5lbmQueSk7XG5cdFx0Y29uc3QgbWlkUG9pbnQgPSB7XG5cdFx0XHR4OiB0aGlzLmRhdGEuc3RhcnQueCAvIDIgKyB0aGlzLmRhdGEuZW5kLnggLyAyLFxuXHRcdFx0eTogdGhpcy5kYXRhLnN0YXJ0LnkgLyAyICsgdGhpcy5kYXRhLmVuZC55IC8gMlxuXHRcdH07XG5cdFx0Y29uc3QgZW5kX3N0YXJ0ID0ge1xuXHRcdFx0eDogdGhpcy5kYXRhLmVuZC54IC0gdGhpcy5kYXRhLnN0YXJ0LngsXG5cdFx0XHR5OiB0aGlzLmRhdGEuZW5kLnkgLSB0aGlzLmRhdGEuc3RhcnQueVxuXHRcdH07XG5cdFx0bGV0IG5vcm1hbCA9IHtcblx0XHRcdHg6IGVuZF9zdGFydC55LFxuXHRcdFx0eTogLWVuZF9zdGFydC54XG5cdFx0fTtcblx0XHRpZiAoZW5kX3N0YXJ0LnggPCAwKSB7XG5cdFx0XHRub3JtYWwgPSB7XG5cdFx0XHRcdHg6IC1lbmRfc3RhcnQueSxcblx0XHRcdFx0eTogZW5kX3N0YXJ0Lnhcblx0XHRcdH07XG5cdFx0fVxuXG5cdFx0Y29uc3QgbGVuZ3RoID0gZ2V0VmVjdG9yTGVuZ3RoKHN1YlZlY3RvcihkYXRhLmVuZCwgZGF0YS5zdGFydCkpO1xuXG5cdFx0Y29uc3QgbGluZUhlaWdodCA9IHRoaXMuY29uZmlnLmxpbmVIZWlnaHQgKiBsZW5ndGg7XG5cdFx0Y29uc3QgY29udHJvbFBvaW50ID0gYWRkVmVjdG9yKG11bHRpcGxlKG5vcm1hbGl6ZShub3JtYWwpLCBsaW5lSGVpZ2h0KSwgbWlkUG9pbnQpO1xuXHRcdHRoaXMuYmV6aWVyTGluZS5zZXRDb250cm9sKHRoaXMuZGF0YS5zdGFydCwgdGhpcy5kYXRhLnN0YXJ0LCBjb250cm9sUG9pbnQsIHRoaXMuZGF0YS5lbmQpO1xuXG5cdFx0Y29uc3QgYWxsUG9pbnRzID0gdGhpcy5iZXppZXJMaW5lLmdldFNwYWNlZFBvaW50cyhsZW5ndGggKiB0aGlzLmNvbmZpZy5zbW9vdGhOdW1iZXIpO1xuXHRcdGNvbnN0IHBvaW50cyA9IFtdO2NvbnN0IG51bWJlcnMgPSBbXTtcblxuXHRcdGFsbFBvaW50cy5mb3JFYWNoKChpdGVtLCBpbmRleCk9Pntcblx0XHRcdC8vIOacgOWQjuWGjei/keS6m+WdkOagh+i9rOaNou+8jOmBv+WFjeWboOS4uueUu+W4g+e8qeaUvuWvvOiHtOmVv+W6puiuoeeul+WkseWHhlxuXHRcdFx0Y29uc3QgcG9pbnQgPSB2aWV3cG9ydC5jb252ZXJ0U2NyZWVuVG9DbGlwKGl0ZW0ueCwgaXRlbS55KTtcblx0XHRcdHBvaW50cy5wdXNoKHBvaW50LngsIHBvaW50LnkpO1xuXHRcdFx0bnVtYmVycy5wdXNoKGluZGV4KTtcblx0XHR9KTtcblx0XHR0aGlzLnZlcnRleCA9IHBvaW50cztcblxuXHRcdC8vIHRoaXMucG9pbnRzQnVmZmVyTGVuZ3RoID0gcG9pbnRzLmxlbmd0aCpGbG9hdDMyQXJyYXkuQllURVNfUEVSX0VMRU1FTlQ7XG5cdFx0dGhpcy5zZXRCdWZmZXJEYXRhKHBvaW50cywgJ3Bvc2l0aW9uJywgMik7XG5cdFx0dGhpcy5zZXRCdWZmZXJEYXRhKG51bWJlcnMsICdudW1iZXInLCAxKTtcblx0fVxuXG5cdHN0YXJ0KCkge1xuXHRcdHRoaXMuc3RhcnRGbGFnID0gdHJ1ZTtcblx0fVxuXG5cdHBhdXNlKCkge1xuXHRcdHRoaXMuc3RhcnRGbGFnID0gZmFsc2U7XG5cdH1cblxuXHRyZW5kZXIoKSB7XG5cdFx0Ly8gMkQg5Y+q6ZyA6KaB5Lik5Liq5Z2Q5qCH6L205qCH6K+G5L2N572uXG5cdFx0Y29uc3Qgbm9ybWFsaXplID0gZmFsc2U7XG5cdFx0Y29uc3QgbGVuZ3RoID0gdGhpcy52ZXJ0ZXgubGVuZ3RoIC8gMjtcblx0XHRjb25zdCB7dW5pZm9ybURhdGEgPSB7fSwgY29uZmlnfSA9IHRoaXM7XG5cdFx0aWYgKCF0aGlzLnN0YXJ0RmxhZykgcmV0dXJuO1xuXG5cdFx0dW5pZm9ybURhdGEudC52YWx1ZSArPSB0aGlzLmNvbmZpZy5zcGVlZDtcblx0XHRpZiAodW5pZm9ybURhdGEudC52YWx1ZSA+PSBsZW5ndGgpIHtcblx0XHRcdHVuaWZvcm1EYXRhLnQudmFsdWUgPSAtdGhpcy5jb25maWcubGVuZ3RoO1xuXHRcdH1cblxuXHRcdC8vIOWIhuWIq+e7keWumuaVsOaNruWIsHNoYWRlcueoi+W6j+S4rVxuXHRcdGZvciAobGV0IGtleSBpbiB0aGlzLmJ1ZmZlcnMpIHtcblx0XHRcdGNvbnN0IGJ1ZmZlckRhdGEgPSB0aGlzLmJ1ZmZlcnNba2V5XTtcblx0XHRcdGNvbnN0IGJ1ZmZlclBvc2l0aW9uID0gdGhpcy5nZXRBdHRyaWJMb2NhdGlvbihrZXkpO1xuXHRcdFx0Ly8g5YiG5Yir57uR5a6a5pWw5o2u5Yiwc2hhZGVy56iL5bqP5LitXG5cdFx0XHR0aGlzLmdsLmJpbmRCdWZmZXIodGhpcy5nbC5BUlJBWV9CVUZGRVIsIGJ1ZmZlckRhdGEpO1xuXHRcdFx0dGhpcy5nbC52ZXJ0ZXhBdHRyaWJQb2ludGVyKGJ1ZmZlclBvc2l0aW9uLCB0aGlzLmJ1ZmZlcnNTaXplW2tleV0sIHRoaXMuZ2wuRkxPQVQsIG5vcm1hbGl6ZSwgMCwgMCk7XG5cdFx0XHR0aGlzLmdsLmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KGJ1ZmZlclBvc2l0aW9uKTtcblx0XHR9XG5cblx0XHQvLyDliqDovb1zaGFkZXLnqIvluo9cblx0XHR0aGlzLmdsLnVzZVByb2dyYW0odGhpcy5zaGFkZXJQcm9ncmFtKTtcblx0XHR0aGlzLnNldFVuaWZvcm1EYXRhKCk7XG5cblx0XHQvLyDmuLLmn5Ncblx0XHRpZiAodGhpcy52ZXJ0ZXgubGVuZ3RoKSB7XG5cdFx0XHQvLyBzcGVjaWZ5aW5nIHRoZSBzdGFydGluZyBpbmRleCBpbiB0aGUgYXJyYXkgb2YgdmVjdG9yIHBvaW50cy5cblx0XHRcdC8vIHNwZWNpZnlpbmcgdGhlIG51bWJlciBvZiBpbmRpY2VzIHRvIGJlIHJlbmRlcmVkLlxuXHRcdFx0Y29uc3Qgb2Zmc2V0ID0gTWF0aC5tYXgodW5pZm9ybURhdGEudC52YWx1ZSwgMCk7XG5cdFx0XHQvLyDotbfmraXml7bopoHnrpflh7rnnJ/lrp7nmoTlh4/mjonotJ/mlbDnmoRzaXpl77yM5Yiw6L6+5pe277yM5LiN6IO96LaF6L+H5pW05Liq5pWw57uE6ZW/5bqmXG5cdFx0XHRjb25zdCBzaXplID0gTWF0aC5taW4oKHVuaWZvcm1EYXRhLnQudmFsdWUgKyBjb25maWcubGVuZ3RoKSAtIG9mZnNldCwgbGVuZ3RoIC0gb2Zmc2V0KTtcblx0XHRcdGlmIChzaXplID09PSAwKSByZXR1cm47XG5cdFx0XHR0aGlzLmdsLmRyYXdBcnJheXModGhpcy5nbFt0aGlzLmRyYXdUeXBlXSwgb2Zmc2V0LCBzaXplKTtcblx0XHR9XG5cdH1cbn1cbmV4cG9ydCBkZWZhdWx0IExpbmU7XG4iLCJleHBvcnQgZGVmYXVsdCB7XG5cdHZlcnRleFNoYWRlcjogYFxuXHRwcmVjaXNpb24gaGlnaHAgZmxvYXQ7XG5cdGF0dHJpYnV0ZSB2ZWMyIHBvc2l0aW9uO1xuXHRhdHRyaWJ1dGUgdmVjMiB1djtcblx0dmFyeWluZyB2ZWM0IHZDb2xvcjtcblx0dmFyeWluZyB2ZWMyIHZVdjtcbiAgICB1bmlmb3JtIG1hdDMgdHJhbnNmb3JtO1xuICAgIHVuaWZvcm0gbWF0MyBtb2RlbFZpZXc7XG4gICAgdW5pZm9ybSBmbG9hdCB6O1xuXHR2b2lkIG1haW4oKVxuXHR7XG4gICAgICAgIHZVdiA9IHV2O1xuXHRcdHZlYzMgbVBvc2l0aW9uID0gdHJhbnNmb3JtICogbW9kZWxWaWV3ICogdmVjMyhwb3NpdGlvbiwxLjApO1xuXHRcdGdsX1Bvc2l0aW9uID0gdmVjNChtUG9zaXRpb24ueHkseiwxLjApO1xuXHR9XG5cdGAsXG5cdGZyYWdtZW50U2hhZGVyOiBgXG5cdHByZWNpc2lvbiBoaWdocCBmbG9hdDtcbiAgICB2YXJ5aW5nIHZlYzIgdlV2O1xuICAgIHVuaWZvcm0gdmVjNCBhbHBoYUNvbG9yO1xuXHR1bmlmb3JtIHNhbXBsZXIyRCB1X1NhbXBsZXI7XG5cdHZvaWQgbWFpbigpXG5cdHtcbiAgICAgICAgZ2xfRnJhZ0NvbG9yID0gdGV4dHVyZTJEKHVfU2FtcGxlcix2VXYpKmFscGhhQ29sb3I7XG5cdH1cblx0YFxufTtcbiIsImltcG9ydCBzaGFkZXIgZnJvbSAnLi4vU2hhZGVycy9pbWFnZSc7XG5pbXBvcnQgQmFzZSBmcm9tICcuL0Jhc2UnO1xuaW1wb3J0IGxvYWRUZXh0dXJlIGZyb20gJy4uL1V0aWxzL0xvYWRUZXh0dXJlJztcblxuY2xhc3MgSW1hZ2UgZXh0ZW5kcyBCYXNlIHtcbiAgICBkcmF3VHlwZSA9ICdUUklBTkdMRVMnO1xuXG4gICAgb2Zmc2V0ID0gMDsvLyBhcnJheS5CWVRFU19QRVJfRUxFTUVOVCAqIGluZGljZXNFYWNoTGVuZ3RoXG5cbiAgICBjb25zdHJ1Y3Rvcihjb25maWcgPSB7fSkge1xuICAgICAgICBzdXBlcihjb25maWcpO1xuICAgICAgICB0aGlzLnNoYWRlcnMgPSB7XG4gICAgICAgICAgICB2ZXJ0ZXg6IHNoYWRlci52ZXJ0ZXhTaGFkZXIsXG4gICAgICAgICAgICBmcmFnbWVudDogc2hhZGVyLmZyYWdtZW50U2hhZGVyXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMudW5pZm9ybURhdGEgPSB7XG4gICAgICAgICAgICB6OiB7XG4gICAgICAgICAgICAgICAgdmFsdWU6IGNvbmZpZy56IHx8IDEsXG4gICAgICAgICAgICAgICAgdHlwZTogJ3VuaWZvcm0xZidcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhbHBoYUNvbG9yOiB7XG4gICAgICAgICAgICAgICAgdmFsdWU6IGNvbmZpZy5hbHBoYUNvbG9yIHx8IFsxLCAxLCAxLCAxXSxcbiAgICAgICAgICAgICAgICB0eXBlOiAndW5pZm9ybTRmdidcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5pbml0KGNvbmZpZyk7XG4gICAgICAgIHRoaXMudlNpemUgPSAyO1xuICAgIH1cblxuICAgIHNldE1hcChpbWFnZVBhdGgpIHtcbiAgICAgICAgbG9hZFRleHR1cmUodGhpcy5nbCwgaW1hZ2VQYXRoKS50aGVuKCh0ZXh0dXJlKSA9PiB7XG4gICAgICAgICAgIHRoaXMuc2V0VGV4dHVyZSh0ZXh0dXJlKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgc2V0RGF0YShkYXRhKSB7XG4gICAgICAgIGlmICghdGhpcy5taW5pR0wpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcign6K+35YWI5bCG57uE5Lu26YCa6L+HbWluaUdMLmNhbnZhcy5hZGQoKeWKoOWFpeWunuS+i+S4rScpO1xuICAgICAgICB9XG4gICAgICAgIC8vIOmHiuaUvuWGheWtmOepuumXtFxuICAgICAgICB0aGlzLmRpc3Bvc2UoKTtcblxuICAgICAgICB0aGlzLmRhdGEgPSBkYXRhO1xuXG4gICAgICAgIGNvbnN0IHsgd2lkdGgsIGhlaWdodCwgc3JjLCB0ZXh0dXJlLCB4ID0gMCwgeSA9IDAgfSA9IGRhdGE7XG5cbiAgICAgICAgLy8g6K6+572u57q555CGXG4gICAgICAgIGlmIChzcmMpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0TWFwKHNyYyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRleHR1cmUpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0VGV4dHVyZSh0ZXh0dXJlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOiuoeeul3V2XG4gICAgICAgIGNvbnN0IHBvaW50cyA9IFtcbiAgICAgICAgICAgIHgsIHksXG4gICAgICAgICAgICB4LCB5ICsgaGVpZ2h0LFxuICAgICAgICAgICAgeCArIHdpZHRoLCB5LFxuICAgICAgICAgICAgeCArIHdpZHRoLCB5ICsgaGVpZ2h0XG4gICAgICAgIF07XG4gICAgICAgIGNvbnN0IGluZGljZXMgPSBbMCwgMSwgMiwgMiwgMSwgM107XG4gICAgICAgIGNvbnN0IHV2ID0gW1xuICAgICAgICAgICAgMCwgMCxcbiAgICAgICAgICAgIDAsIDEsXG4gICAgICAgICAgICAxLCAwLFxuICAgICAgICAgICAgMSwgMVxuICAgICAgICBdO1xuXG4gICAgICAgIHRoaXMudmVydGV4ID0gcG9pbnRzO1xuICAgICAgICB0aGlzLnNldEJ1ZmZlckRhdGEocG9pbnRzLCAncG9zaXRpb24nLCAyKTtcbiAgICAgICAgdGhpcy5zZXRCdWZmZXJEYXRhKHV2LCAndXYnLCAyKTtcbiAgICAgICAgdGhpcy5zZXRJbmRpY2VzKGluZGljZXMpO1xuICAgICAgICB0aGlzLnVuaWZvcm1zTmVlZFVwZGF0ZSA9IHRydWU7XG4gICAgfVxuXG4gICAgLy8g6K6+572u57q555CG5pWw5o2uXG4gICAgc2V0VGV4dHVyZSh0ZXh0dXJlLCBrZXkgPSAndV9TYW1wbGVyJykge1xuICAgICAgICB0aGlzLnVuaWZvcm1EYXRhW2tleV0gPSB7XG4gICAgICAgICAgICB0eXBlOiAndW5pZm9ybTFpJywgLy8gaW1hZ2VcbiAgICAgICAgICAgIHZhbHVlOiAwLCAvLyAw5Y+357q555CG5Lyg6YCSXG4gICAgICAgICAgICB0ZXh0dXJlOiB0ZXh0dXJlLndlYmdsVGV4dHVyZSA/IHRleHR1cmUud2ViZ2xUZXh0dXJlIDogdGV4dHVyZVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLnRleHR1cmUgPSB0ZXh0dXJlO1xuICAgICAgICB0aGlzLnVuaWZvcm1zTmVlZFVwZGF0ZSA9IHRydWU7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICAvLyAyRCDlj6rpnIDopoHkuKTkuKrlnZDmoIfovbTmoIfor4bkvY3nva5cbiAgICAgICAgY29uc3Qgb2Zmc2V0ID0gMDsvLyDku47mlbDmja7nrKzlh6DkvY3lvIDlp4vlgY/np7tcbiAgICAgICAgY29uc3Qgbm9ybWFsaXplID0gZmFsc2U7XG4gICAgICAgIGNvbnN0IHsgZ2wgfSA9IHRoaXM7XG5cbiAgICAgICAgLy8g5Zu+54mH5Yqg6L295a6M5LqG5YaN6K+0XG4gICAgICAgIGlmICghdGhpcy51bmlmb3JtRGF0YSB8fCAhdGhpcy51bmlmb3JtRGF0YVsndV9TYW1wbGVyJ10pIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOWIhuWIq+e7keWumuaVsOaNruWIsHNoYWRlcueoi+W6j+S4rVxuICAgICAgICBmb3IgKGxldCBrZXkgaW4gdGhpcy5idWZmZXJzKSB7XG4gICAgICAgICAgICBjb25zdCBidWZmZXJEYXRhID0gdGhpcy5idWZmZXJzW2tleV07XG4gICAgICAgICAgICBjb25zdCBidWZmZXJQb3NpdGlvbiA9IHRoaXMuZ2V0QXR0cmliTG9jYXRpb24oa2V5KTtcbiAgICAgICAgICAgIC8vIOWIhuWIq+e7keWumuaVsOaNruWIsHNoYWRlcueoi+W6j+S4rVxuICAgICAgICAgICAgZ2wuYmluZEJ1ZmZlcihnbC5BUlJBWV9CVUZGRVIsIGJ1ZmZlckRhdGEpO1xuICAgICAgICAgICAgZ2wudmVydGV4QXR0cmliUG9pbnRlcihidWZmZXJQb3NpdGlvbiwgdGhpcy5idWZmZXJzU2l6ZVtrZXldLCBnbC5GTE9BVCwgbm9ybWFsaXplLCAwLCBvZmZzZXQpO1xuICAgICAgICAgICAgZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkoYnVmZmVyUG9zaXRpb24pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8g5L2/55So6aG254K55pWw5o2uXG4gICAgICAgIGdsLmJpbmRCdWZmZXIoZ2wuRUxFTUVOVF9BUlJBWV9CVUZGRVIsIHRoaXMuaW5kaWNlc1BvaW50ZXIpO1xuXG4gICAgICAgIC8vIOWKoOi9vXNoYWRlcueoi+W6j1xuICAgICAgICBnbC51c2VQcm9ncmFtKHRoaXMuc2hhZGVyUHJvZ3JhbSk7XG5cbiAgICAgICAgdGhpcy5zZXRVbmlmb3JtRGF0YSgpO1xuXG4gICAgICAgIC8vIG9mZnNldOW/hemhu+S5mOS7peexu+Wei+aVsOe7hOeahOmVv+W6pu+8jOaEj+WRs+edgOimgeS7juWGheWtmOS4reaVsOaNrueahOWvueW6lOWtl+iKguaVsOW8gOWni+eulyDmoLnmja7nsbvlnovkuZjlr7nlupTnmoRCWVRFU19QRVJfRUxFTUVOVFxuICAgICAgICAvLyDmuLLmn5NcbiAgICAgICAgaWYgKHRoaXMuaW5kaWNlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGdsLmRyYXdFbGVtZW50cyhnbFt0aGlzLmRyYXdUeXBlXSwgdGhpcy5pbmRpY2VzLmxlbmd0aCwgZ2wuVU5TSUdORURfU0hPUlQsIHRoaXMub2Zmc2V0KTtcbiAgICAgICAgfVxuICAgIH1cblxufVxuZXhwb3J0IGRlZmF1bHQgSW1hZ2U7XG4iLCJleHBvcnQgZGVmYXVsdCB7XG5cdC8vIOWFiOaxgui/nuaOpee6v+eEtuWQjuWGjeaxguWegue6v1xuXHQvLyDmsYLlh7rnrYnmr5TmlL7lpKfnmoTlgLxcblx0dmVydGV4U2hhZGVyOiBgXG5cdHByZWNpc2lvbiBsb3dwIGZsb2F0O1xuXHRhdHRyaWJ1dGUgdmVjMiBub3c7XG5cdGF0dHJpYnV0ZSB2ZWMyIHByZTtcblx0YXR0cmlidXRlIHZlYzIgbmV4dDtcblx0YXR0cmlidXRlIGZsb2F0IHNpZGU7XG5cdGF0dHJpYnV0ZSBmbG9hdCBzdGF0dXM7XG5cdHVuaWZvcm0gZmxvYXQgd2lkdGg7XG5cdHVuaWZvcm0gZmxvYXQgYXNwZWN0O1xuXHR1bmlmb3JtIG1hdDMgdHJhbnNmb3JtO1xuXHR1bmlmb3JtIGZsb2F0IG9mZnNldDtcblx0dmFyeWluZyBmbG9hdCB2U2lkZTtcblx0dm9pZCBtYWluKClcblx0e1xuXHRcdHZTaWRlID0gc2lkZTtcblx0XHRcblx0XHQvLyDlhYjovazmjaLlnZDmoIfns7tcblx0XHR2ZWMyIG1Ob3cgPSAodHJhbnNmb3JtKnZlYzMobm93LDEuKSkueHk7XG5cdFx0dmVjMiBtTmV4dCA9ICh0cmFuc2Zvcm0qdmVjMyhuZXh0LDEuKSkueHk7XG5cdFx0dmVjMiBtUHJlID0gKHRyYW5zZm9ybSp2ZWMzKHByZSwxLikpLnh5O1xuXHRcdHZlYzIgX25vdyA9IHZlYzIobU5vdyk7XG5cdFx0dmVjMiBfbmV4dCA9IHZlYzIobU5leHQpO1xuXHRcdHZlYzIgX3ByZSA9ICB2ZWMyKG1QcmUpO1xuXHRcblx0XHQvLyDlhYjmiormnKzlnZDmoIfns7vnmoTlnZDmoIfmlL7lpKfvvIzlkoznnJ/lrp7nmoTlpJbnlYzlnZDmoIfkuIDmoLcs6L+Z5qC35rGC5Ye65p2l55qE55u45a+55ZCR6YeP5piv5YeG56Gu55qE77yM5aaC5p6c5Zyo5ZCO6Z2i5LmL6Ze05a+5bm9ybWFs6L+b6KGM5Y+Y5YyW77yM5bCx5Lya5b6X5Ye66ZSZ6K+v55qE57uT5p6cXG5cdFx0X25vdy54ICo9IGFzcGVjdDtcblx0XHRfbmV4dC54ICo9IGFzcGVjdDtcblx0XHRfcHJlLnggKj0gYXNwZWN0O1xuXHRcdFxuXHRcdHZlYzIgX2RpciA9IG5vcm1hbGl6ZShzdGF0dXMqX25vdyAtIHN0YXR1cypfcHJlICsgKDEuMC1zdGF0dXMpKl9uZXh0IC0gKDEuMC1zdGF0dXMpKl9ub3cpO1xuXG5cdFx0dmVjMiBub3JtYWwgPSB2ZWMyKCAtX2Rpci55ICwgX2Rpci54ICk7XG5cdFx0dmVjMiBkaXIgPSBub3JtYWwgKiB3aWR0aCAqIC41ICogc2lkZTtcblxuXHRcdC8vIOWBj+enu+mHj1xuXHRcdGlmKG9mZnNldCE9MC4pe1xuXHRcdFx0dmVjMiBwb2ludDIxID0gbm9ybWFsaXplKF9uZXh0IC0gX25vdyk7XG5cdFx0XHR2ZWMyIHBvaW50MTAgPSBub3JtYWxpemUoX25vdyAtIF9wcmUpO1xuXHRcdFx0dmVjMiBvZmZzZXREaXIgPSBub3JtYWxpemUoIHBvaW50MjEgKyBwb2ludDEwKTtcblx0XHRcdHZlYzIgb2Zmc2V0Tm9ybWFsID0gdmVjMiggLW9mZnNldERpci55LCBvZmZzZXREaXIueCk7XG5cdFx0XHRmbG9hdCByYXRpbyA9IHNxcnQoMS4wIC0gcG93KGRvdChvZmZzZXROb3JtYWwscG9pbnQxMCksMi4wKSk7XG5cdFx0XHR2ZWMyIG9mZnNldHMgPSAgb2Zmc2V0Tm9ybWFsICogb2Zmc2V0L3JhdGlvICA7XG5cdFx0XHRkaXIgKz0gb2Zmc2V0cztcblx0XHR9XG5cblx0XHQvLyDlvpflh7rnmoR45Z2Q5qCH5Lya6KKr5pS+5aSn77yM6L+Z6YeM6KaB6Zmk5o6JLOiusOW+l+imgeeUqOi9rOaNouWQjuWdkOagh+i/m+ihjOWKoOWHj1xuXHRcdGdsX1Bvc2l0aW9uID0gdmVjNChtTm93LnggKyBkaXIueC9hc3BlY3QsbU5vdy55K2Rpci55ICwgMS4sIDEuKTtcblx0fVxuXHRgLFxuXG5cdGZyYWdtZW50U2hhZGVyOiBgXG5cdHByZWNpc2lvbiBsb3dwIGZsb2F0O1xuXHR1bmlmb3JtIHZlYzQgY29sb3I7XG5cdHZhcnlpbmcgZmxvYXQgdlNpZGU7XG5cdHZvaWQgbWFpbigpXG5cdHtcblx0XHRmbG9hdCBzbW9vdGhTaWRlUmF0aW8gPSBtYXgoMC4xLHNtb290aHN0ZXAoMC4sMC4zLCgxLiAtIGFicyh2U2lkZSkpKSk7XG5cdFx0Z2xfRnJhZ0NvbG9yID0gY29sb3I7XG5cdFx0Z2xfRnJhZ0NvbG9yLncgKj0gc21vb3RoU2lkZVJhdGlvO1xuXHR9XG5cdGBcbn0iLCJpbXBvcnQgc2hhZGVyIGZyb20gJ0AvU2hhZGVycy9yb3VuZExpbmUuanMnO1xuaW1wb3J0IEJhc2UgZnJvbSAnLi4vQmFzZSc7XG5jbGFzcyBSb3VuZExpbmUgZXh0ZW5kcyBCYXNlIHtcblx0ZHJhd1R5cGUgPSBcIlRSSUFOR0xFU1wiLy9cIlRSSUFOR0xFX1NUUklQXCI7XG5cdHNoYWRlcnMgPSB7XG5cdFx0dmVydGV4OiBzaGFkZXIudmVydGV4U2hhZGVyLFxuXHRcdGZyYWdtZW50OiBzaGFkZXIuZnJhZ21lbnRTaGFkZXJcblx0fVxuXHRvZmZzZXQ9MDtcblxuXHRjb25zdHJ1Y3Rvcihjb25maWcpIHtcblx0XHRzdXBlcigpO1xuXHRcdGNvbmZpZyA9IE9iamVjdC5hc3NpZ24oe1xuXHRcdFx0d2lkdGg6MjAsXG5cdFx0XHR6OjEsXG5cdFx0XHRvZmZzZXQ6MCxcblx0XHR9LGNvbmZpZyk7XG5cdFx0dGhpcy51bmlmb3JtRGF0YSA9IHtcblx0XHRcdHo6e1xuXHRcdFx0XHR2YWx1ZTpjb25maWcuenx8MSxcblx0XHRcdFx0dHlwZTpcInVuaWZvcm0xZlwiXG5cdFx0XHR9XG5cdFx0fVxuXHRcdHRoaXMuaW5pdChjb25maWcpO1xuXHR9XG5cblx0c2V0RGF0YShkYXRhKSB7XG5cdFx0Y29uc3Qge1xuXHRcdFx0bWluaUdMOnt2aWV3cG9ydH1cblx0XHR9ID0gdGhpcztcblx0XHRcblx0XHRpZiAoIWRhdGEubGVuZ3RoICYmIGRhdGEubGVuZ3RoIDwgMikgcmV0dXJuIGNvbnNvbGUud2FybihcIm5lZWQgaW5wdXQgZGF0YS5sZW5ndGggPj0gMlwiKTtcblx0XHR0aGlzLnVuaWZvcm1EYXRhLnRyYW5zZm9ybT17XG5cdFx0XHR2YWx1ZTp2aWV3cG9ydC50cmFuc2Zvcm0sXG5cdFx0XHR0eXBlOlwidW5pZm9ybU1hdHJpeDNmdlwiXG5cdFx0fVxuXHRcdHRoaXMudW5pZm9ybURhdGEuYXNwZWN0ID0ge1xuXHRcdFx0dmFsdWU6IHZpZXdwb3J0LnJhdGlvLFxuXHRcdFx0dHlwZTpcInVuaWZvcm0xZlwiXG5cdFx0fVxuXHRcdHRoaXMudW5pZm9ybURhdGEuY29sb3IgPSB7XG5cdFx0XHR2YWx1ZTogdGhpcy5jb25maWcuY29sb3J8fFsxLDAsMSwxXSxcblx0XHRcdHR5cGU6XCJ1bmlmb3JtNGZ2XCJcblx0XHR9XG5cdFx0dGhpcy51bmlmb3JtRGF0YS53aWR0aCA9IHtcblx0XHRcdHZhbHVlOiAyKnRoaXMuY29uZmlnLndpZHRoL3RoaXMubWluaUdMLnZpZXdwb3J0LmhlaWdodCxcblx0XHRcdHR5cGU6XCJ1bmlmb3JtMWZcIlxuXHRcdH1cblx0XHR0aGlzLnVuaWZvcm1EYXRhLm9mZnNldCA9IHtcblx0XHRcdHZhbHVlOiAyKnRoaXMuY29uZmlnLm9mZnNldC90aGlzLm1pbmlHTC52aWV3cG9ydC5oZWlnaHQsXG5cdFx0XHR0eXBlOlwidW5pZm9ybTFmXCJcblx0XHR9XG5cdFx0dGhpcy5kYXRhID0gZGF0YTtcblxuXHRcdGNvbnN0IHBvaW50cyA9IFtdO1xuXHRcdGRhdGEuZm9yRWFjaChpdGVtPT57XG5cdFx0XHRwb2ludHMucHVzaChpdGVtLnBvc2l0aW9uLngsaXRlbS5wb3NpdGlvbi55KVxuXHRcdH0pXG5cblx0XHQvLyDnlJ/kuqflj4zlgI3ngrlmb3LkuKTkuKrovrlcblx0XHRjb25zdCByZXMgPSB0aGlzLmNhbGNTaWRlUG9pbnRzKGRhdGEpXG5cblx0XHR0aGlzLnNldEJ1ZmZlckRhdGEocmVzLm5vd0RhdGEsIFwibm93XCIsIDIpO1xuXHRcdHRoaXMuc2V0QnVmZmVyRGF0YShyZXMucHJlRGF0YSwgXCJwcmVcIiwgMik7XG5cdFx0dGhpcy5zZXRCdWZmZXJEYXRhKHJlcy5uZXh0RGF0YSwgXCJuZXh0XCIsIDIpO1xuXHRcdHRoaXMuc2V0QnVmZmVyRGF0YShyZXMuc2lkZSwgXCJzaWRlXCIsIDEpO1xuXHRcdHRoaXMuc2V0QnVmZmVyRGF0YShyZXMuc3RhdHVzLCBcInN0YXR1c1wiLCAxKTtcblxuXHRcdC8vIOeUn+aIkOmhtueCuVxuXHRcdGNvbnN0IGluZGljZXMgPSBbXTtcblx0XHRmb3IgKGxldCBqID0gMDtqIDwgZGF0YS5sZW5ndGggLSAxO2orKykge1xuXHRcdFx0Y29uc3QgbiA9IGogKiA0O1xuXHRcdFx0aW5kaWNlcy5wdXNoKFxuXHRcdFx0XHRuLCBuICsgMSwgbiArIDIsXG5cdFx0XHRcdG4gKyAyLCBuICsgMSwgbiArIDNcblx0XHRcdCk7XG5cdFx0fVxuXHRcdHRoaXMuc2V0SW5kaWNlcyhpbmRpY2VzKVxuXHRcdHRoaXMucmVzID0gcmVzO1xuXHR9XG5cblx0Y2FsY1NpZGVQb2ludHMoZGF0YSA9IFtdKSB7XG5cdFx0Y29uc3QgbGVuZ3RoID0gZGF0YS5sZW5ndGg7XG5cdFx0bGV0IHNpZGUgPSBbXTtcblx0XHRsZXQgbmV4dERhdGEgPSBbXTtcblx0XHRsZXQgcHJlRGF0YSA9IFtdO1xuXHRcdGxldCBub3dEYXRhID0gW107XG5cdFx0bGV0IHN0YXR1cyA9IFtdO1xuXG4gXHRcdC8vIOeUn+S6p+WPjOWAjeeCuWZvcuS4pOS4qui+uVxuXHRcdGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoLTE7IGkgKyspIHtcblx0XHRcdGxldCBwb2ludDEgPSBkYXRhW2ldLnBvc2l0aW9uO1xuXHRcdFx0bGV0IHBvaW50MCA9IGRhdGFbaSAtIDFdP2RhdGFbaS0xXS5wb3NpdGlvbjoge3g6IDIgKiBkYXRhW2ldLnBvc2l0aW9uLnggLSBkYXRhW2kgKyAxXS5wb3NpdGlvbi54LCB5OiAyICogZGF0YVtpXS5wb3NpdGlvbi55IC0gZGF0YVtpICsgMV0ucG9zaXRpb24ueX07XG5cdFx0XHRsZXQgcG9pbnQyID0gZGF0YVtpICsgMV0/ZGF0YVtpKzFdLnBvc2l0aW9uOiB7eDogMiAqIGRhdGFbaV0ucG9zaXRpb24ueCAtIGRhdGFbaSAtIDFdLnBvc2l0aW9uLngsIHk6IDIgKiBkYXRhW2ldLnBvc2l0aW9uLnkgLSBkYXRhW2kgLSAxXS5wb3NpdGlvbi55fTtcblx0XHRcdHNpZGUucHVzaCgxLCAtMSk7XG5cdFx0XHRwcmVEYXRhLnB1c2goXG5cdFx0XHRcdHBvaW50MC54LCBwb2ludDAueSxcblx0XHRcdFx0cG9pbnQwLngsIHBvaW50MC55XG5cdFx0XHQpO1xuXHRcdFx0bm93RGF0YS5wdXNoKFxuXHRcdFx0XHRwb2ludDEueCwgcG9pbnQxLnksXG5cdFx0XHRcdHBvaW50MS54LCBwb2ludDEueVxuXHRcdFx0KTtcblx0XHRcdG5leHREYXRhLnB1c2goXG5cdFx0XHRcdHBvaW50Mi54LCBwb2ludDIueSwgXG5cdFx0XHRcdHBvaW50Mi54LCBwb2ludDIueVxuXHRcdFx0KTtcblx0XHRcdGNvbnN0IGogPSBpICsgMTtcblx0XHRcdHBvaW50MSA9IGRhdGFbal0ucG9zaXRpb247XG5cdFx0XHRwb2ludDAgPSBkYXRhW2ogLSAxXSA/ZGF0YVtqLTFdLnBvc2l0aW9uOiB7eDogMiAqIGRhdGFbal0ucG9zaXRpb24ueCAtIGRhdGFbaiArIDFdLnBvc2l0aW9uLngsIHk6IDIgKiBkYXRhW2pdLnBvc2l0aW9uLnkgLSBkYXRhW2ogKyAxXS5wb3NpdGlvbi55fTtcblx0XHRcdHBvaW50MiA9IGRhdGFbaiArIDFdID9kYXRhW2orMV0ucG9zaXRpb246IHt4OiAyICogZGF0YVtqXS5wb3NpdGlvbi54IC0gZGF0YVtqIC0gMV0ucG9zaXRpb24ueCwgeTogMiAqIGRhdGFbal0ucG9zaXRpb24ueSAtIGRhdGFbaiAtIDFdLnBvc2l0aW9uLnl9O1xuXHRcdFx0c2lkZS5wdXNoKDEsIC0xKTtcblx0XHRcdHByZURhdGEucHVzaChcblx0XHRcdFx0cG9pbnQwLngsIHBvaW50MC55LFxuXHRcdFx0XHRwb2ludDAueCwgcG9pbnQwLnlcblx0XHRcdCk7XG5cdFx0XHRub3dEYXRhLnB1c2goXG5cdFx0XHRcdHBvaW50MS54LCBwb2ludDEueSxcblx0XHRcdFx0cG9pbnQxLngsIHBvaW50MS55XG5cdFx0XHQpO1xuXHRcdFx0bmV4dERhdGEucHVzaChcblx0XHRcdFx0cG9pbnQyLngsIHBvaW50Mi55LCBcblx0XHRcdFx0cG9pbnQyLngsIHBvaW50Mi55XG5cdFx0XHQpO1xuXHRcdFx0c3RhdHVzLnB1c2goMCwgMCwgMSwgMSk7XG5cdFx0fVxuXHQgXG5cdFx0cmV0dXJuIHtcblx0XHRcdHByZURhdGEsXG5cdFx0XHRub3dEYXRhLFxuXHRcdFx0bmV4dERhdGEsXG5cdFx0XHRzaWRlLFxuXHRcdFx0c3RhdHVzLFxuXHRcdH1cblx0fVxuIFxuXHRyZW5kZXIoKSB7XG5cdFx0Ly8gMkQg5Y+q6ZyA6KaB5Lik5Liq5Z2Q5qCH6L205qCH6K+G5L2N572uXG5cdFx0Y29uc3Qgb2Zmc2V0ID0gMDsvLyDku47mlbDmja7nrKzlh6DkvY3lvIDlp4vlgY/np7tcblx0XHRjb25zdCBub3JtYWxpemUgPSBmYWxzZTtcblxuXHRcdGZvciAobGV0IGtleSBpbiB0aGlzLmJ1ZmZlcnMpIHtcblx0XHRcdGNvbnN0IGJ1ZmZlckRhdGEgPSB0aGlzLmJ1ZmZlcnNba2V5XTtcblx0XHRcdGNvbnN0IGJ1ZmZlclBvc2l0aW9uID0gdGhpcy5nZXRBdHRyaWJMb2NhdGlvbihrZXkpO1xuXHRcdFx0Ly8g5YiG5Yir57uR5a6a5pWw5o2u5Yiwc2hhZGVy56iL5bqP5LitXG5cdFx0XHR0aGlzLmdsLmJpbmRCdWZmZXIodGhpcy5nbC5BUlJBWV9CVUZGRVIsIGJ1ZmZlckRhdGEpO1xuXHRcdFx0dGhpcy5nbC52ZXJ0ZXhBdHRyaWJQb2ludGVyKGJ1ZmZlclBvc2l0aW9uLCB0aGlzLmJ1ZmZlcnNTaXplW2tleV0sIHRoaXMuZ2wuRkxPQVQsIG5vcm1hbGl6ZSwgMCwgb2Zmc2V0KTtcblxuXHRcdFx0Ly90b2RvOndlYmdsMi4wIOWunuS+i+aVsOe7hOiDveWHj+WwkeWQjOagt+W9oueKtuS9hua4suafk+S4jeWQjOeahOmrmOaAp+iDveaWueahiFxuXHRcdFx0dGhpcy5nbC5lbmFibGVWZXJ0ZXhBdHRyaWJBcnJheShidWZmZXJQb3NpdGlvbik7XG5cdFx0fVxuXG5cdFx0Ly8g5L2/55So6aG254K55pWw5o2uXG5cdFx0dGhpcy5nbC5iaW5kQnVmZmVyKHRoaXMuZ2wuRUxFTUVOVF9BUlJBWV9CVUZGRVIsIHRoaXMuaW5kaWNlc1BvaW50ZXIpO1xuXG5cdFx0Ly8g5Yqg6L29c2hhZGVy56iL5bqPXG5cdFx0dGhpcy5nbC51c2VQcm9ncmFtKHRoaXMuc2hhZGVyUHJvZ3JhbSk7XG5cblx0XHR0aGlzLnNldFVuaWZvcm1EYXRhKCk7XG5cblx0XHQvLyDmuLLmn5Ncblx0XHRpZiAodGhpcy5pbmRpY2VzLmxlbmd0aCl7XG5cdFx0XHR0aGlzLmdsLmRyYXdFbGVtZW50cyh0aGlzLmdsW3RoaXMuZHJhd1R5cGVdLCB0aGlzLmluZGljZXMubGVuZ3RoLCB0aGlzLmdsLlVOU0lHTkVEX1NIT1JULCB0aGlzLm9mZnNldCk7XG5cblx0XHR9XG5cdH1cbn1cbmV4cG9ydCBkZWZhdWx0IFJvdW5kTGluZTsiLCJleHBvcnQgZGVmYXVsdCB7XG5cdC8vIOWFiOaxgui/nuaOpee6v+eEtuWQjuWGjeaxguWegue6v1xuXHQvLyDmsYLlh7rnrYnmr5TmlL7lpKfnmoTlgLxcblx0dmVydGV4U2hhZGVyOiBgXG5cdHByZWNpc2lvbiBoaWdocCBmbG9hdDtcblx0YXR0cmlidXRlIHZlYzIgbm93O1xuXHRhdHRyaWJ1dGUgdmVjMiBwcmU7XG5cdGF0dHJpYnV0ZSB2ZWMyIG5leHQ7XG5cdHVuaWZvcm0gZmxvYXQgd2lkdGg7XG5cdHVuaWZvcm0gZmxvYXQgYXNwZWN0O1xuXHR1bmlmb3JtIGZsb2F0IHo7XG5cdHVuaWZvcm0gbWF0MyB0cmFuc2Zvcm07XG5cdHVuaWZvcm0gZmxvYXQgb2Zmc2V0O1xuXHR2b2lkIG1haW4oKVxuXHR7XG5cdFx0Ly8g5YWI6L2s5o2i5Z2Q5qCH57O7XG5cdFx0dmVjMiBtTm93ID0gKHRyYW5zZm9ybSp2ZWMzKG5vdywxLikpLnh5O1xuXHRcdHZlYzIgbU5leHQgPSAodHJhbnNmb3JtKnZlYzMobmV4dCwxLikpLnh5O1xuXHRcdHZlYzIgbVByZSA9ICh0cmFuc2Zvcm0qdmVjMyhwcmUsMS4pKS54eTtcblx0XHR2ZWMyIF9ub3cgPSB2ZWMyKG1Ob3cpO1xuXHRcdHZlYzIgX25leHQgPSB2ZWMyKG1OZXh0KTtcblx0XHR2ZWMyIF9wcmUgPSAgdmVjMihtUHJlKTtcblx0XG5cdFx0Ly8g5YWI5oqK5pys5Z2Q5qCH57O755qE5Z2Q5qCH5pS+5aSn77yM5ZKM55yf5a6e55qE5aSW55WM5Z2Q5qCH5LiA5qC3LOi/meagt+axguWHuuadpeeahOebuOWvueWQkemHj+aYr+WHhuehrueahO+8jOWmguaenOWcqOWQjumdouS5i+mXtOWvuW5vcm1hbOi/m+ihjOWPmOWMlu+8jOWwseS8muW+l+WHuumUmeivr+eahOe7k+aenFxuXHRcdF9ub3cueCAqPSBhc3BlY3Q7XG5cdFx0X25leHQueCAqPSBhc3BlY3Q7XG5cdFx0X3ByZS54ICo9IGFzcGVjdDtcblx0XHRcblx0XHQvLyDlgY/np7tcblx0XHRpZihvZmZzZXQhPTAuKXtcblx0XHRcdHZlYzIgcG9pbnQyMSA9IG5vcm1hbGl6ZShfbmV4dCAtIF9ub3cpO1xuXHRcdFx0dmVjMiBwb2ludDEwID0gbm9ybWFsaXplKF9ub3cgLSBfcHJlKTtcblx0XHRcdHZlYzIgb2Zmc2V0RGlyID0gbm9ybWFsaXplKCBwb2ludDIxICsgcG9pbnQxMCk7XG5cdFx0XHR2ZWMyIG9mZnNldE5vcm1hbCA9IHZlYzIoIC1vZmZzZXREaXIueSwgb2Zmc2V0RGlyLngpO1xuXHRcdFx0ZmxvYXQgcmF0aW8gPSBzcXJ0KDEuMCAtIHBvdyhkb3Qob2Zmc2V0Tm9ybWFsLHBvaW50MTApLDIuMCkpO1xuXHRcdFx0dmVjMiBvZmZzZXRzID0gIG9mZnNldE5vcm1hbCAqIG9mZnNldC9yYXRpbyA7XG5cdFx0XHRvZmZzZXRzLnggLz0gYXNwZWN0O1xuXHRcdFx0bU5vdyArPSBvZmZzZXRzO1xuXHRcdH1cblxuXHRcdC8vIOW+l+WHuueahHjlnZDmoIfkvJrooqvmlL7lpKfvvIzov5nph4zopoHpmaTmjoks6K6w5b6X6KaB55So6L2s5o2i5ZCO5Z2Q5qCH6L+b6KGM5Yqg5YePXG5cdFx0Z2xfUG9pbnRTaXplID0gd2lkdGg7XG5cblx0XHRnbF9Qb3NpdGlvbiA9IHZlYzQobU5vdy54LG1Ob3cueSAsIHosIDEuKTtcblx0fVxuXHRgLFxuXG5cdGZyYWdtZW50U2hhZGVyOiBgXG5cdHByZWNpc2lvbiBoaWdocCBmbG9hdDtcblx0dW5pZm9ybSB2ZWM0IGNvbG9yO1xuXHR2b2lkIG1haW4oKVxuXHR7XG5cdFx0ZmxvYXQgbCA9IGxlbmd0aChnbF9Qb2ludENvb3JkIC0gdmVjMigwLjUsMC41KSk7XG5cdFx0XG5cdFx0ZmxvYXQgc21vb3RoU2lkZVJhdGlvID0gc21vb3Roc3RlcCgwLiwwLjMsKDAuNS1sKSk7XG5cdFx0Z2xfRnJhZ0NvbG9yID0gY29sb3I7XG5cdFx0Z2xfRnJhZ0NvbG9yLncgKj0gc21vb3RoU2lkZVJhdGlvO1xuXHR9XG5cdGBcbn0iLCJpbXBvcnQgc2hhZGVyIGZyb20gJ0AvU2hhZGVycy9yb3VuZExpbmVQb2ludC5qcyc7XG5pbXBvcnQgQmFzZSBmcm9tICcuLi9CYXNlJztcbmNsYXNzIExpbmVQb2ludCBleHRlbmRzIEJhc2Uge1xuXHRkcmF3VHlwZSA9IFwiUE9JTlRTXCIvL1wiVFJJQU5HTEVfU1RSSVBcIjtcblx0c2hhZGVycyA9IHtcblx0XHR2ZXJ0ZXg6IHNoYWRlci52ZXJ0ZXhTaGFkZXIsXG5cdFx0ZnJhZ21lbnQ6IHNoYWRlci5mcmFnbWVudFNoYWRlclxuXHR9XG5cdG9mZnNldD0wO1xuXG5cdGNvbnN0cnVjdG9yKGNvbmZpZykge1xuXHRcdHN1cGVyKCk7XG5cdFx0Y29uZmlnID0gT2JqZWN0LmFzc2lnbih7XG5cdFx0XHR3aWR0aDoyMCxcblx0XHRcdHo6MSxcblx0XHRcdG9mZnNldDowLFxuXHRcdH0sY29uZmlnKTtcblx0XHR0aGlzLnVuaWZvcm1EYXRhID0ge1xuXHRcdFx0ejp7XG5cdFx0XHRcdHZhbHVlOmNvbmZpZy56fHwxLFxuXHRcdFx0XHR0eXBlOlwidW5pZm9ybTFmXCJcblx0XHRcdH1cblx0XHR9XG5cdFx0dGhpcy5pbml0KGNvbmZpZyk7XG5cdH1cblxuXHRzZXREYXRhKHJlcykge1xuXHRcdGNvbnN0IHtcblx0XHRcdG1pbmlHTDp7dmlld3BvcnR9XG5cdFx0fSA9IHRoaXM7XG5cdFx0XG5cdFx0dGhpcy51bmlmb3JtRGF0YS50cmFuc2Zvcm09e1xuXHRcdFx0dmFsdWU6dmlld3BvcnQudHJhbnNmb3JtLFxuXHRcdFx0dHlwZTpcInVuaWZvcm1NYXRyaXgzZnZcIlxuXHRcdH1cblx0XHR0aGlzLnVuaWZvcm1EYXRhLmFzcGVjdCA9IHtcblx0XHRcdHZhbHVlOiB2aWV3cG9ydC5yYXRpbyxcblx0XHRcdHR5cGU6XCJ1bmlmb3JtMWZcIlxuXHRcdH1cblx0XHR0aGlzLnVuaWZvcm1EYXRhLmNvbG9yID0ge1xuXHRcdFx0dmFsdWU6IHRoaXMuY29uZmlnLmNvbG9yfHxbMSwwLDEsMV0sXG5cdFx0XHR0eXBlOlwidW5pZm9ybTRmdlwiXG5cdFx0fVxuXHRcdHRoaXMudW5pZm9ybURhdGEud2lkdGggPSB7XG5cdFx0XHR2YWx1ZTogdGhpcy5jb25maWcud2lkdGgsXG5cdFx0XHR0eXBlOlwidW5pZm9ybTFmXCJcblx0XHR9XG5cdFx0dGhpcy51bmlmb3JtRGF0YS5vZmZzZXQgPSB7XG5cdFx0XHR2YWx1ZTogMip0aGlzLmNvbmZpZy5vZmZzZXQvdGhpcy5taW5pR0wudmlld3BvcnQuaGVpZ2h0LFxuXHRcdFx0dHlwZTpcInVuaWZvcm0xZlwiXG5cdFx0fVxuXG5cdFx0Ly8g55Sf5Lqn5Y+M5YCN54K5Zm9y5Lik5Liq6L65XG5cdFx0dGhpcy52ZXJ0ZXggPSByZXMubm93RGF0YTtcblx0XHR0aGlzLnNldEJ1ZmZlckRhdGEocmVzLm5vd0RhdGEsIFwibm93XCIsIDIpO1xuXHRcdHRoaXMuc2V0QnVmZmVyRGF0YShyZXMucHJlRGF0YSwgXCJwcmVcIiwgMik7XG5cdFx0dGhpcy5zZXRCdWZmZXJEYXRhKHJlcy5uZXh0RGF0YSwgXCJuZXh0XCIsIDIpO1xuXHR9XG59XG5leHBvcnQgZGVmYXVsdCBMaW5lUG9pbnQ7IiwiaW1wb3J0IExpbmUgZnJvbSAnLi9MaW5lLmpzJztcbmltcG9ydCBMaW5lUG9pbnQgZnJvbSAnLi9MaW5lUG9pbnQnO1xuXG5jbGFzcyBSb3VuZExpbmUge1xuXHRkZXB0aE1hc2sgPSB0cnVlO1xuXHRkZXB0aFRlc3QgPSB0cnVlO1xuXHR0cmFuc3BhcmVudCA9IHRydWU7XG5cdGNvbnN0cnVjdG9yKGNvbmZpZykge1xuXHRcdHRoaXMubGluZSA9IG5ldyBMaW5lKGNvbmZpZyk7XG5cdFx0dGhpcy5saW5lUG9pbnQgPSBuZXcgTGluZVBvaW50KGNvbmZpZyk7XG5cdH1cblxuXHRvbkFkZCgpIHtcblx0XHR0aGlzLmxpbmUub25BZGQoLi4uYXJndW1lbnRzKTtcblx0XHR0aGlzLmxpbmVQb2ludC5vbkFkZCguLi5hcmd1bWVudHMpO1xuXHR9XG5cblx0c2V0RGF0YSgpIHtcblx0XHR0aGlzLmxpbmUuc2V0RGF0YSguLi5hcmd1bWVudHMpO1xuXHRcdHRoaXMubGluZVBvaW50LnNldERhdGEodGhpcy5saW5lLnJlcyk7XG5cdH1cblxuXHRkaXNwb3NlKCkge1xuXHRcdHRoaXMubGluZS5kaXNwb3NlKC4uLmFyZ3VtZW50cyk7XG5cdFx0dGhpcy5saW5lUG9pbnQuZGlzcG9zZSguLi5hcmd1bWVudHMpO1xuXHR9XG5cblx0ZGVzdHJveSgpIHtcblx0XHR0aGlzLmxpbmUuZGVzdHJveSguLi5hcmd1bWVudHMpO1xuXHRcdHRoaXMubGluZVBvaW50LmRlc3Ryb3koLi4uYXJndW1lbnRzKTtcblx0fVxuXG5cdHJlbmRlcigpIHtcblx0XHR0aGlzLmxpbmVQb2ludC5yZW5kZXIoLi4uYXJndW1lbnRzKTtcblx0XHR0aGlzLmxpbmUucmVuZGVyKC4uLmFyZ3VtZW50cyk7XG5cdH1cbn1cbmV4cG9ydCBkZWZhdWx0IFJvdW5kTGluZTtcbiIsImltcG9ydCBCYXNlIGZyb20gJy4uL01lc2gvQmFzZSc7XG5pbXBvcnQge21hdDN9IGZyb20gJ2dsLW1hdHJpeCc7XG4vKipcbiAqIOi/m+ihjOaJuemHj+a4suafk1xuICogQGNsYXNzXG4gKi9cbmNsYXNzIEdyb3VwIGV4dGVuZHMgQmFzZSB7XG4gICAgZGVwdGhNYXNrID0gdHJ1ZTtcbiAgICBkZXB0aFRlc3QgPSB0cnVlO1xuICAgIHRyYW5zcGFyZW50ID0gdHJ1ZTtcbiAgICBjaGlsZHJlbj1bXTtcbiAgICBjaGlsZElkID0gLTE7XG5cbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5jaGlsZHJlbiA9IFtdO1xuICAgICAgICB0aGlzLmluaXQoY29uZmlnKTtcbiAgICB9XG5cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICBCYXNlLmRpc3Bvc2UuY2FsbCh0aGlzKTtcbiAgICAgICAgdGhpcy5jaGlsZHJlbi5mb3JFYWNoKChpdGVtLCBpbmRleCk9PntcbiAgICAgICAgICAgIGl0ZW0uZGVzdHJveSAmJiBpdGVtLmRlc3Ryb3koKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgb25BZGQobWluaUdMKSB7XG4gICAgICAgIHRoaXMubWluaUdMID0gbWluaUdMO1xuICAgICAgICAvLyDojrflj5bpobbngrnmlbDmja7lhoXlrZjph4znmoTmjIfpkohcbiAgICAgICAgdGhpcy5nbCA9IG1pbmlHTC5nbDtcbiAgICAgICAgdGhpcy5pbmRpY2VzUG9pbnRlciA9IHRoaXMuZ2wuY3JlYXRlQnVmZmVyKCk7XG4gICAgICAgIHRoaXMuY2hpbGRyZW4uZm9yRWFjaChlYWNoPT57XG4gICAgICAgICAgICBpZiAoIWVhY2gubWluaUdMKSB7ZWFjaC5vbkFkZChtaW5pR0wpO31cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgYWRkQ2hpbGQoY2hpbGQpIHtcbiAgICAgICAgdGhpcy5jaGlsZElkKys7XG4gICAgICAgIGNoaWxkLmNoaWxkSWQgPSB0aGlzLmNoaWxkSWQ7XG4gICAgICAgIGNoaWxkLnBhcmVudCA9IHRoaXM7XG4gICAgICAgIHRoaXMuY2hpbGRyZW4ucHVzaChjaGlsZCk7XG4gICAgICAgIGNoaWxkLnpPcmRlciA9IHRoaXMuY2hpbGRyZW4ubGVuZ3RoIC0gMTtcbiAgICAgICAgaWYgKHRoaXMubWluaUdMKSB7XG4gICAgICAgICAgICBjaGlsZC5vbkFkZCh0aGlzLm1pbmlHTCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhZGRDaGlsZEF0KGNoaWxkLCBpbmRleCkge1xuICAgICAgICBjaGlsZC5jaGlsZElkID0gdGhpcy5jaGlsZElkKys7XG4gICAgICAgIGNoaWxkLnBhcmVudCA9IHRoaXM7XG4gICAgICAgIGlmICh0aGlzLm1pbmlHTCkge1xuICAgICAgICAgICAgY2hpbGQub25BZGQodGhpcy5taW5pR0wpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY2hpbGRyZW4uc3BsaWNlKGluZGV4LCAwLCBjaGlsZCk7XG4gICAgICAgIGNoaWxkLnpPcmRlciA9IGluZGV4ICsgMTtcbiAgICB9XG5cbiAgICByZW1vdmVDaGlsZChjaGlsZCkge1xuICAgICAgICBjb25zdCBwb3MgPSB0aGlzLmNoaWxkcmVuLmluZGV4T2YoY2hpbGQpO1xuICAgICAgICBpZiAoIXBvcyA8PSAtMSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY2hpbGRyZW5bcG9zXS5wYXJlbnQgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuY2hpbGRyZW4uc3BsaWNlKHBvcywgMSkgO1xuICAgIH1cblxuICAgIHN3YXBDaGlsZHJlbihhLCBiKSB7XG4gICAgICAgIHRoaXMuY2hpbGRyZW4uZm9yRWFjaCgoaXRlbSwgaW5kZXgpPT57XG4gICAgICAgICAgICBpZiAoaXRlbSA9PT0gYSkge1xuICAgICAgICAgICAgICAgIHRoaXMuY2hpbGRyZW5baW5kZXhdID0gYjtcbiAgICAgICAgICAgICAgICB0aGlzLmNoaWxkcmVuW2luZGV4XS56T3JkZXIgPSBpbmRleDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpdGVtID09PSBiKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jaGlsZHJlbltpbmRleF0gPSBhO1xuICAgICAgICAgICAgICAgIHRoaXMuY2hpbGRyZW5baW5kZXhdLnpPcmRlciA9IGluZGV4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbn1cbmV4cG9ydCBkZWZhdWx0IEdyb3VwO1xuIiwiY29uc3QgQmxlbmRNb2RlID0ge1xuICAgIE5vcm1hbDogMCxcbiAgICBBZGQ6IDEsXG4gICAgQWxwaGE6IDIsXG4gICAgRGFya2VuOiAzLFxuICAgIERpZmZlcmVuY2U6IDQsXG4gICAgRXJhc2U6IDUsXG4gICAgSGFyZExpZ2h0OiA2LFxuICAgIEludmVydDogNyxcbiAgICBMYXllcjogOCxcbiAgICBMaWdodGVuOiA5LFxuICAgIE11bHRpcGx5OiAxMCxcbiAgICBPdmVybGF5OiAxMSxcbiAgICBTY3JlZW46IDEyLFxuICAgIFN1YnRyYWN0OiAxM1xufTtcbmNvbnN0IEJvbmVUeXBlID0ge1xuICAgIEJvbmU6IDAsXG4gICAgU3VyZmFjZTogMVxufTtcbmNvbnN0IEJpbmFyeU9mZnNldCA9IHtcbiAgICBXZWlndGhCb25lQ291bnQ6IDAsXG4gICAgV2VpZ3RoRmxvYXRPZmZzZXQ6IDEsXG4gICAgV2VpZ3RoQm9uZUluZGljZXM6IDIsXG4gICAgR2VvbWV0cnlWZXJ0ZXhDb3VudDogMCxcbiAgICBHZW9tZXRyeVRyaWFuZ2xlQ291bnQ6IDEsXG4gICAgR2VvbWV0cnlGbG9hdE9mZnNldDogMixcbiAgICBHZW9tZXRyeVdlaWdodE9mZnNldDogMyxcbiAgICBHZW9tZXRyeVZlcnRleEluZGljZXM6IDQsXG4gICAgVGltZWxpbmVTY2FsZTogMCxcbiAgICBUaW1lbGluZU9mZnNldDogMSxcbiAgICBUaW1lbGluZUtleUZyYW1lQ291bnQ6IDIsXG4gICAgVGltZWxpbmVGcmFtZVZhbHVlQ291bnQ6IDMsXG4gICAgVGltZWxpbmVGcmFtZVZhbHVlT2Zmc2V0OiA0LFxuICAgIFRpbWVsaW5lRnJhbWVPZmZzZXQ6IDUsXG4gICAgRnJhbWVQb3NpdGlvbjogMCxcbiAgICBGcmFtZVR3ZWVuVHlwZTogMSxcbiAgICBGcmFtZVR3ZWVuRWFzaW5nT3JDdXJ2ZVNhbXBsZUNvdW50OiAyLFxuICAgIEZyYW1lQ3VydmVTYW1wbGVzOiAzLFxuICAgIERlZm9ybVZlcnRleE9mZnNldDogMCxcbiAgICBEZWZvcm1Db3VudDogMSxcbiAgICBEZWZvcm1WYWx1ZUNvdW50OiAyLFxuICAgIERlZm9ybVZhbHVlT2Zmc2V0OiAzLFxuICAgIERlZm9ybUZsb2F0T2Zmc2V0OiA0XG59O1xuZXhwb3J0IHtcbiAgICBCbGVuZE1vZGUsIEJpbmFyeU9mZnNldCwgQm9uZVR5cGVcbn07XG4iLCJpbXBvcnQgZ2V0UHJvdG90eXBlT2YgZnJvbSBcIi4vZ2V0UHJvdG90eXBlT2YuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9zdXBlclByb3BCYXNlKG9iamVjdCwgcHJvcGVydHkpIHtcbiAgd2hpbGUgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSkpIHtcbiAgICBvYmplY3QgPSBnZXRQcm90b3R5cGVPZihvYmplY3QpO1xuICAgIGlmIChvYmplY3QgPT09IG51bGwpIGJyZWFrO1xuICB9XG5cbiAgcmV0dXJuIG9iamVjdDtcbn0iLCJpbXBvcnQgc3VwZXJQcm9wQmFzZSBmcm9tIFwiLi9zdXBlclByb3BCYXNlLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyKSB7XG4gIGlmICh0eXBlb2YgUmVmbGVjdCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBSZWZsZWN0LmdldCkge1xuICAgIF9nZXQgPSBSZWZsZWN0LmdldDtcbiAgfSBlbHNlIHtcbiAgICBfZ2V0ID0gZnVuY3Rpb24gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlcikge1xuICAgICAgdmFyIGJhc2UgPSBzdXBlclByb3BCYXNlKHRhcmdldCwgcHJvcGVydHkpO1xuICAgICAgaWYgKCFiYXNlKSByZXR1cm47XG4gICAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYmFzZSwgcHJvcGVydHkpO1xuXG4gICAgICBpZiAoZGVzYy5nZXQpIHtcbiAgICAgICAgcmV0dXJuIGRlc2MuZ2V0LmNhbGwocmVjZWl2ZXIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZGVzYy52YWx1ZTtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIF9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIgfHwgdGFyZ2V0KTtcbn0iLCJjb25zdCB7IFRleHR1cmVEYXRhID0gbnVsbCwgQmFzZU9iamVjdCA9IG51bGwsIFRleHR1cmVBdGxhc0RhdGEgPSBudWxsfSA9IHdpbmRvdy5kcmFnb25Cb25lcyB8fCB7fTtcbmltcG9ydCBUZXh0dXJlIGZyb20gJy4uL1RleHR1cmUvVGV4dHVyZSc7XG5jbGFzcyBNaW5pR0xUZXh0dXJlQXRsYXNEYXRhIGV4dGVuZHMgVGV4dHVyZUF0bGFzRGF0YSB7XG5cbiAgICBzY2FsZT0xO1xuICAgIF9vbkNsZWFyKCkge1xuICAgICAgICBzdXBlci5fb25DbGVhcigpO1xuXG4gICAgICAgIGlmICh0aGlzLmRpc3Bvc2VFbmFibGVkICYmIHRoaXMuX3JlbmRlclRleHR1cmUgIT09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMuX3JlbmRlclRleHR1cmUuZGlzcG9zZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5kaXNwb3NlRW5hYmxlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9yZW5kZXJUZXh0dXJlID0gbnVsbDtcbiAgICB9XG5cbiAgICBjcmVhdGVUZXh0dXJlKCkge1xuICAgICAgICBjb25zdCB0ZXh0dXJlID0gQmFzZU9iamVjdC5ib3Jyb3dPYmplY3QoTWluaVRleHR1cmVEYXRhKTtcbiAgICAgICAgcmV0dXJuIHRleHR1cmU7XG4gICAgfVxuICAgIHNldFJlbmRlclRleHR1cmUodGV4dHVyZSwgbWluaUdMKSB7XG4gICAgICAgIHRoaXMuX3JlbmRlclRleHR1cmUgPSB0ZXh0dXJlO1xuXG4gICAgICAgIGlmICh0aGlzLl9yZW5kZXJUZXh0dXJlICE9PSBudWxsKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBrIGluIHRoaXMudGV4dHVyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB0ZXh0dXJlRGF0YSA9IHRoaXMudGV4dHVyZXNba107XG4gICAgICAgICAgICAgICAgaWYgKHRleHR1cmVEYXRhLnJlZ2lvbi5yb3RhdGVkKSB7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHJlbmRlclRleHR1cmUgPSBuZXcgVGV4dHVyZShtaW5pR0wpO1xuICAgICAgICAgICAgICAgIHJlbmRlclRleHR1cmUuY3JlYXRlKHtpbWFnZTogdGV4dHVyZSwgcmVjdDogdGV4dHVyZURhdGEucmVnaW9uLCByZXZlcnNlWTogZmFsc2UsIG5hbWU6IHRleHR1cmVEYXRhLm5hbWV9KTtcbiAgICAgICAgICAgICAgICB0ZXh0dXJlRGF0YS5yZW5kZXJUZXh0dXJlID0gcmVuZGVyVGV4dHVyZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZvciAobGV0IGsgaW4gdGhpcy50ZXh0dXJlcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRleHR1cmVEYXRhID0gdGhpcy50ZXh0dXJlc1trXTtcbiAgICAgICAgICAgICAgICB0ZXh0dXJlRGF0YS5yZW5kZXJUZXh0dXJlID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGV4dHVyZTtcbiAgICB9XG5cbn1cblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuY2xhc3MgTWluaVRleHR1cmVEYXRhIGV4dGVuZHMgVGV4dHVyZURhdGEge1xuICAgIHJlbmRlclRleHR1cmUgPSBudWxsOyAvLyBJbml0aWFsIHZhbHVlLlxuICAgIF9vbkNsZWFyKCkge1xuICAgICAgICBUZXh0dXJlRGF0YS5wcm90b3R5cGUuX29uQ2xlYXIuY2FsbCh0aGlzKTtcbiAgICAgICAgaWYgKHRoaXMucmVuZGVyVGV4dHVyZSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5yZW5kZXJUZXh0dXJlLmRlc3Ryb3koZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucmVuZGVyVGV4dHVyZSA9IG51bGw7XG4gICAgfVxufVxuXG5NaW5pVGV4dHVyZURhdGEudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gJ1tjbGFzcyBkcmFnb25Cb25lcy5NaW5pVGV4dHVyZURhdGFdJztcbn07XG5NaW5pR0xUZXh0dXJlQXRsYXNEYXRhLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuICdbY2xhc3MgZHJhZ29uQm9uZXMuTWluaUF0bGFzRGF0YV0nO1xufTtcbmV4cG9ydCBkZWZhdWx0IE1pbmlHTFRleHR1cmVBdGxhc0RhdGE7XG4iLCJjb25zdCB7U2xvdCA9ICgpPT57fX0gPSB3aW5kb3cuZHJhZ29uQm9uZXMgfHwge307XG5pbXBvcnQge0JpbmFyeU9mZnNldCwgQm9uZVR5cGUsIEJsZW5kTW9kZX0gZnJvbSAnLi9FbnVtJztcbmltcG9ydCBNaW5pR0xUZXh0dXJlQXRsYXNEYXRhIGZyb20gJy4vTWluaUdMVGV4dHVyZUF0bGFzRGF0YSc7XG5pbXBvcnQge21hdDN9IGZyb20gJ2dsLW1hdHJpeCc7XG5cbi8qKlxuICog6aqo6aq85o+S5qe9XG4gKiBAY2xhc3NcbiAqL1xuY2xhc3MgTWluaUdMU2xvdCBleHRlbmRzIFNsb3Qge1xuXG4gICAgX29uQ2xlYXIoKSB7XG4gICAgICAgIFNsb3QucHJvdG90eXBlLl9vbkNsZWFyLmNhbGwodGhpcyk7XG4gICAgICAgIHRoaXMuX2FybWF0dXJlRGlzcGxheSA9IG51bGw7IC8vXG4gICAgICAgIHRoaXMuX3JlbmRlckRpc3BsYXkgPSBudWxsOyAvL1xuICAgICAgICB0aGlzLl9jb2xvckZpbHRlciA9IG51bGw7XG4gICAgfVxuXG4gICAgX2luaXREaXNwbGF5KHZhbHVlLCBpc1JldGFpbikge1xuXG4gICAgfVxuXG4gICAgX2Rpc3Bvc2VEaXNwbGF5KHZhbHVlLCBpc1JlbGVhc2UpIHtcbiAgICAgICAgLy8gdmFsdWUuZGVzdHJveSgpO1xuICAgICAgICB2YWx1ZS5wYXJlbnQucmVtb3ZlKHZhbHVlKTtcbiAgICAgICAgdmFsdWUuZGVzdHJveSgpO1xuICAgIH1cblxuICAgIC8vIOabtOaWsOWJjeWHveaVsFxuICAgIF9vblVwZGF0ZURpc3BsYXkoKSB7XG4gICAgICAgIHRoaXMuX2FybWF0dXJlRGlzcGxheSA9IHRoaXMuX2FybWF0dXJlLmRpc3BsYXk7XG4gICAgICAgIHRoaXMuX3JlbmRlckRpc3BsYXkgPSB0aGlzLl9kaXNwbGF5ID8gdGhpcy5fZGlzcGxheSA6IHRoaXMuX3Jhd0Rpc3BsYXkgO1xuICAgIH1cblxuICAgIC8vIOa3u+WKoOWIsOmqqOaetuWuueWZqOS4rVxuICAgIF9hZGREaXNwbGF5KCkge1xuICAgICAgICBpZiAodGhpcy5fcmVuZGVyRGlzcGxheS5wYXJlbnQpIHt0aGlzLl9yZW5kZXJEaXNwbGF5LnBhcmVudC5yZW1vdmVDaGlsZCh0aGlzLl9yZW5kZXJEaXNwbGF5KTt9XG4gICAgICAgIHRoaXMuX2FybWF0dXJlLmRpc3BsYXkuYWRkQ2hpbGQodGhpcy5fcmVuZGVyRGlzcGxheSk7XG4gICAgfVxuXG4gICAgX3JlcGxhY2VEaXNwbGF5KHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX3JlbmRlckRpc3BsYXkucGFyZW50ICYmIHRoaXMuX3JlbmRlckRpc3BsYXkucGFyZW50LnJlbW92ZUNoaWxkKHRoaXMuX3JlbmRlckRpc3BsYXkpO1xuICAgICAgICB0aGlzLl9hcm1hdHVyZURpc3BsYXkuYWRkQ2hpbGQodGhpcy5fcmVuZGVyRGlzcGxheSk7XG4gICAgICAgIHRoaXMuX2FybWF0dXJlRGlzcGxheS5zd2FwQ2hpbGRyZW4odGhpcy5fcmVuZGVyRGlzcGxheSwgdmFsdWUpO1xuICAgICAgICB0aGlzLl9hcm1hdHVyZURpc3BsYXkucmVtb3ZlQ2hpbGQodmFsdWUpO1xuICAgICAgICB2YWx1ZS5kZXN0cm95KCk7XG4gICAgfVxuXG4gICAgIF9yZW1vdmVEaXNwbGF5KCkge1xuICAgICAgICB0aGlzLl9hcm1hdHVyZURpc3BsYXkucmVtb3ZlQ2hpbGQodGhpcy5fcmVuZGVyRGlzcGxheSk7XG4gICAgfVxuXG4gICAgX3VwZGF0ZVpPcmRlcigpIHtcbiAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLl9yZW5kZXJEaXNwbGF5LnpPcmRlcjtcbiAgICAgICAgaWYgKGluZGV4ID09PSB0aGlzLl96T3JkZXIpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9hcm1hdHVyZURpc3BsYXkucmVtb3ZlQ2hpbGQodGhpcy5fcmVuZGVyRGlzcGxheSk7XG4gICAgICAgIHRoaXMuX2FybWF0dXJlRGlzcGxheS5hZGRDaGlsZEF0KHRoaXMuX3JlbmRlckRpc3BsYXksIHRoaXMuX3pPcmRlcik7XG4gICAgfVxuXG4gICAgX3VwZGF0ZVZpc2libGUoKSB7XG4gICAgICAgIGNvbnN0IHZpc2libGUgPSB0aGlzLl9wYXJlbnQudmlzaWJsZSAmJiB0aGlzLl92aXNpYmxlO1xuICAgICAgICB0aGlzLl9yZW5kZXJEaXNwbGF5LnZpc2libGUgPSB2aXNpYmxlO1xuICAgIH1cblxuICAgICBfdXBkYXRlQmxlbmRNb2RlKCkge1xuICAgICAgICBjb25zdCB7bWluaUdMOiB7Z2x9fSA9IHRoaXMuX2FybWF0dXJlRGlzcGxheTtcbiAgICAgICAgc3dpdGNoICh0aGlzLl9ibGVuZE1vZGUpIHtcbiAgICAgICAgICAgIGNhc2UgQmxlbmRNb2RlLk5vcm1hbDpcbiAgICAgICAgICAgICAgICB0aGlzLl9yZW5kZXJEaXNwbGF5LmJsZW5kTW9kZSA9IGdsLk9ORV9NSU5VU19TUkNfQUxQSEE7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgQmxlbmRNb2RlLkFkZDpcbiAgICAgICAgICAgICAgICB0aGlzLl9yZW5kZXJEaXNwbGF5LmJsZW5kTW9kZSA9IGdsLk9ORV9NSU5VU19EU1RfQUxQSEE7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgQmxlbmRNb2RlLkVyYXNlOlxuICAgICAgICAgICAgICAgIHRoaXMuX3JlbmRlckRpc3BsYXkuYmxlbmRNb2RlID0gZ2wuRFNUX0FMUEhBO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgX3VwZGF0ZUNvbG9yKCkge1xuICAgICAgICBjb25zdCBhbHBoYSA9IHRoaXMuX2NvbG9yVHJhbnNmb3JtLmFscGhhTXVsdGlwbGllciAqIHRoaXMuX2dsb2JhbEFscGhhO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgdGhpcy5fcmVuZGVyRGlzcGxheS51bmlmb3JtRGF0YS5hbHBoYS52YWx1ZSA9IGFscGhhO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgIH1cblxuICAgIF91cGRhdGVGcmFtZSgpIHtcbiAgICAgICAgbGV0IGN1cnJlbnRUZXh0dXJlRGF0YSA9IHRoaXMuX3RleHR1cmVEYXRhO1xuICAgICAgICB0aGlzLl9yZW5kZXJEaXNwbGF5LnRleHR1cmVEYXRhID0gdGhpcy5fdGV4dHVyZURhdGE7XG5cbiAgICAgICAgaWYgKHRoaXMuX2Rpc3BsYXlGcmFtZSAhPT0gbnVsbCAmJiB0aGlzLl9kaXNwbGF5ICE9PSBudWxsICYmIGN1cnJlbnRUZXh0dXJlRGF0YSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgbGV0IGN1cnJlbnRUZXh0dXJlQXRsYXNEYXRhID0gY3VycmVudFRleHR1cmVEYXRhLnBhcmVudDtcblxuICAgICAgICAgICAgaWYgKHRoaXMuX2FybWF0dXJlLnJlcGxhY2VkVGV4dHVyZSAhPT0gbnVsbCkgeyAvLyBVcGRhdGUgcmVwbGFjZWQgdGV4dHVyZSBhdGxhcy5cbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fYXJtYXR1cmUuX3JlcGxhY2VUZXh0dXJlQXRsYXNEYXRhID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRUZXh0dXJlQXRsYXNEYXRhID0gbmV3IE1pbmlHTFRleHR1cmVBdGxhc0RhdGEoKTtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFRleHR1cmVBdGxhc0RhdGEuY29weUZyb20oY3VycmVudFRleHR1cmVEYXRhLnBhcmVudCk7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRUZXh0dXJlQXRsYXNEYXRhLnRleHR1cmUgPSB0aGlzLl9hcm1hdHVyZS5yZXBsYWNlZFRleHR1cmU7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2FybWF0dXJlLl9yZXBsYWNlVGV4dHVyZUF0bGFzRGF0YSA9IGN1cnJlbnRUZXh0dXJlQXRsYXNEYXRhO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRUZXh0dXJlQXRsYXNEYXRhID0gdGhpcy5fYXJtYXR1cmUuX3JlcGxhY2VUZXh0dXJlQXRsYXNEYXRhO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGN1cnJlbnRUZXh0dXJlRGF0YSA9IGN1cnJlbnRUZXh0dXJlQXRsYXNEYXRhLmdldFRleHR1cmUoY3VycmVudFRleHR1cmVEYXRhLm5hbWUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoY3VycmVudFRleHR1cmVEYXRhLnJlbmRlclRleHR1cmUgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fZ2VvbWV0cnlEYXRhICE9PSBudWxsKSB7IC8vIE1lc2guXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB0aGlzLl9nZW9tZXRyeURhdGEuZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaW50QXJyYXkgPSBkYXRhLmludEFycmF5O1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmbG9hdEFycmF5ID0gZGF0YS5mbG9hdEFycmF5O1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB2ZXJ0ZXhDb3VudCA9IGludEFycmF5W3RoaXMuX2dlb21ldHJ5RGF0YS5vZmZzZXQgKyBCaW5hcnlPZmZzZXQuR2VvbWV0cnlWZXJ0ZXhDb3VudF07XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHRyaWFuZ2xlQ291bnQgPSBpbnRBcnJheVt0aGlzLl9nZW9tZXRyeURhdGEub2Zmc2V0ICsgQmluYXJ5T2Zmc2V0Lkdlb21ldHJ5VHJpYW5nbGVDb3VudF07XG4gICAgICAgICAgICAgICAgICAgIGxldCB2ZXJ0ZXhPZmZzZXQgPSBpbnRBcnJheVt0aGlzLl9nZW9tZXRyeURhdGEub2Zmc2V0ICsgQmluYXJ5T2Zmc2V0Lkdlb21ldHJ5RmxvYXRPZmZzZXRdO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICh2ZXJ0ZXhPZmZzZXQgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2ZXJ0ZXhPZmZzZXQgKz0gNjU1MzY7IC8vIEZpeGVkIG91dCBvZiBib3VuZHMgYnVnLlxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdXZPZmZzZXQgPSB2ZXJ0ZXhPZmZzZXQgKyB2ZXJ0ZXhDb3VudCAqIDI7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHNjYWxlID0gdGhpcy5fYXJtYXR1cmUuX2FybWF0dXJlRGF0YS5zY2FsZTtcblxuICAgICAgICAgICAgICAgICAgICBjb25zdCBtZXNoRGlzcGxheSA9IHRoaXMuX3JlbmRlckRpc3BsYXk7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8g6L+Z5LiA5q2l55Sf5oiQ5omA6ZyA6KaB55qE54K55ZKMdXblkozntKLlvJVcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdXZzID0gW107Y29uc3QgdmVydGljZXMgPSBbXTtjb25zdCBpbmRpY2VzID0gW107XG5cbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDAsIGwgPSB2ZXJ0ZXhDb3VudCAqIDI7IGkgPCBsOyArK2kpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZlcnRpY2VzW2ldID0gZmxvYXRBcnJheVt2ZXJ0ZXhPZmZzZXQgKyBpXSAqIHNjYWxlO1xuICAgICAgICAgICAgICAgICAgICAgICAgdXZzW2ldID0gZmxvYXRBcnJheVt1dk9mZnNldCArIGldO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0cmlhbmdsZUNvdW50ICogMzsgKytpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbmRpY2VzW2ldID0gaW50QXJyYXlbdGhpcy5fZ2VvbWV0cnlEYXRhLm9mZnNldCArIEJpbmFyeU9mZnNldC5HZW9tZXRyeVZlcnRleEluZGljZXMgKyBpXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIG1lc2hEaXNwbGF5LmRpc3Bvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgbWVzaERpc3BsYXkuc2V0VGV4dHVyZShjdXJyZW50VGV4dHVyZURhdGEucmVuZGVyVGV4dHVyZSk7XG4gICAgICAgICAgICAgICAgICAgIG1lc2hEaXNwbGF5LnNldEJ1ZmZlckRhdGEodmVydGljZXMsICdwb3NpdGlvbicsIDIpO1xuICAgICAgICAgICAgICAgICAgICBtZXNoRGlzcGxheS5zZXRCdWZmZXJEYXRhKHV2cywgJ3V2JywgMik7XG4gICAgICAgICAgICAgICAgICAgIG1lc2hEaXNwbGF5LnNldEluZGljZXMoaW5kaWNlcyk7XG5cbiAgICAgICAgICAgICAgICAgICAgbWVzaERpc3BsYXkudmVydGV4ID0gdmVydGljZXM7XG5cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNTa2lubmVkID0gdGhpcy5fZ2VvbWV0cnlEYXRhLndlaWdodCAhPT0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNTdXJmYWNlID0gdGhpcy5fcGFyZW50Ll9ib25lRGF0YS50eXBlICE9PSBCb25lVHlwZS5Cb25lO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXNTa2lubmVkIHx8IGlzU3VyZmFjZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5faWRlbnRpdHlUcmFuc2Zvcm0oKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7IC8vIE5vcm1hbCB0ZXh0dXJlLlxuICAgICAgICAgICAgICAgICAgICBjb25zdCBzY2FsZSA9IGN1cnJlbnRUZXh0dXJlRGF0YS5wYXJlbnQuc2NhbGUgKiB0aGlzLl9hcm1hdHVyZS5fYXJtYXR1cmVEYXRhLnNjYWxlO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0ZXh0dXJlV2lkdGggPSBjdXJyZW50VGV4dHVyZURhdGEucmVnaW9uLndpZHRoICogc2NhbGU7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHRleHR1cmVIZWlnaHQgPSBjdXJyZW50VGV4dHVyZURhdGEucmVnaW9uLmhlaWdodCAqIHNjYWxlO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBub3JtYWxEaXNwbGF5ID0gdGhpcy5fcmVuZGVyRGlzcGxheTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGV4dHVyZSA9IGN1cnJlbnRUZXh0dXJlRGF0YS5yZW5kZXJUZXh0dXJlO1xuICAgICAgICAgICAgICAgICAgICBub3JtYWxEaXNwbGF5LnNldERhdGEoe1xuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dHVyZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiB0ZXh0dXJlV2lkdGgsIGhlaWdodDogdGV4dHVyZUhlaWdodFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5fdmlzaWJsZURpcnR5ID0gdHJ1ZTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9yZW5kZXJEaXNwbGF5LnZpc2libGUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBfdXBkYXRlTWVzaCgpIHtcbiAgICAgICAgY29uc3Qgc2NhbGUgPSB0aGlzLl9hcm1hdHVyZS5fYXJtYXR1cmVEYXRhLnNjYWxlO1xuICAgICAgICBjb25zdCBkZWZvcm1WZXJ0aWNlcyA9IHRoaXMuX2Rpc3BsYXlGcmFtZS5kZWZvcm1WZXJ0aWNlcztcbiAgICAgICAgY29uc3QgYm9uZXMgPSB0aGlzLl9nZW9tZXRyeUJvbmVzO1xuICAgICAgICBjb25zdCBnZW9tZXRyeURhdGEgPSB0aGlzLl9nZW9tZXRyeURhdGE7XG4gICAgICAgIGNvbnN0IHdlaWdodERhdGEgPSBnZW9tZXRyeURhdGEud2VpZ2h0O1xuXG4gICAgICAgIGNvbnN0IGhhc0RlZm9ybSA9IGRlZm9ybVZlcnRpY2VzLmxlbmd0aCA+IDAgJiYgZ2VvbWV0cnlEYXRhLmluaGVyaXREZWZvcm07XG4gICAgICAgIGNvbnN0IG1lc2hEaXNwbGF5ID0gdGhpcy5fcmVuZGVyRGlzcGxheTtcblxuICAgICAgICBpZiAod2VpZ2h0RGF0YSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IGdlb21ldHJ5RGF0YS5kYXRhO1xuICAgICAgICAgICAgY29uc3QgaW50QXJyYXkgPSBkYXRhLmludEFycmF5O1xuICAgICAgICAgICAgY29uc3QgZmxvYXRBcnJheSA9IGRhdGEuZmxvYXRBcnJheTtcbiAgICAgICAgICAgIGNvbnN0IHZlcnRleENvdW50ID0gaW50QXJyYXlbZ2VvbWV0cnlEYXRhLm9mZnNldCArIEJpbmFyeU9mZnNldC5HZW9tZXRyeVZlcnRleENvdW50XTtcbiAgICAgICAgICAgIGxldCB3ZWlnaHRGbG9hdE9mZnNldCA9IGludEFycmF5W3dlaWdodERhdGEub2Zmc2V0ICsgQmluYXJ5T2Zmc2V0LldlaWd0aEZsb2F0T2Zmc2V0XTtcblxuICAgICAgICAgICAgaWYgKHdlaWdodEZsb2F0T2Zmc2V0IDwgMCkge1xuICAgICAgICAgICAgICAgIHdlaWdodEZsb2F0T2Zmc2V0ICs9IDY1NTM2OyAvLyBGaXhlZCBvdXQgb2YgYm91bmRzIGJ1Zy5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZm9yIChcbiAgICAgICAgICAgICAgICBsZXQgaSA9IDAsIGlEID0gMCwgaUIgPSB3ZWlnaHREYXRhLm9mZnNldCArIEJpbmFyeU9mZnNldC5XZWlndGhCb25lSW5kaWNlcyArIGJvbmVzLmxlbmd0aCwgaVYgPSB3ZWlnaHRGbG9hdE9mZnNldCwgaUYgPSAwO1xuICAgICAgICAgICAgICAgIGkgPCB2ZXJ0ZXhDb3VudDtcbiAgICAgICAgICAgICAgICArK2lcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGJvbmVDb3VudCA9IGludEFycmF5W2lCKytdO1xuICAgICAgICAgICAgICAgIGxldCB4RyA9IDAuMDsgbGV0IHlHID0gMC4wO1xuXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBib25lQ291bnQ7ICsraikge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBib25lSW5kZXggPSBpbnRBcnJheVtpQisrXTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYm9uZSA9IGJvbmVzW2JvbmVJbmRleF07XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGJvbmUgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1hdHJpeCA9IGJvbmUuZ2xvYmFsVHJhbnNmb3JtTWF0cml4O1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgd2VpZ2h0ID0gZmxvYXRBcnJheVtpVisrXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB4TCA9IGZsb2F0QXJyYXlbaVYrK10gKiBzY2FsZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB5TCA9IGZsb2F0QXJyYXlbaVYrK10gKiBzY2FsZTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGhhc0RlZm9ybSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhMICs9IGRlZm9ybVZlcnRpY2VzW2lGKytdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHlMICs9IGRlZm9ybVZlcnRpY2VzW2lGKytdO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB4RyArPSAobWF0cml4LmEgKiB4TCArIG1hdHJpeC5jICogeUwgKyBtYXRyaXgudHgpICogd2VpZ2h0O1xuICAgICAgICAgICAgICAgICAgICAgICAgeUcgKz0gKG1hdHJpeC5iICogeEwgKyBtYXRyaXguZCAqIHlMICsgbWF0cml4LnR5KSAqIHdlaWdodDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIG1lc2hEaXNwbGF5LnZlcnRleFtpRCsrXSA9IHhHO1xuICAgICAgICAgICAgICAgIG1lc2hEaXNwbGF5LnZlcnRleFtpRCsrXSA9IHlHO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBtZXNoRGlzcGxheS5zZXRCdWZmZXJEYXRhKG1lc2hEaXNwbGF5LnZlcnRleCwgJ3Bvc2l0aW9uJywgMik7XG5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGlzU3VyZmFjZSA9IHRoaXMuX3BhcmVudC5fYm9uZURhdGEudHlwZSAhPT0gQm9uZVR5cGUuQm9uZTtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBnZW9tZXRyeURhdGEuZGF0YTtcbiAgICAgICAgICAgIGNvbnN0IGludEFycmF5ID0gZGF0YS5pbnRBcnJheTtcbiAgICAgICAgICAgIGNvbnN0IGZsb2F0QXJyYXkgPSBkYXRhLmZsb2F0QXJyYXk7XG4gICAgICAgICAgICBjb25zdCB2ZXJ0ZXhDb3VudCA9IGludEFycmF5W2dlb21ldHJ5RGF0YS5vZmZzZXQgKyBCaW5hcnlPZmZzZXQuR2VvbWV0cnlWZXJ0ZXhDb3VudF07XG4gICAgICAgICAgICBsZXQgdmVydGV4T2Zmc2V0ID0gaW50QXJyYXlbZ2VvbWV0cnlEYXRhLm9mZnNldCArIEJpbmFyeU9mZnNldC5HZW9tZXRyeUZsb2F0T2Zmc2V0XTtcblxuICAgICAgICAgICAgaWYgKHZlcnRleE9mZnNldCA8IDApIHtcbiAgICAgICAgICAgICAgICB2ZXJ0ZXhPZmZzZXQgKz0gNjU1MzY7IC8vIEZpeGVkIG91dCBvZiBib3VuZHMgYnVnLlxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMCwgbCA9IHZlcnRleENvdW50ICogMjsgaSA8IGw7IGkgKz0gMikge1xuICAgICAgICAgICAgICAgIGxldCB4ID0gZmxvYXRBcnJheVt2ZXJ0ZXhPZmZzZXQgKyBpXSAqIHNjYWxlO1xuICAgICAgICAgICAgICAgIGxldCB5ID0gZmxvYXRBcnJheVt2ZXJ0ZXhPZmZzZXQgKyBpICsgMV0gKiBzY2FsZTtcblxuICAgICAgICAgICAgICAgIGlmIChoYXNEZWZvcm0pIHtcbiAgICAgICAgICAgICAgICAgICAgeCArPSBkZWZvcm1WZXJ0aWNlc1tpXTtcbiAgICAgICAgICAgICAgICAgICAgeSArPSBkZWZvcm1WZXJ0aWNlc1tpICsgMV07XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKGlzU3VyZmFjZSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBtYXRyaXggPSB0aGlzLl9wYXJlbnQuX2dldEdsb2JhbFRyYW5zZm9ybU1hdHJpeCh4LCB5KTtcbiAgICAgICAgICAgICAgICAgICAgbWVzaERpc3BsYXkudmVydGV4W2ldID0gbWF0cml4LmEgKiB4ICsgbWF0cml4LmMgKiB5ICsgbWF0cml4LnR4O1xuICAgICAgICAgICAgICAgICAgICBtZXNoRGlzcGxheS52ZXJ0ZXhbaSArIDFdID0gbWF0cml4LmIgKiB4ICsgbWF0cml4LmQgKiB5ICsgbWF0cml4LnR5O1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIG1lc2hEaXNwbGF5LnZlcnRleFtpXSA9IHg7XG4gICAgICAgICAgICAgICAgICAgIG1lc2hEaXNwbGF5LnZlcnRleFtpICsgMV0gPSB5O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG1lc2hEaXNwbGF5LnNldEJ1ZmZlckRhdGEobWVzaERpc3BsYXkudmVydGV4LCAncG9zaXRpb24nLCAyKTtcbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgX2lkZW50aXR5VHJhbnNmb3JtKCkge1xuICAgICAgICB0aGlzLl9yZW5kZXJEaXNwbGF5LnNldE1hdHJpeChtYXQzLmNyZWF0ZSgpKTtcbiAgICB9XG5cbiAgICBfdXBkYXRlVHJhbnNmb3JtKCkge1xuICAgICAgICBjb25zdCBtYXRyaXggPSB0aGlzLmdsb2JhbFRyYW5zZm9ybU1hdHJpeDtcbiAgICAgICAgY29uc3QgbmV3TWF0cml4ID0gbWF0My5mcm9tVmFsdWVzKFxuICAgICAgICAgICAgbWF0cml4LmEsIG1hdHJpeC5iLCAwLFxuICAgICAgICAgICAgbWF0cml4LmMsIG1hdHJpeC5kLCAwLFxuICAgICAgICAgICAgbWF0cml4LnR4LCBtYXRyaXgudHksIDEpO1xuICAgICAgICBtYXQzLnRyYW5zbGF0ZShuZXdNYXRyaXgsIG5ld01hdHJpeCwgWy10aGlzLl9waXZvdFgsIC10aGlzLl9waXZvdFldKTtcbiAgICAgICAgdGhpcy5fcmVuZGVyRGlzcGxheS5zZXRNYXRyaXgobmV3TWF0cml4KTtcbiAgICB9XG59XG5NaW5pR0xTbG90LnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuICdbY2xhc3MgZHJhZ29uQm9uZXMuTWluaVNsb3RdJztcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE1pbmlHTFNsb3Q7XG4iLCJcbmltcG9ydCBHcm91cCBmcm9tICcuLi9Hcm91cC9Hcm91cC5qcyc7XG5pbXBvcnQgRXZlbnRMaXN0ZW5lciBmcm9tICcuLi9CYXNlJztcbmltcG9ydCBMaW5lIGZyb20gJy4uL01lc2gvTGluZSc7XG4vKipcbiAqIOmqqOaetuaYvuekulxuICogQGNsYXNzXG4gKi9cbmNsYXNzIE1pbmlHTEFybWF0dXJlRGlzcGxheSBleHRlbmRzIEdyb3VwIHtcbiAgICAgX2FybWF0dXJlPW51bGw7XG5cbiAgICBkaXNwYXRjaERCRXZlbnQodHlwZSwgZXZlbnRPYmplY3QpIHtcbiAgICAgICAgdGhpcy5saXN0ZW5lci5maXJlKHR5cGUsIGV2ZW50T2JqZWN0KTtcbiAgICB9XG4gICAgaGFzREJFdmVudExpc3RlbmVyKHR5cGUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGlzdGVuZXIuX2xpc3RlbmVyc1t0eXBlXTsgLy8gLmQudHMgYnVnXG4gICAgfVxuICAgIGFkZERCRXZlbnRMaXN0ZW5lcih0eXBlLCBmdW5jKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXIub24odHlwZSwgZnVuYyk7XG4gICAgfVxuXG4gICAgcmVtb3ZlREJFdmVudExpc3RlbmVyKHR5cGUsIGZ1bmMpIHtcbiAgICAgICAgdGhpcy5saXN0ZW5lci5vZmYodHlwZSwgZnVuYyk7XG4gICAgfVxuXG4gICAgZGJJbml0KGFybWF0dXJlKSB7XG4gICAgICAgIHRoaXMuX2FybWF0dXJlID0gYXJtYXR1cmU7XG4gICAgICAgIHRoaXMubGlzdGVuZXIgPSBuZXcgRXZlbnRMaXN0ZW5lcigpO1xuICAgICAgICBjb25zdCBtZXNoID0gbmV3IExpbmUoeyBjb2xvcjogWzAsIDAuMSwgMC4yLCAxXX0pO1xuICAgICAgICBtZXNoLmRyYXdUeXBlID0gJ0xJTkVTJztcbiAgICAgICAgdGhpcy5kcmF3ZXIgPSBtZXNoO1xuXG4gICAgICAgIHRoaXMuYWRkQ2hpbGQobWVzaCk7XG4gICAgfVxuXG4gICAgZGJDbGVhcigpIHtcbiAgICAgICAgdGhpcy5kZXN0cm95KCk7XG4gICAgfVxuXG4gICAgZGJVcGRhdGUoKSB7XG4gICAgICAgIGlmICghdGhpcy5tZXNoKSByZXR1cm47XG4gICAgICAgIGNvbnN0IGJvbmVzID0gdGhpcy5fYXJtYXR1cmUuZ2V0Qm9uZXMoKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IFtdO1xuICAgICAgICBmb3IgKGxldCBpID0gMCwgbCA9IGJvbmVzLmxlbmd0aDsgaSA8IGw7ICsraSkge1xuICAgICAgICAgICAgY29uc3QgYm9uZSA9IGJvbmVzW2ldO1xuICAgICAgICAgICAgY29uc3QgYm9uZUxlbmd0aCA9IGJvbmUuYm9uZURhdGEubGVuZ3RoO1xuICAgICAgICAgICAgY29uc3Qgc3RhcnRYID0gYm9uZS5nbG9iYWxUcmFuc2Zvcm1NYXRyaXgudHg7XG4gICAgICAgICAgICBjb25zdCBzdGFydFkgPSBib25lLmdsb2JhbFRyYW5zZm9ybU1hdHJpeC50eTtcbiAgICAgICAgICAgIGNvbnN0IGVuZFggPSBzdGFydFggKyBib25lLmdsb2JhbFRyYW5zZm9ybU1hdHJpeC5hICogYm9uZUxlbmd0aDtcbiAgICAgICAgICAgIGNvbnN0IGVuZFkgPSBzdGFydFkgKyBib25lLmdsb2JhbFRyYW5zZm9ybU1hdHJpeC5iICogYm9uZUxlbmd0aDtcbiAgICAgICAgICAgIGRhdGEucHVzaCh7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHt4OiBzdGFydFgsIHk6IHN0YXJ0WX1cbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjoge3g6IGVuZFgsIHk6IGVuZFl9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZHJhd2VyLnNldERhdGEoZGF0YSk7XG4gICAgfVxuXG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2FybWF0dXJlICE9PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLl9hcm1hdHVyZS5kaXNwb3NlKCk7XG4gICAgICAgICAgICB0aGlzLl9hcm1hdHVyZSA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5kcmF3ZXIuZGVzdHJveSgpO1xuICAgICAgICBHcm91cC5kaXNwb3NlLmNhbGwodGhpcyk7XG4gICAgfVxuXG4gICAgZGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5kaXNwb3NlKCk7XG4gICAgfVxuXG4gICAgZ2V0QXJtYXR1cmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hcm1hdHVyZTtcbiAgICB9XG5cbiAgICBnZXRBbmltYXRpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hcm1hdHVyZS5hbmltYXRpb247XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgTWluaUdMQXJtYXR1cmVEaXNwbGF5O1xuIiwiY29uc3QgeyBEcmFnb25Cb25lcywgQmFzZUZhY3RvcnkgPSBudWxsLCBCdWlsZEFybWF0dXJlUGFja2FnZSwgQmFzZU9iamVjdCwgQXJtYXR1cmUgfSA9IHdpbmRvdy5kcmFnb25Cb25lcyB8fCB7fTtcbmltcG9ydCBNaW5pR0xTbG90IGZyb20gJy4vTWluaUdMU2xvdCc7XG5pbXBvcnQgTWluaUdMVGV4dHVyZUF0bGFzRGF0YSBmcm9tICcuL01pbmlHTFRleHR1cmVBdGxhc0RhdGEnO1xuaW1wb3J0IE1pbmlHTEFybWF0dXJlRGlzcGxheSBmcm9tICcuL01pbmlHTEFybWF0dXJlRGlzcGxheSc7XG5pbXBvcnQgTWluaUdMIGZyb20gJy4uL2luZGV4JztcblxuY2xhc3MgRHJhZ29uQm9uZU9iamVjdCBleHRlbmRzIEJhc2VGYWN0b3J5IHtcbiAgICBjb25zdHJ1Y3RvcihtaW5pR0wpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgaWYgKCFCYXNlRmFjdG9yeSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCfor7flhYjliqDovb1EcmFnb25Cb25lc+WfuuehgEpT5bqT77yBJyk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLm1pbmlHTCA9IG1pbmlHTDtcbiAgICAgICAgdGhpcy5nZXREcmFnb25Cb25lc0luc3RhbmNlKCk7XG4gICAgICAgIHRoaXMuZGlzcGxheSA9IG5ldyBNaW5pR0xBcm1hdHVyZURpc3BsYXkoKTtcbiAgICB9XG5cbiAgICBhZGRGcmFtZUV2ZW50KCkge1xuICAgICAgICB0aGlzLm1pbmlHTC5vbignYmVmb3JlcmVuZGVyJywgRHJhZ29uQm9uZU9iamVjdC51cGRhdGUpO1xuICAgIH1cblxuICAgIGdldERyYWdvbkJvbmVzSW5zdGFuY2UoKSB7XG4gICAgICAgIGlmICghRHJhZ29uQm9uZU9iamVjdC5fZHJhZ29uQm9uZXNJbnN0YW5jZSkge1xuICAgICAgICAgICAgRHJhZ29uQm9uZU9iamVjdC5fZHJhZ29uQm9uZXNJbnN0YW5jZSA9IG5ldyBEcmFnb25Cb25lcyh7XG4gICAgICAgICAgICAgICAgaGFzREJFdmVudExpc3RlbmVyOiAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubWluaUdMLl9saXN0ZW5lcnNbZXZlbnRdO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgLy8g6L2s5Y+R5LqL5Lu2XG4gICAgICAgICAgICAgICAgZGlzcGF0Y2hEQkV2ZW50OiAoZXZlbnQsIGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5taW5pR0wuZmlyZShldmVudCwgZGF0YSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLmFkZEZyYW1lRXZlbnQoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9kcmFnb25Cb25lc0luc3RhbmNlID0gRHJhZ29uQm9uZU9iamVjdC5fZHJhZ29uQm9uZXNJbnN0YW5jZTtcbiAgICB9XG5cbiAgICAvLyDmnoTlu7rlr7nosaFcbiAgICBidWlsZEFybWF0dXJlRGlzcGxheShhcm1hdHVyZU5hbWUsIGRyYWdvbkJvbmVzTmFtZSA9ICcnLCBza2luTmFtZSA9ICcnLCB0ZXh0dXJlQXRsYXNOYW1lID0gJycpIHtcbiAgICAgICAgY29uc3QgYXJtYXR1cmUgPSB0aGlzLmJ1aWxkQXJtYXR1cmUoYXJtYXR1cmVOYW1lLCBkcmFnb25Cb25lc05hbWUsIHNraW5OYW1lLCB0ZXh0dXJlQXRsYXNOYW1lKTtcbiAgICAgICAgdGhpcy5fZHJhZ29uQm9uZXNJbnN0YW5jZS5jbG9jay5hZGQoYXJtYXR1cmUpO1xuICAgICAgICByZXR1cm4gYXJtYXR1cmUuZGlzcGxheTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAb3ZlcnJpZGUg5aSN546w5pa55rOVXG4gICAgICogQHBhcmFtIHsqfSBkYXRhUGFja2FnZVxuICAgICAqL1xuICAgIF9idWlsZEFybWF0dXJlKGRhdGFQYWNrYWdlKSB7XG4gICAgICAgIGNvbnN0IGFybWF0dXJlID0gQmFzZU9iamVjdC5ib3Jyb3dPYmplY3QoQXJtYXR1cmUpO1xuICAgICAgICBjb25zdCBhcm1hdHVyZURpc3BsYXkgPSBuZXcgTWluaUdMQXJtYXR1cmVEaXNwbGF5KHttaW5pR0w6IHRoaXMubWluaUdMfSk7XG4gICAgICAgIGFybWF0dXJlLmluaXQoXG4gICAgICAgICAgICBkYXRhUGFja2FnZS5hcm1hdHVyZSxcbiAgICAgICAgICAgIGFybWF0dXJlRGlzcGxheSwgYXJtYXR1cmVEaXNwbGF5LCB0aGlzLl9kcmFnb25Cb25lc1xuICAgICAgICApO1xuXG4gICAgICAgIHJldHVybiBhcm1hdHVyZTtcbiAgICB9XG5cbiAgICBfYnVpbGRTbG90KF9kYXRhUGFja2FnZSwgc2xvdERhdGEsIGFybWF0dXJlKSB7XG4gICAgICAgIGNvbnN0IHNsb3QgPSBCYXNlT2JqZWN0LmJvcnJvd09iamVjdChNaW5pR0xTbG90KTtcbiAgICAgICAgY29uc3Qgc3ByaXRlID0gbmV3IE1pbmlHTC5JbWFnZSgpO1xuICAgICAgICBzbG90LmluaXQoXG4gICAgICAgICAgICBzbG90RGF0YSwgYXJtYXR1cmUsIHNwcml0ZSwgc3ByaXRlXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiBzbG90O1xuICAgIH1cblxuICAgIF9idWlsZFRleHR1cmVBdGxhc0RhdGEodGV4dHVyZUF0bGFzRGF0YSwgdGV4dHVyZUF0bGFzKSB7XG4gICAgICAgIGlmICh0ZXh0dXJlQXRsYXNEYXRhKSB7XG4gICAgICAgICAgICB0ZXh0dXJlQXRsYXNEYXRhLnNldFJlbmRlclRleHR1cmUodGV4dHVyZUF0bGFzLCB0aGlzLm1pbmlHTCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0ZXh0dXJlQXRsYXNEYXRhID0gQmFzZU9iamVjdC5ib3Jyb3dPYmplY3QoTWluaUdMVGV4dHVyZUF0bGFzRGF0YSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGV4dHVyZUF0bGFzRGF0YTtcbiAgICB9XG5cbiAgICBkZXN0cm95KCkge1xuICAgIH1cbn1cbkRyYWdvbkJvbmVPYmplY3QudXBkYXRlID0gKGRlbHRhKSA9PiB7XG4gICAgRHJhZ29uQm9uZU9iamVjdC5fZHJhZ29uQm9uZXNJbnN0YW5jZS5hZHZhbmNlVGltZShkZWx0YSAqIDAuMDAxKTtcbn07XG5EcmFnb25Cb25lT2JqZWN0Lk1pbmlHTEFybWF0dXJlRGlzcGxheSA9IE1pbmlHTEFybWF0dXJlRGlzcGxheTtcbmV4cG9ydCBkZWZhdWx0IERyYWdvbkJvbmVPYmplY3Q7XG4iLCJpbXBvcnQgQmFzZSBmcm9tICcuL0Jhc2UnO1xuaW1wb3J0IFZpZXdwb3J0IGZyb20gJy4vVmlldy9WaWV3cG9ydCc7XG5pbXBvcnQgQ2FudmFzIGZyb20gJy4vVmlldy9DYW52YXMuanMnO1xuaW1wb3J0IENvbnRyb2xsZXIgZnJvbSAnLi9Db250cm9sL0NvbnRyb2xsZXInO1xuaW1wb3J0IEZseUxpbmUgZnJvbSAnLi9NZXNoL0ZseUxpbmUnO1xuaW1wb3J0IE1lc2ggZnJvbSAnLi9NZXNoL01lc2gnO1xuaW1wb3J0IEltYWdlIGZyb20gJy4vTWVzaC9JbWFnZSc7XG5pbXBvcnQgUG9pbnQgZnJvbSAnLi9NZXNoL1BvaW50JztcbmltcG9ydCBNZXNoQmFzZSBmcm9tICcuL01lc2gvQmFzZSc7XG5pbXBvcnQgUm91bmRMaW5lIGZyb20gJy4vTWVzaC9Sb3VuZExpbmUvaW5kZXgnO1xuaW1wb3J0IFdpZHRoTGluZSBmcm9tICcuL01lc2gvV2lkdGhMaW5lJztcbmltcG9ydCBHcm91cCBmcm9tICcuL0dyb3VwL0dyb3VwLmpzJztcbmltcG9ydCBEcmFnb25Cb25lcyBmcm9tICcuL2RyYWdvbkJvbmVzL2luZGV4LmpzJztcbmNsYXNzIE1pbmlHTCBleHRlbmRzIEJhc2Uge1xuXHRhdXRvVXBkYXRlID0gZmFsc2U7XG5cblx0Y29uc3RydWN0b3IoY29uZmlnKSB7XG5cdFx0c3VwZXIoY29uZmlnKTtcblx0XHR0aGlzLmNvbnRhaW5lciA9IGNvbmZpZy5jb250YWluZXI7XG5cdCBcdHRoaXMuY29uZmlnID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICAgICAgICBjb250ZXh0T3B0aW9uOiB7XG4gICAgICAgICAgICAgICAgYWxwaGE6IHRydWUsXG4gICAgICAgICAgICAgICAgYW50aWFsaWFzOiB0cnVlLFxuICAgICAgICAgICAgICAgIGFudGlhbGlhc1NhbXBsZXM6IDE2LFxuICAgICAgICAgICAgICAgIHN0ZW5jaWw6IHRydWUsXG4gICAgICAgICAgICAgICAgcG93ZXJQcmVmZXJlbmNlOiAnaGlnaC1wZXJmb3JtYW5jZScsXG4gICAgICAgICAgICAgICAgcHJlc2VydmVEcmF3aW5nQnVmZmVyOiB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICB9LCBjb25maWcpO1xuXHR9XG5cblx0aW5pdCgpIHtcbiAgICAgICAgY29uc3Qge2NvbnRleHRPcHRpb24gPSB7fX0gPSB0aGlzLmNvbmZpZztcblx0XHR0aGlzLmNhbnZhc0RPTSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xuXHRcdHRoaXMuY29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMuY2FudmFzRE9NKTtcblxuXHRcdHRoaXMuZ2wgPSB0aGlzLmNhbnZhc0RPTS5nZXRDb250ZXh0KCd3ZWJnbDInLCBjb250ZXh0T3B0aW9uKTtcblx0XHRpZiAodGhpcy5nbCA9PSBudWxsKSB7XG5cdFx0XHRyZXR1cm4gY29uc29sZS5lcnJvcign5L2g55qE5rWP6KeI5Zmo5LiN5pSv5oyBd2ViZ2wyLOivt+abtOaWsOS9v+eUqGNocm9tZea1j+iniOWZqCcpO1xuXHRcdH1cblxuXHRcdHRoaXMudmlld3BvcnQgPSBuZXcgVmlld3BvcnQoeyBtaW5pR0w6IHRoaXMsIC4uLnRoaXMuY29uZmlnIH0pO1xuXHRcdHRoaXMudmlld3BvcnQucmVzaXplKCk7XG5cdFx0dGhpcy5jYW52YXMgPSBuZXcgQ2FudmFzKHsgbWluaUdMOiB0aGlzLCAuLi50aGlzLmNvbmZpZyB9KTtcblx0XHR0aGlzLmNvbnRyb2xsZXIgPSBuZXcgQ29udHJvbGxlcih7bWluaUdMOiB0aGlzLCAuLi50aGlzLmNvbmZpZ30pO1xuXG5cdFx0dGhpcy5jYW52YXMudXBkYXRlKCk7XG5cdH1cbn1cbk1pbmlHTC5GbHlMaW5lID0gRmx5TGluZTtcbk1pbmlHTC5JbWFnZSA9IEltYWdlO1xuTWluaUdMLk1lc2ggPSBNZXNoO1xuTWluaUdMLlBvaW50ID0gUG9pbnQ7XG5NaW5pR0wuTGluZSA9IHJlcXVpcmUoJy4vTWVzaC9MaW5lJykuZGVmYXVsdDs7XG5NaW5pR0wuTWVzaEJhc2UgPSBNZXNoQmFzZTtcbk1pbmlHTC5XaWR0aExpbmUgPSBXaWR0aExpbmU7XG5NaW5pR0wuUm91bmRMaW5lID0gUm91bmRMaW5lO1xuLy8g5pqC5pe25YGa5b2i54q25rKh5pyJ5oSP5LmJ77yM5pys5p2l5piv6KaB5LiT5b+D5YGaMmTnibnmlYjlupPnmoQs5Y+m5aSW5Y675YGa5b2i54q277yM5YGa6YeN5LqG5ZKMY2FudmFz5oCn6IO95rKh5beu5LqG77yM6L+Y5piv5LiT5b+D5Yip55SoZ3B15aSa6L+b56iL6L+Q566XXG4vLyBNaW5pR0wuU2hhcGUgPSByZXF1aXJlKCcuL1NoYXBlcycpLmRlZmF1bHQ7XG5NaW5pR0wuSW5zdGFuY2VNZXNoID0gcmVxdWlyZSgnLi9NZXNoL0luc3RhbmNlTWVzaCcpLmRlZmF1bHQ7XG5NaW5pR0wuR3JvdXAgPSBHcm91cDtcbk1pbmlHTC5VdGlsID0gcmVxdWlyZSgnLi9VdGlscycpLmRlZmF1bHQ7XG5NaW5pR0wuVGV4dHVyZSA9IHJlcXVpcmUoJy4vVGV4dHVyZS9UZXh0dXJlJykuZGVmYXVsdDtcbk1pbmlHTC5EcmFnb25Cb25lcyA9IERyYWdvbkJvbmVzO1xuZXhwb3J0IGRlZmF1bHQgTWluaUdMO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///324\n')},628:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "JG": () => (/* binding */ copy),\n  "Ue": () => (/* binding */ create),\n  "al": () => (/* binding */ fromValues),\n  "dC": () => (/* binding */ mul),\n  "U1": () => (/* binding */ rotate),\n  "bA": () => (/* binding */ scale),\n  "Iu": () => (/* binding */ translate)\n});\n\n// UNUSED EXPORTS: add, adjoint, clone, determinant, equals, exactEquals, frob, fromMat2d, fromMat4, fromQuat, fromRotation, fromScaling, fromTranslation, identity, invert, multiply, multiplyScalar, multiplyScalarAndAdd, normalFromMat4, projection, set, str, sub, subtract, transpose\n\n;// CONCATENATED MODULE: ./node_modules/gl-matrix/esm/common.js\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nvar ARRAY_TYPE = typeof Float32Array !== \'undefined\' ? Float32Array : Array;\nvar RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nfunction setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};\n;// CONCATENATED MODULE: ./node_modules/gl-matrix/esm/mat3.js\n\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nfunction create() {\n  var out = new ARRAY_TYPE(9);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3\'s\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return "mat3(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ", " + a[4] + ", " + a[5] + ", " + a[6] + ", " + a[7] + ", " + a[8] + ")";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3\'s\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix\'s elements by\r\n * @returns {mat3} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3\'s after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b\'s elements by before adding\r\n * @returns {mat3} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction mat3_equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nvar sub = (/* unused pure expression or super */ null && (subtract));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///628\n')}},__webpack_module_cache__={};function __webpack_require__(Q){var F=__webpack_module_cache__[Q];if(void 0!==F)return F.exports;var B=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](B,B.exports,__webpack_require__),B.exports}__webpack_require__.d=(Q,F)=>{for(var B in F)__webpack_require__.o(F,B)&&!__webpack_require__.o(Q,B)&&Object.defineProperty(Q,B,{enumerable:!0,get:F[B]})},__webpack_require__.o=(Q,F)=>Object.prototype.hasOwnProperty.call(Q,F),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(324);return __webpack_exports__=__webpack_exports__.default,__webpack_exports__})()}));