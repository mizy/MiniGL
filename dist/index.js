!function(Q,F){"object"==typeof exports&&"object"==typeof module?module.exports=F():"function"==typeof define&&define.amd?define([],F):"object"==typeof exports?exports.MiniGL=F():Q.MiniGL=F()}(window,(function(){return function(Q){var F={};function B(t){if(F[t])return F[t].exports;var n=F[t]={i:t,l:!1,exports:{}};return Q[t].call(n.exports,n,n.exports,B),n.l=!0,n.exports}return B.m=Q,B.c=F,B.d=function(Q,F,t){B.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:t})},B.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},B.t=function(Q,F){if(1&F&&(Q=B(Q)),8&F)return Q;if(4&F&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var t=Object.create(null);if(B.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:Q}),2&F&&"string"!=typeof Q)for(var n in Q)B.d(t,n,function(F){return Q[F]}.bind(null,n));return t},B.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return B.d(F,"a",F),F},B.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},B.p="",B(B.s=23)}([function(module,exports){eval('function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError("Cannot call a class as a function");\n  }\n}\n\nmodule.exports = _classCallCheck;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjay5qcz85NzBiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2NsYXNzQ2FsbENoZWNrOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n')},function(module,exports){eval('function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if ("value" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcy5qcz81YmMzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsaUJBQWlCLGtCQUFrQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gIH1cbn1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICByZXR1cm4gQ29uc3RydWN0b3I7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2NyZWF0ZUNsYXNzOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n')},function(module,exports){eval("function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZi5qcz8zNmM2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgIHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7XG4gIH07XG4gIHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2dldFByb3RvdHlwZU9mOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){eval('var setPrototypeOf = __webpack_require__(17);\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== "function" && superClass !== null) {\n    throw new TypeError("Super expression must either be null or a function");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0cy5qcz9lZDZkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHFCQUFxQixtQkFBTyxDQUFDLEVBQWtCOztBQUUvQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQSIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHNldFByb3RvdHlwZU9mID0gcmVxdWlyZShcIi4vc2V0UHJvdG90eXBlT2ZcIik7XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO1xuICB9XG5cbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgY29uc3RydWN0b3I6IHtcbiAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbiAgaWYgKHN1cGVyQ2xhc3MpIHNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfaW5oZXJpdHM7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n')},function(module,exports,__webpack_require__){eval('var _typeof = __webpack_require__(7);\n\nvar assertThisInitialized = __webpack_require__(18);\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === "object" || typeof call === "function")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuLmpzPzZiNTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxtQkFBTyxDQUFDLENBQStCOztBQUVyRCw0QkFBNEIsbUJBQU8sQ0FBQyxFQUF5Qjs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF90eXBlb2YgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy90eXBlb2ZcIik7XG5cbnZhciBhc3NlcnRUaGlzSW5pdGlhbGl6ZWQgPSByZXF1aXJlKFwiLi9hc3NlcnRUaGlzSW5pdGlhbGl6ZWRcIik7XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHtcbiAgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHtcbiAgICByZXR1cm4gY2FsbDtcbiAgfVxuXG4gIHJldHVybiBhc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm47Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n')},function(module,exports){eval("function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9kZWZpbmVQcm9wZXJ0eS5qcz85NTIzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZpbmVQcm9wZXJ0eTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5\n")},function(module,exports,__webpack_require__){eval("var arrayWithoutHoles = __webpack_require__(19);\n\nvar iterableToArray = __webpack_require__(20);\n\nvar unsupportedIterableToArray = __webpack_require__(21);\n\nvar nonIterableSpread = __webpack_require__(22);\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90b0NvbnN1bWFibGVBcnJheS5qcz80NDhhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdCQUF3QixtQkFBTyxDQUFDLEVBQXFCOztBQUVyRCxzQkFBc0IsbUJBQU8sQ0FBQyxFQUFtQjs7QUFFakQsaUNBQWlDLG1CQUFPLENBQUMsRUFBOEI7O0FBRXZFLHdCQUF3QixtQkFBTyxDQUFDLEVBQXFCOztBQUVyRDtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiNi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcnJheVdpdGhvdXRIb2xlcyA9IHJlcXVpcmUoXCIuL2FycmF5V2l0aG91dEhvbGVzXCIpO1xuXG52YXIgaXRlcmFibGVUb0FycmF5ID0gcmVxdWlyZShcIi4vaXRlcmFibGVUb0FycmF5XCIpO1xuXG52YXIgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkgPSByZXF1aXJlKFwiLi91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheVwiKTtcblxudmFyIG5vbkl0ZXJhYmxlU3ByZWFkID0gcmVxdWlyZShcIi4vbm9uSXRlcmFibGVTcHJlYWRcIik7XG5cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgcmV0dXJuIGFycmF5V2l0aG91dEhvbGVzKGFycikgfHwgaXRlcmFibGVUb0FycmF5KGFycikgfHwgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBub25JdGVyYWJsZVNwcmVhZCgpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF90b0NvbnN1bWFibGVBcnJheTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n")},function(module,exports){eval('function _typeof(obj) {\n  "@babel/helpers - typeof";\n\n  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90eXBlb2YuanM/NzAzNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiNy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gIFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtcblxuICBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICAgICAgcmV0dXJuIHR5cGVvZiBvYmo7XG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICAgICAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBfdHlwZW9mKG9iaik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3R5cGVvZjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7\n')},function(module,exports){eval("function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hcnJheUxpa2VUb0FycmF5LmpzPzVhNDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQSx3Q0FBd0MsU0FBUztBQUNqRDtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7XG4gIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xuXG4gIGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykge1xuICAgIGFycjJbaV0gPSBhcnJbaV07XG4gIH1cblxuICByZXR1cm4gYXJyMjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfYXJyYXlMaWtlVG9BcnJheTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n")},,,,,,,,,function(module,exports){eval("function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zZXRQcm90b3R5cGVPZi5qcz80YTRiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIxNy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgby5fX3Byb3RvX18gPSBwO1xuICAgIHJldHVybiBvO1xuICB9O1xuXG4gIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3NldFByb3RvdHlwZU9mOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///17\n")},function(module,exports){eval("function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQuanM/M2M5NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6IjE4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gIGlmIChzZWxmID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gIH1cblxuICByZXR1cm4gc2VsZjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfYXNzZXJ0VGhpc0luaXRpYWxpemVkOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///18\n")},function(module,exports,__webpack_require__){eval("var arrayLikeToArray = __webpack_require__(8);\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hcnJheVdpdGhvdXRIb2xlcy5qcz8yMjM2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVCQUF1QixtQkFBTyxDQUFDLENBQW9COztBQUVuRDtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXJyYXlMaWtlVG9BcnJheSA9IHJlcXVpcmUoXCIuL2FycmF5TGlrZVRvQXJyYXlcIik7XG5cbmZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkoYXJyKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfYXJyYXlXaXRob3V0SG9sZXM7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///19\n")},function(module,exports){eval('function _iterableToArray(iter) {\n  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pdGVyYWJsZVRvQXJyYXkuanM/MTFiMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHtcbiAgaWYgKHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChpdGVyKSkgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2l0ZXJhYmxlVG9BcnJheTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///20\n')},function(module,exports,__webpack_require__){eval('var arrayLikeToArray = __webpack_require__(8);\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === "string") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === "Object" && o.constructor) n = o.constructor.name;\n  if (n === "Map" || n === "Set") return Array.from(o);\n  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qcz82NjEzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVCQUF1QixtQkFBTyxDQUFDLENBQW9COztBQUVuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFycmF5TGlrZVRvQXJyYXkgPSByZXF1aXJlKFwiLi9hcnJheUxpa2VUb0FycmF5XCIpO1xuXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7XG4gIGlmICghbykgcmV0dXJuO1xuICBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG4gIHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTtcbiAgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTtcbiAgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7XG4gIGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///21\n')},function(module,exports){eval('function _nonIterableSpread() {\n  throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\n\nmodule.exports = _nonIterableSpread;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaW5pR0wvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9ub25JdGVyYWJsZVNwcmVhZC5qcz8wNjc2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIyMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX25vbkl0ZXJhYmxlU3ByZWFkOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///22\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\nvar mat3_namespaceObject = {};\n__webpack_require__.r(mat3_namespaceObject);\n__webpack_require__.d(mat3_namespaceObject, "create", function() { return create; });\n__webpack_require__.d(mat3_namespaceObject, "fromMat4", function() { return fromMat4; });\n__webpack_require__.d(mat3_namespaceObject, "clone", function() { return clone; });\n__webpack_require__.d(mat3_namespaceObject, "copy", function() { return copy; });\n__webpack_require__.d(mat3_namespaceObject, "fromValues", function() { return fromValues; });\n__webpack_require__.d(mat3_namespaceObject, "set", function() { return set; });\n__webpack_require__.d(mat3_namespaceObject, "identity", function() { return identity; });\n__webpack_require__.d(mat3_namespaceObject, "transpose", function() { return transpose; });\n__webpack_require__.d(mat3_namespaceObject, "invert", function() { return invert; });\n__webpack_require__.d(mat3_namespaceObject, "adjoint", function() { return adjoint; });\n__webpack_require__.d(mat3_namespaceObject, "determinant", function() { return determinant; });\n__webpack_require__.d(mat3_namespaceObject, "multiply", function() { return multiply; });\n__webpack_require__.d(mat3_namespaceObject, "translate", function() { return translate; });\n__webpack_require__.d(mat3_namespaceObject, "rotate", function() { return rotate; });\n__webpack_require__.d(mat3_namespaceObject, "scale", function() { return scale; });\n__webpack_require__.d(mat3_namespaceObject, "fromTranslation", function() { return fromTranslation; });\n__webpack_require__.d(mat3_namespaceObject, "fromRotation", function() { return fromRotation; });\n__webpack_require__.d(mat3_namespaceObject, "fromScaling", function() { return fromScaling; });\n__webpack_require__.d(mat3_namespaceObject, "fromMat2d", function() { return fromMat2d; });\n__webpack_require__.d(mat3_namespaceObject, "fromQuat", function() { return fromQuat; });\n__webpack_require__.d(mat3_namespaceObject, "normalFromMat4", function() { return normalFromMat4; });\n__webpack_require__.d(mat3_namespaceObject, "projection", function() { return projection; });\n__webpack_require__.d(mat3_namespaceObject, "str", function() { return str; });\n__webpack_require__.d(mat3_namespaceObject, "frob", function() { return frob; });\n__webpack_require__.d(mat3_namespaceObject, "add", function() { return add; });\n__webpack_require__.d(mat3_namespaceObject, "subtract", function() { return subtract; });\n__webpack_require__.d(mat3_namespaceObject, "multiplyScalar", function() { return multiplyScalar; });\n__webpack_require__.d(mat3_namespaceObject, "multiplyScalarAndAdd", function() { return multiplyScalarAndAdd; });\n__webpack_require__.d(mat3_namespaceObject, "exactEquals", function() { return exactEquals; });\n__webpack_require__.d(mat3_namespaceObject, "equals", function() { return mat3_equals; });\n__webpack_require__.d(mat3_namespaceObject, "mul", function() { return mul; });\n__webpack_require__.d(mat3_namespaceObject, "sub", function() { return sub; });\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/defineProperty.js\nvar defineProperty = __webpack_require__(5);\nvar defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/classCallCheck.js\nvar classCallCheck = __webpack_require__(0);\nvar classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/createClass.js\nvar createClass = __webpack_require__(1);\nvar createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/inherits.js\nvar inherits = __webpack_require__(3);\nvar inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\nvar possibleConstructorReturn = __webpack_require__(4);\nvar possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/getPrototypeOf.js\nvar getPrototypeOf = __webpack_require__(2);\nvar getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);\n\n// CONCATENATED MODULE: ./src/Base.js\n\n\n\n/**\n * 图层基础类\n * @class \n */\nvar Base_Base = /*#__PURE__*/function () {\n  function Base() {\n    classCallCheck_default()(this, Base);\n\n    this.layers = [];\n  }\n\n  createClass_default()(Base, [{\n    key: "on",\n\n    /**\n     * 事件监听,用法同jQuery.on\n     */\n    value: function on(type, listener) {\n      if (this._listeners === undefined) this._listeners = {};\n      var listeners = this._listeners;\n\n      if (listeners[type] === undefined) {\n        listeners[type] = [];\n      }\n\n      if (listeners[type].indexOf(listener) === -1) {\n        listeners[type].push(listener);\n      }\n    }\n    /**\n     * 触发事件 \n     * @example \n     * this.fire("change",event)\n     */\n\n  }, {\n    key: "fire",\n    value: function fire(type, event) {\n      if (this._listeners === undefined) return;\n      var listeners = this._listeners;\n      var listenerArray = listeners[type];\n\n      if (listenerArray !== undefined) {\n        var array = listenerArray.slice(0);\n\n        for (var i = 0, l = array.length; i < l; i++) {\n          array[i].call(this, event);\n        }\n      }\n    }\n    /**\n     * 关闭事件\n     * @example\n     * this.off(\'change\',onChange)\n     */\n\n  }, {\n    key: "off",\n    value: function off(type, listener) {\n      if (this._listeners === undefined) return;\n      var listeners = this._listeners;\n      var listenerArray = listeners[type];\n\n      if (listenerArray !== undefined) {\n        if (listener) {\n          var index = listenerArray.indexOf(listener);\n\n          if (index !== -1) {\n            listenerArray.splice(index, 1);\n          }\n        } else {\n          this._listeners[type] = [];\n        }\n      }\n    }\n  }, {\n    key: "initConfig",\n    value: function initConfig(config) {}\n    /**\n     * 地图添加图层时调用,由子类实现\n     * @param {Map} map - PigeonGL.Map实例\n     */\n\n  }, {\n    key: "onAdd",\n    value: function onAdd(map) {\n      this.pigeonMap = map;\n    }\n    /**\n     * 地图每帧调用该函数\n     */\n\n  }, {\n    key: "update",\n    value: function update() {}\n    /**\n     * 移除图层时调用\n     */\n\n  }, {\n    key: "onRemove",\n    value: function onRemove() {\n      if (this._listeners) {\n        this._listeners = [];\n      }\n    }\n    /**\n     * 添加图层\n     * @param {Layer} layer - 图层\n     */\n\n  }, {\n    key: "addLayer",\n    value: function addLayer(layer) {\n      layer.id = ++this._layerid;\n      this.layers.push(layer);\n      layer.onAdd(this); //初始化layer\n    }\n    /**\n     * 删除图层\n     * @param {Layer} layer - 图层\n     */\n\n  }, {\n    key: "removeLayer",\n    value: function removeLayer(layer) {\n      for (var x in this.layers) {\n        if (this.layers[x].id == layer.id) {\n          this.layers[x].onRemove();\n          this.layers.splice(x, 1);\n          return;\n        }\n      }\n    }\n    /**\n     * 获取图层通过id\n     */\n\n  }, {\n    key: "getLayerById",\n    value: function getLayerById(id) {\n      for (var i = 0; i < this.layers.length; i++) {\n        if (this.layer.id === id) return layer;\n      }\n    }\n  }]);\n\n  return Base;\n}();\n\n/* harmony default export */ var src_Base = (Base_Base);\n// CONCATENATED MODULE: ./node_modules/gl-matrix/esm/common.js\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nvar ARRAY_TYPE = typeof Float32Array !== \'undefined\' ? Float32Array : Array;\nvar RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nfunction setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};\n// CONCATENATED MODULE: ./node_modules/gl-matrix/esm/mat3.js\n\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nfunction create() {\n  var out = new ARRAY_TYPE(9);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nfunction clone(a) {\n  var out = new ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3\'s\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return "mat3(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ", " + a[4] + ", " + a[5] + ", " + a[6] + ", " + a[7] + ", " + a[8] + ")";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3\'s\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix\'s elements by\r\n * @returns {mat3} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3\'s after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b\'s elements by before adding\r\n * @returns {mat3} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction mat3_equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n// CONCATENATED MODULE: ./node_modules/gl-matrix/esm/index.js\n\n\n\n\n\n\n\n\n\n\n\n// CONCATENATED MODULE: ./src/View/Viewport.js\n\n\n\n/**\n * @class\n */\n\nvar Viewport_ViewPort = /*#__PURE__*/function () {\n  function ViewPort(config) {\n    classCallCheck_default()(this, ViewPort);\n\n    this.miniGL = config.miniGL;\n    this.gl = this.miniGL.gl;\n    this.config = Object.assign({}, config.config);\n    this.transform = mat3_namespaceObject.create();\n  }\n  /**\n   * @param  {} x=0\n   * @param  {} y=0\n   */\n\n\n  createClass_default()(ViewPort, [{\n    key: "convertScreenToClip",\n    value: function convertScreenToClip() {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return {\n        x: x * 2 / this.width - 1,\n        y: 1 - y * 2 / this.height\n      };\n    }\n    /**\n     * @param  {} x=0\n     * @param  {} y=0\n     */\n\n  }, {\n    key: "convertClipToScreen",\n    value: function convertClipToScreen() {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return {\n        x: (x + 1) * this.width / 2,\n        y: (1 - y) * this.height / 2\n      };\n    }\n    /**\n     * 重新布局\n     */\n\n  }, {\n    key: "resize",\n    value: function resize() {\n      var width = this.config.width || this.miniGL.container.clientWidth;\n      var height = this.config.height || this.miniGL.container.clientHeight;\n      this.miniGL.canvas.width = width;\n      this.miniGL.canvas.height = height;\n      this.gl.viewport(0, 0, width, height);\n      this.width = width;\n      this.height = height;\n      this.ratio = this.width / this.height; // 计算好坐标转换矩阵\n\n      this.transform = mat3_namespaceObject.create();\n      mat3_namespaceObject.scale(this.transform, this.transform, [2 / this.width, -2 / this.height]); // 这个矩阵工具真鸡儿难用，最讨厌内部偷偷帮我做转换的，我只想要个纯工具库！\n      // gl-matrix会以初次进行换算的坐标系为基准空间，来进行换算，一般人思考都会以转换后的坐标系为基准，这里就得转换思维\n\n      mat3_namespaceObject.translate(this.transform, this.transform, [-this.width / 2, -this.height / 2]);\n      this.invertTransform = mat3_namespaceObject.create();\n      mat3_namespaceObject.invert(this.invertTransform, this.transform);\n    }\n  }]);\n\n  return ViewPort;\n}();\n\n/* harmony default export */ var Viewport = (Viewport_ViewPort);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/toConsumableArray.js\nvar toConsumableArray = __webpack_require__(6);\nvar toConsumableArray_default = /*#__PURE__*/__webpack_require__.n(toConsumableArray);\n\n// CONCATENATED MODULE: ./src/Shaders/mesh.js\n/* harmony default export */ var mesh = ({\n  vertexShader: "\\n\\tprecision lowp float;\\n\\tattribute vec2 position;\\n\\tattribute vec4 color;\\n\\tvarying vec4 vColor;\\n\\tuniform mat3 transform;\\n\\tuniform float z;\\n\\tvoid main()\\n\\t{\\n\\t\\tvColor = color;\\n\\t\\tvec3 mPosition = transform * vec3(position,1.);\\n\\t\\tgl_Position = vec4(mPosition.xy,z,1.0);\\n\\t\\t\\n\\t}\\n\\t",\n  fragmentShader: "\\n\\tprecision lowp float;\\n\\tvarying vec4 vColor;\\n\\tvoid main()\\n\\t{\\n\\t\\tgl_FragColor = vColor;\\n\\t}\\n\\t"\n});\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/typeof.js\nvar helpers_typeof = __webpack_require__(7);\nvar typeof_default = /*#__PURE__*/__webpack_require__.n(helpers_typeof);\n\n// CONCATENATED MODULE: ./src/Meshs/Base.js\n\n\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Base 基类方便继承以实现其他类型的情况\n */\nvar Meshs_Base_Base = /*#__PURE__*/function () {\n  function Base() {\n    classCallCheck_default()(this, Base);\n\n    this.vSize = 2;\n    this.offset = 0;\n    this.depthMask = true;\n    this.depthTest = true;\n    this.transparent = true;\n    this.uniformsNeedUpdate = true;\n    this.uniformLocations = {};\n    this.needRender = true;\n  }\n\n  createClass_default()(Base, [{\n    key: "init",\n    //是否需要重绘\n    value: function init() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.config = Object.assign({\n        type: "ok"\n      }, config);\n      this.buffers = [];\n      this.buffersSize = []; // 初始化数据数组\n\n      this.indices = [];\n      this.vertex = [];\n\n      if (config.shaders) {\n        this.shaders = _objectSpread(_objectSpread({}, this.shaders), config.shaders);\n      }\n\n      if (config.miniGL) {\n        config.miniGL.canvas.add(this);\n      }\n    }\n  }, {\n    key: "setData",\n    value: function setData(data) {\n      this.vertex = data;\n      this.setBufferData(data, "position", 2);\n    }\n  }, {\n    key: "setBufferData",\n    value: function setBufferData(data, key, size) {\n      this.gl.deleteBuffer(this.buffers[key]);\n      this.setBufferData(data, key, size);\n    }\n  }, {\n    key: "setUniformData",\n    value: function setUniformData() {\n      if (!this.uniformData || !this.uniformsNeedUpdate) return;\n\n      for (var key in this.uniformData) {\n        var item = this.uniformData[key];\n        this.setUniform(key, item);\n      } // this.uniformsNeedUpdate = false;\n\n    }\n  }, {\n    key: "setUniform",\n    value: function setUniform(key, item) {\n      var gl = this.gl;\n      var value = item.value,\n          type = item.type,\n          texture = item.texture; // 矩阵\n\n      if (type.indexOf("uniformMatrix") > -1) {\n        gl[type](this.getUniformLocation(key), false, value); // 图形数据\n      } else if (texture) {\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, item.texture);\n        gl[type](this.getUniformLocation(key), value); // 行列数据\n      } else if (type.slice(-1) === "v" || typeof_default()(value) !== \'object\') {\n        gl[type](this.getUniformLocation(key), value);\n      } else {\n        gl[type](this.getUniformLocation(key), value[0] || value, value[1], value[2], value[3]);\n      }\n\n      this.uniformData[key] = item;\n    }\n    /**\n     * 新的缓存数据\n     * @param  {} data\n     * @param  {} name\n     */\n\n  }, {\n    key: "setBufferData",\n    value: function setBufferData(data, name, size) {\n      // 没有的话初始化复用一个\n      if (!this.buffers[name]) {\n        this.buffers[name] = this.gl.createBuffer();\n      }\n\n      this.buffersSize[name] = size; // 顶点buffer\n\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.buffers[name]);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(data), this.gl.STATIC_DRAW);\n    }\n  }, {\n    key: "setIndices",\n    value: function setIndices(indices) {\n      this.indices = indices; // 顶点buffer\n\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indicesPointer);\n      this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), this.gl.STATIC_DRAW);\n    } // 生成shader程序\n\n  }, {\n    key: "initShader",\n    value: function initShader() {\n      var gl = this.gl; // 加载shader\n\n      var vertexShaderObject = this.loadShader(this.shaders.vertex, this.gl.VERTEX_SHADER);\n      var fragmentShaderObject = this.loadShader(this.shaders.fragment, this.gl.FRAGMENT_SHADER); // 创建程序\n\n      var shaderPorgram = this.gl.createProgram();\n      this.gl.attachShader(shaderPorgram, vertexShaderObject);\n      this.gl.attachShader(shaderPorgram, fragmentShaderObject);\n      this.gl.linkProgram(shaderPorgram);\n\n      if (!this.gl.getProgramParameter(shaderPorgram, this.gl.LINK_STATUS)) {\n        console.error(\'shaderProgram Error: \', gl.getError(), gl.getProgramParameter(shaderPorgram, 35715), gl.getProgramInfoLog(shaderPorgram).trim());\n        console.error(\'fragmentLog:\', gl.getShaderInfoLog(vertexShaderObject).trim(), this.addLineNumbers(gl.getShaderSource(vertexShaderObject)));\n        console.error(\'vertexLog:\', gl.getShaderInfoLog(fragmentShaderObject).trim(), this.addLineNumbers(gl.getShaderSource(fragmentShaderObject)));\n        return;\n      }\n\n      this.shaderPorgram = shaderPorgram;\n    }\n  }, {\n    key: "addLineNumbers",\n    value: function addLineNumbers(string) {\n      var lines = string.split(\'\\n\');\n\n      for (var i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + \': \' + lines[i];\n      }\n\n      return lines.join(\'\\n\');\n    } // 获取顶点变量地址\n\n  }, {\n    key: "getAttribLocation",\n    value: function getAttribLocation(name) {\n      return this.gl.getAttribLocation(this.shaderPorgram, name);\n    } // 获取uniform变量地址\n\n  }, {\n    key: "getUniformLocation",\n    value: function getUniformLocation(name) {\n      // 缓存会每秒快20ms左右，节省一帧的时机\n      if (this.uniformLocations[name]) return this.uniformLocations[name];\n      this.uniformLocations[name] = this.gl.getUniformLocation(this.shaderPorgram, name);\n      return this.uniformLocations[name];\n    } // 加载shader\n\n  }, {\n    key: "loadShader",\n    value: function loadShader(shaderStr, type) {\n      var shader = this.gl.createShader(type);\n      this.gl.shaderSource(shader, shaderStr);\n      this.gl.compileShader(shader);\n      return shader;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      // 2D 只需要两个坐标轴标识位置\n      var vLen = Math.ceil(this.vertex.length / this.vSize); //几个点\n\n      var offset = 0; // 从数据第几位开始偏移\n\n      var normalize = false;\n\n      for (var key in this.buffers) {\n        var bufferData = this.buffers[key];\n        var bufferPosition = this.getAttribLocation(key); // 分别绑定数据到shader程序中\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData);\n        this.gl.vertexAttribPointer(bufferPosition, this.buffersSize[key], this.gl.FLOAT, normalize, 0, offset);\n        this.gl.enableVertexAttribArray(bufferPosition);\n      } // 加载shader程序\n\n\n      this.gl.useProgram(this.shaderPorgram);\n      this.setUniformData(); // 渲染\n\n      if (this.vertex.length) this.gl.drawArrays(this.gl[this.drawType], this.offset, vLen);\n    }\n  }, {\n    key: "afterRender",\n    value: function afterRender() {}\n  }, {\n    key: "onAdd",\n    value: function onAdd(miniGL) {\n      this.miniGL = miniGL; // 获取顶点数据内存里的指针\n\n      this.gl = miniGL.gl;\n      this.indicesPointer = this.gl.createBuffer();\n      this.initShader();\n    } // 销毁shader\n\n  }, {\n    key: "destroy",\n    value: function destroy() {\n      var _this = this;\n\n      var shaders = this.gl.getAttachedShaders(this.shaderPorgram);\n      shaders.forEach(function (item) {\n        _this.gl.deleteShader(item);\n      });\n      this.gl.deleteBuffer(this.indicesPointer);\n      this.gl.deleteProgram(this.shaderPorgram);\n      this.dispose();\n    } //释放buffer空间\n\n  }, {\n    key: "dispose",\n    value: function dispose() {\n      for (var key in this.buffers) {\n        this.gl.deleteBuffer(this.buffers[key]);\n      }\n\n      for (var _key in this.uniformData) {\n        if (this.uniformData[_key].texture) {\n          this.gl.deleteTexture(this.uniformData[_key].texture);\n        }\n      }\n\n      this.buffers = {};\n    }\n  }]);\n\n  return Base;\n}();\n\n/* harmony default export */ var Meshs_Base = (Meshs_Base_Base);\n// CONCATENATED MODULE: ./src/Meshs/Mesh.js\n\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar Mesh_Mesh = /*#__PURE__*/function (_Base) {\n  inherits_default()(Mesh, _Base);\n\n  var _super = _createSuper(Mesh);\n\n  //array.BYTES_PER_ELEMENT * indicesEachLength\n  function Mesh() {\n    var _this;\n\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      wireFrame: false\n    };\n\n    classCallCheck_default()(this, Mesh);\n\n    _this = _super.call(this, config);\n    _this.drawType = "TRIANGLES";\n    _this.offset = 0;\n    _this.shaders = {\n      vertex: mesh.vertexShader,\n      fragment: mesh.fragmentShader\n    };\n    _this.uniformData = {\n      z: {\n        value: config.z || 1,\n        type: "uniform1f"\n      }\n    };\n\n    _this.init(config);\n\n    _this.vSize = 2;\n    return _this;\n  }\n\n  createClass_default()(Mesh, [{\n    key: "setMap",\n    value: function setMap(src) {\n      var _this2 = this;\n\n      return loadTexture(this.gl, src).then(function (texture) {\n        _this2.uniformData[\'map\'] = {\n          type: "uniform1i",\n          //image\n          value: 0,\n          //0号纹理传递\n          texture: texture\n        };\n        _this2.uniformsNeedUpdate = true;\n      });\n    }\n  }, {\n    key: "setData",\n    value: function setData(data, indices) {\n      var viewport = this.miniGL.viewport;\n      this.dispose();\n      this.uniformData.transform = {\n        value: viewport.transform,\n        type: "uniformMatrix3fv"\n      };\n      var points = [];\n      var colors = [];\n      this.data = data;\n      data.forEach(function (item) {\n        var coord = [item.position.x, item.position.y];\n        var color = item.color || [1, 1, 0, 1];\n        colors.push.apply(colors, toConsumableArray_default()(color));\n        points.push.apply(points, coord);\n      });\n      this.vertex = points;\n      this.setBufferData(points, "position", 2);\n      this.setBufferData(colors, "color", 4);\n      this.setIndices(indices);\n    }\n  }, {\n    key: "setBufferDatas",\n    value: function setBufferDatas(_ref) {\n      var position = _ref.position,\n          color = _ref.color,\n          indices = _ref.indices,\n          uvs = _ref.uvs;\n      var viewport = this.miniGL.viewport;\n      this.dispose();\n      this.uniformData.transform = {\n        value: viewport.transform,\n        type: "uniformMatrix3fv"\n      };\n      this.vertex = position;\n      this.setBufferData(position, "position", 2);\n      this.setBufferData(color, "color", 4);\n      this.setBufferData(uvs, "uv", 2);\n      this.setIndices(indices);\n    }\n  }, {\n    key: "setIndices",\n    value: function setIndices(input) {\n      var indices = []; // 支持显示网格线\n\n      if (this.config.wireFrame && this.drawType === "TRIANGLES") {\n        for (var i = 0; i < input.length - 2; i += 3) {\n          indices.push(input[i], input[i + 1], input[i + 1], input[i + 2], input[i + 2], input[i]);\n        }\n      } else {\n        indices = input;\n      }\n\n      this.indices = indices; // 顶点buffer\n\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indicesPointer);\n      this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), this.gl.STATIC_DRAW);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      // 2D 只需要两个坐标轴标识位置\n      var offset = 0; // 从数据第几位开始偏移\n\n      var normalize = false; // 分别绑定数据到shader程序中\n\n      for (var key in this.buffers) {\n        var bufferData = this.buffers[key];\n        var bufferPosition = this.getAttribLocation(key); // 分别绑定数据到shader程序中\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData);\n        this.gl.vertexAttribPointer(bufferPosition, this.buffersSize[key], this.gl.FLOAT, normalize, 0, offset);\n        this.gl.enableVertexAttribArray(bufferPosition);\n      } // 使用顶点数据\n\n\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indicesPointer); // 加载shader程序\n\n      this.gl.useProgram(this.shaderPorgram);\n      this.setUniformData(); // 渲染\n\n      if (this.indices.length) {\n        var drawType = this.config.wireFrame ? "LINES" : this.gl[this.drawType]; // offset必须乘以类型数组的长度，意味着要从内存中数据的对应字节数开始算 根据类型乘对应的BYTES_PER_ELEMENT\n\n        this.gl.drawElements(drawType, this.indices.length, this.gl.UNSIGNED_SHORT, this.offset);\n      }\n    }\n  }]);\n\n  return Mesh;\n}(Meshs_Base);\n\n/* harmony default export */ var Meshs_Mesh = (Mesh_Mesh);\n// CONCATENATED MODULE: ./src/Shaders/point.js\n/* harmony default export */ var point = ({\n  vertexShader: function vertexShader(config) {\n    return "\\n\\t\\tprecision mediump float;\\n\\t\\tattribute vec2 position;\\n\\t\\tattribute vec4 color;\\n\\t\\tattribute float size;\\n\\t\\tattribute float initTime;\\n\\t\\tuniform float z;\\n\\t\\tuniform mat3 transform;\\n\\t\\tvarying vec4 vColor;\\n\\t\\tuniform float t;\\n\\t\\tvarying float vTime;\\n\\t\\t\\n\\t\\tvoid main()\\n\\t\\t{\\n\\t\\t\\tvColor = color;\\n\\t\\t\\tgl_PointSize = size;\\n\\t\\t\\tvec3 mPosition = transform * vec3(position,1.);\\n\\t\\t\\tgl_Position = vec4(mPosition.xy,z,1.);\\n\\t\\t\\tvTime = initTime;\\n\\t\\t}\\n\\t\\t";\n  },\n  fragmentShader: function fragmentShader(_ref) {\n    var isRound = _ref.isRound,\n        map = _ref.map,\n        isGradual = _ref.isGradual;\n    console.log(isRound);\n    return "\\n\\t\\tprecision mediump float;\\n\\t\\tuniform float t;\\n\\t\\tuniform float antialias;\\n\\t\\tuniform sampler2D map;\\n\\t\\tvarying float vTime;\\n\\t\\tvarying vec4 vColor;\\n\\t\\tvoid main()\\n\\t\\t{\\n\\t\\t\\tfloat distance = distance(gl_PointCoord, vec2(0.5, 0.5));\\n\\t\\t".concat(isRound ? "\\n\\t\\t\\tif (distance <= 0.5){" : \'\', "\\n\\t\\t\\t").concat(map ? "\\n\\t\\t\\t\\tvec4 texelColor = texture2D( map, gl_PointCoord ); \\n\\t\\t\\t\\tgl_FragColor = texelColor;\\n\\t\\t\\t\\t".concat(isGradual ? "\\n\\t\\t\\t\\tgl_FragColor.w *= sin(t+vTime)*0.75/2. + 1.-0.75/2." : \'\', ";\\n\\t\\t\\t\\tif(texelColor.w<=0.01){\\n\\t\\t\\t\\t\\tdiscard;\\n\\t\\t\\t\\t}\\n\\t\\t\\t") : "\\n\\t\\t\\t\\tgl_FragColor = vColor;\\n\\t\\t\\t\\t".concat(isGradual ? "\\n\\t\\t\\t\\tgl_FragColor.w = 1. - distance*2.;\\n\\t\\t\\t\\tgl_FragColor.w *= sin(t+vTime)*0.75/2. + 1.-0.75/2. ;" : \'\', "\\n\\t\\t\\t"), "\\n\\t\\t").concat(isRound ? "\\n\\t\\t\\t\\tfloat smoothSideRatio = smoothstep(0.,antialias,(0.5-distance));\\n\\t\\t\\t\\tgl_FragColor.w *= smoothSideRatio;\\n\\t\\t\\t}else{\\n\\t\\t\\t\\tdiscard;\\n\\t\\t\\t}\\n\\t\\t" : \'\', "\\n\\t\\t}\\n\\t\\t");\n  }\n});\n// CONCATENATED MODULE: ./src/Meshs/Point.js\n\n\n\n\n\n\n\nfunction Point_createSuper(Derived) { var hasNativeReflectConstruct = Point_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction Point_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar Point_Point = /*#__PURE__*/function (_Base) {\n  inherits_default()(Point, _Base);\n\n  var _super = Point_createSuper(Point);\n\n  function Point(config) {\n    var _this;\n\n    classCallCheck_default()(this, Point);\n\n    config = Object.assign({\n      isRound: true,\n      initTime: false\n    }, config);\n    _this = _super.call(this, config);\n    _this.drawType = "POINTS";\n    _this.vertex = [];\n    _this.offset = 0;\n    _this.vSize = 2;\n    _this.shaders = {\n      vertex: config.vertexShader || point.vertexShader(config),\n      fragment: config.fragmentShader || point.fragmentShader(config)\n    };\n    _this.uniformData = {\n      z: {\n        value: 1,\n        type: "uniform1f"\n      },\n      t: {\n        value: 1,\n        type: "uniform1f"\n      },\n      antialias: {\n        value: 0.1,\n        type: "uniform1f"\n      }\n    };\n\n    _this.init(config);\n\n    return _this;\n  }\n\n  createClass_default()(Point, [{\n    key: "setData",\n    value: function setData(data) {\n      var _this2 = this;\n\n      var viewport = this.miniGL.viewport;\n      this.dispose(); // 设置转换矩阵\n\n      this.uniformData.transform = {\n        value: viewport.transform,\n        type: "uniformMatrix3fv"\n      };\n      var points = [];\n      var colors = [];\n      var size = [];\n      var vTime = [];\n      this.data = data;\n      data.forEach(function (item) {\n        points.push(item.position.x, item.position.y);\n        colors.push.apply(colors, toConsumableArray_default()(item.color || [1, 0, 0, 1]));\n        size.push(item.size || 10);\n        vTime.push(item.initTime || _this2.config.initTime || 2 * Math.random() * Math.PI);\n      });\n      this.vertex = points;\n      this.setBufferData(points, "position", 2);\n      this.setBufferData(colors, "color", 4);\n      this.setBufferData(size, "size", 1);\n      this.setBufferData(vTime, "initTime", 1);\n    }\n  }, {\n    key: "setBufferDatas",\n    value: function setBufferDatas(_ref) {\n      var position = _ref.position,\n          color = _ref.color,\n          size = _ref.size,\n          initTime = _ref.initTime;\n      var viewport = this.miniGL.viewport;\n      this.dispose();\n      this.uniformData.transform = {\n        value: viewport.transform,\n        type: "uniformMatrix3fv"\n      };\n      this.vertex = position;\n      this.setBufferData(position, "position", 2);\n      this.setBufferData(color, "color", 4);\n      this.setBufferData(size, "size", 1);\n\n      if (initTime) {\n        this.setBufferData(initTime, \'initTime\', 1);\n      }\n    }\n  }]);\n\n  return Point;\n}(Meshs_Base);\n\n/* harmony default export */ var Meshs_Point = (Point_Point);\n// CONCATENATED MODULE: ./src/Shaders/line.js\n/* harmony default export */ var line = ({\n  // shader中进行坐标转换会不会快？CPU只会调用一次，GPU每帧都要重复去运算，2d情况下没有相机，\n  // 没有坐标因相机而变化的情况，所以不用再shader中运算，可以减少cpu的调用率\n  // 发现还是会大规模常常对坐标进行替换，那还是放进shader中运算吧\n  vertexShader: "\\n\\tprecision mediump float;\\n\\tattribute vec2 position;\\n\\tattribute vec4 color;\\n\\tuniform mat3 transform;\\n\\tuniform float z;\\n\\tvarying vec4 vColor;\\n\\tvoid main()\\n\\t{\\n\\t\\tvColor = color;\\n\\t\\tvec3 mPosition = transform * vec3(position,1.);\\n\\t\\tgl_Position = vec4(mPosition.xy,z,1.);\\n\\t}\\n\\t",\n  fragmentShader: "\\n\\tprecision mediump float;\\n\\tvarying vec4 vColor;\\n\\tvoid main()\\n\\t{\\n\\t\\tgl_FragColor = vColor;\\n\\t}\\n\\t"\n});\n// CONCATENATED MODULE: ./src/Meshs/Line.js\n\n\n\n\n\n\n\nfunction Line_createSuper(Derived) { var hasNativeReflectConstruct = Line_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction Line_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar Line_Line = /*#__PURE__*/function (_Base) {\n  inherits_default()(Line, _Base);\n\n  var _super = Line_createSuper(Line);\n\n  function Line(config) {\n    var _this;\n\n    classCallCheck_default()(this, Line);\n\n    config = Object.assign({\n      z: 1\n    }, config);\n    _this = _super.call(this, config);\n    _this.drawType = "LINE_STRIP";\n    _this.shaders = {\n      vertex: line.vertexShader,\n      fragment: line.fragmentShader\n    };\n    _this.offset = 0;\n    _this.uniformData = {\n      z: {\n        value: Math.min(config.z, 1),\n        type: "uniform1f"\n      }\n    };\n\n    _this.init(config);\n\n    return _this;\n  }\n\n  createClass_default()(Line, [{\n    key: "setData",\n    value: function setData(data) {\n      var viewport = this.miniGL.viewport;\n      this.dispose();\n      var points = [];\n      this.uniformData.transform = {\n        value: viewport.transform,\n        type: "uniformMatrix3fv"\n      };\n      this.data = data;\n      var colors = [];\n      data.forEach(function (item) {\n        points.push(item.position.x, item.position.y);\n        colors.push.apply(colors, toConsumableArray_default()(item.color || [1, 1, 0, 1]));\n      });\n      this.vertex = points;\n      this.setBufferData(points, "position", 2);\n      this.setBufferData(colors, "color", 4);\n    }\n  }]);\n\n  return Line;\n}(Meshs_Base);\n\n/* harmony default export */ var Meshs_Line = (Line_Line);\n// CONCATENATED MODULE: ./src/Shaders/widthLine.js\n/* harmony default export */ var widthLine = ({\n  // 先求连接线然后再求垂线\n  // 求出等比放大的值\n  vertexShader: "\\n\\tprecision lowp float;\\n\\tattribute vec2 now;\\n\\tattribute vec2 pre;\\n\\tattribute vec2 next;\\n\\tattribute float side;\\n\\tuniform float width;\\n\\tuniform float aspect;\\n\\tuniform mat3 transform;\\n\\tuniform float offset;\\n\\tvarying float vSide;\\n\\tvoid main()\\n\\t{\\n\\t\\tvSide = side;\\n\\n\\t\\t// \\u5148\\u8F6C\\u6362\\u5750\\u6807\\u7CFB\\n\\t\\tvec2 mNow = (transform*vec3(now,1.)).xy;\\n\\t\\tvec2 mNext = (transform*vec3(next,1.)).xy;\\n\\t\\tvec2 mPre = (transform*vec3(pre,1.)).xy;\\n\\t\\tvec2 _now = vec2(mNow);\\n\\t\\tvec2 _next = vec2(mNext);\\n\\t\\tvec2 _pre =  vec2(mPre);\\n\\t\\n\\t\\t// \\u5148\\u628A\\u672C\\u5750\\u6807\\u7CFB\\u7684\\u5750\\u6807\\u653E\\u5927\\uFF0C\\u548C\\u771F\\u5B9E\\u7684\\u5916\\u754C\\u5750\\u6807\\u4E00\\u6837,\\u8FD9\\u6837\\u6C42\\u51FA\\u6765\\u7684\\u76F8\\u5BF9\\u5411\\u91CF\\u662F\\u51C6\\u786E\\u7684\\uFF0C\\u5982\\u679C\\u5728\\u540E\\u9762\\u4E4B\\u95F4\\u5BF9normal\\u8FDB\\u884C\\u53D8\\u5316\\uFF0C\\u5C31\\u4F1A\\u5F97\\u51FA\\u9519\\u8BEF\\u7684\\u7ED3\\u679C\\n\\t\\t_now.x *= aspect;\\n\\t\\t_next.x *= aspect;\\n\\t\\t_pre.x *= aspect;\\n\\t\\t\\n\\t\\tvec2 point0_1 = normalize(_now - _pre);\\n\\t\\tvec2 point2_1 = normalize(_next - _now);\\n\\t\\tvec2 point2_1_0v = normalize(point2_1 + point0_1);\\n\\t\\t\\n\\t\\tvec2 normal = vec2( -point2_1_0v.y , point2_1_0v.x );\\n\\t\\tvec2 offsets = offset*normal;\\n\\n\\t\\t//\\u8FD9\\u4E2A\\u7B97\\u6CD5\\u4E0B\\u5148\\u653E\\u5927,\\u6C42\\u51FA\\u7684Normal\\u6BD4\\u4F8B\\u5728\\u653E\\u5927\\u7684\\u5750\\u6807\\u7CFB\\u4E0B\\u662F\\u5BF9\\u7684\\uFF0C\\u6839\\u636E\\u8FD9\\u4E2Anormal\\u6C42\\u51FA\\u653E\\u5927\\u7684\\u6BD4\\u4F8B\\n\\t\\tfloat ratio = sqrt(1.0 - pow(dot(normal,point0_1),2.0));\\n\\t\\tvec2 dir = normal * width/ratio * .5 * side + offsets;\\n\\n\\t\\t// \\u5F97\\u51FA\\u7684x\\u5750\\u6807\\u4F1A\\u88AB\\u653E\\u5927\\uFF0C\\u8FD9\\u91CC\\u8981\\u9664\\u6389,\\u8BB0\\u5F97\\u8981\\u7528\\u8F6C\\u6362\\u540E\\u5750\\u6807\\u8FDB\\u884C\\u52A0\\u51CF\\n\\t\\tgl_Position = vec4(mNow.x + dir.x/aspect,mNow.y+dir.y , 1., 1.);\\n\\t}\\n\\t",\n  fragmentShader: "\\n\\tprecision lowp float;\\n\\tuniform vec4 color;\\n\\tvarying float vSide;\\n\\tvoid main()\\n\\t{\\n\\t\\tfloat smoothSideRatio = max(0.1,smoothstep(0.,0.4,(1. - abs(vSide))));\\n\\t\\tgl_FragColor = color;\\n\\t\\tgl_FragColor.w = smoothSideRatio;\\n\\t}\\n\\t"\n});\n// CONCATENATED MODULE: ./src/Meshs/WidthLine.js\n\n\n\n\n\n\n\nfunction WidthLine_createSuper(Derived) { var hasNativeReflectConstruct = WidthLine_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction WidthLine_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar WidthLine_WidthLine = /*#__PURE__*/function (_Base) {\n  inherits_default()(WidthLine, _Base);\n\n  var _super = WidthLine_createSuper(WidthLine);\n\n  //"TRIANGLE_STRIP";\n  function WidthLine(config) {\n    var _this;\n\n    classCallCheck_default()(this, WidthLine);\n\n    _this = _super.call(this);\n    _this.drawType = "TRIANGLES";\n    _this.shaders = {\n      vertex: widthLine.vertexShader,\n      fragment: widthLine.fragmentShader\n    };\n    _this.offset = 0;\n    config = Object.assign({\n      width: 20,\n      z: 1,\n      offset: 0\n    }, config);\n    _this.uniformData = {\n      z: {\n        value: config.z || 1,\n        type: "uniform1f"\n      }\n    };\n\n    _this.init(config);\n\n    return _this;\n  }\n\n  createClass_default()(WidthLine, [{\n    key: "setData",\n    value: function setData(data) {\n      var viewport = this.miniGL.viewport;\n      if (!data.length && data.length < 2) return console.warn("need input data.length >= 2");\n      this.uniformData.transform = {\n        value: viewport.transform,\n        type: "uniformMatrix3fv"\n      };\n      this.uniformData.aspect = {\n        value: viewport.ratio,\n        type: "uniform1f"\n      };\n      this.uniformData.color = {\n        value: this.config.color || [1, 0, 1, 1],\n        type: "uniform4fv"\n      };\n      this.uniformData.width = {\n        value: 2 * this.config.width / this.miniGL.viewport.height,\n        type: "uniform1f"\n      };\n      this.uniformData.offset = {\n        value: 2 * this.config.offset / this.miniGL.viewport.height,\n        type: "uniform1f"\n      };\n      this.data = data;\n      var points = [];\n      data.forEach(function (item) {\n        points.push(item.position.x, item.position.y);\n      }); // 生产双倍点for两个边\n\n      var res = this.calcSidePoints(points);\n      this.setBufferData(res.nowData, "now", 2);\n      this.setBufferData(res.preData, "pre", 2);\n      this.setBufferData(res.nextData, "next", 2);\n      this.setBufferData(res.side, "side", 1); // 生成顶点\n\n      var indices = [];\n      var indicesLength = res.nowData.length / 2; // TRIANGLES情况\n\n      for (var i = 0; i < indicesLength - 2; i += 2) {\n        indices.push(i);\n        indices.push(i + 1);\n        indices.push(i + 2);\n        indices.push(i + 2);\n        indices.push(i + 1);\n        indices.push(i + 3);\n      } // Strip退化方案太反人类，不hack 了\n      // for (let i = 0; i < indicesLength; i++) {\n      // \t//012 213 233 336 366 667 678\n      // \t// 4 =>3 5=>6 //退化过程\n      // \t// data[length - 1], \n      // \tindices.push(i);\n      // }\n\n\n      this.setIndices(indices);\n      this.res = res;\n    }\n  }, {\n    key: "calcSidePoints",\n    value: function calcSidePoints() {\n      var _ref;\n\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var length = data.length;\n      var side = [];\n      var nextData = [];\n      var preData = [];\n      var nowData = []; // 生产双倍点for两个边\n\n      for (var i = 0; i < length; i += 2) {\n        side.push(1, -1);\n        nowData.push(data[i], data[i + 1], data[i], data[i + 1]);\n      }\n\n      var next = [2 * data[length - 2] - data[length - 4], 2 * data[length - 1] - data[length - 3]];\n      nextData = [].concat(nowData, next, next);\n      nextData.splice(0, 4);\n      var pre = [2 * data[0] - data[2], 2 * data[1] - data[3]];\n      preData = [].concat(pre, pre, nowData);\n      return _ref = {\n        nowData: nowData,\n        preData: preData\n      }, defineProperty_default()(_ref, "nowData", nowData), defineProperty_default()(_ref, "side", side), defineProperty_default()(_ref, "nextData", nextData), _ref;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      // 2D 只需要两个坐标轴标识位置\n      var offset = 0; // 从数据第几位开始偏移\n\n      var normalize = false;\n\n      for (var key in this.buffers) {\n        var bufferData = this.buffers[key];\n        var bufferPosition = this.getAttribLocation(key); // 分别绑定数据到shader程序中\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData);\n        this.gl.vertexAttribPointer(bufferPosition, this.buffersSize[key], this.gl.FLOAT, normalize, 0, offset); //todo:webgl2.0 实例数组能减少同样形状但渲染不同的高性能方案\n\n        this.gl.enableVertexAttribArray(bufferPosition);\n      } // 使用顶点数据\n\n\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indicesPointer); // 加载shader程序\n\n      this.gl.useProgram(this.shaderPorgram);\n      this.setUniformData(); // 渲染\n\n      if (this.indices.length) this.gl.drawElements(this.gl[this.drawType], this.indices.length, this.gl.UNSIGNED_SHORT, this.offset);\n    }\n  }]);\n\n  return WidthLine;\n}(Meshs_Base);\n\n/* harmony default export */ var Meshs_WidthLine = (WidthLine_WidthLine);\n// CONCATENATED MODULE: ./src/View/Canvas.js\n\n\n\n\n\n\n/**\n * @class\n */\n\nvar Canvas_Canvas = /*#__PURE__*/function () {\n  function Canvas(config) {\n    classCallCheck_default()(this, Canvas);\n\n    this.index = 0;\n    this.meshs = {};\n    this.miniGL = config.miniGL;\n    this.gl = this.miniGL.gl; // 基础渲染以下类，其他形状让让用户自己new\n    // 牺牲一些性能，渲染多次drawElements来避免通过退化三角形合并形状，导致的事件处理困难（需要分层处理合并的图层，然后按照像素去检测，比较恶心）\n\n    this.mesh = new Meshs_Mesh(config.meshConfig);\n    this.point = new Meshs_Point(config.pointConfig);\n    this.line = new Meshs_Line(config.lineConfig);\n    this.widthLine = new Meshs_WidthLine(config.widthLineConfig);\n    this.add(this.mesh);\n    this.add(this.point);\n    this.add(this.line);\n    this.add(this.widthLine);\n  }\n\n  createClass_default()(Canvas, [{\n    key: "dispose",\n    value: function dispose() {\n      for (var x in this.meshs) {\n        this.remove(x);\n      }\n\n      this.meshs = [];\n    }\n  }, {\n    key: "toDataUrl",\n    value: function toDataUrl() {\n      return this.gl.canvas.toDataUrl();\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      var _this = this;\n\n      var delta = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 16;\n      this.render(delta);\n      var time = new Date().getTime();\n      requestAnimationFrame(function () {\n        var endTime = new Date().getTime();\n\n        _this.update(endTime - time);\n      });\n    }\n    /**\n     * @param  {} mesh\n     * @param  {} [key]\n     * @returns {String} key\n     */\n\n  }, {\n    key: "add",\n    value: function add(mesh, key) {\n      key = key ? key : ++this.index;\n      this.meshs[key] = mesh;\n      mesh.onAdd && mesh.onAdd(this.miniGL);\n      return key;\n    }\n  }, {\n    key: "remove",\n    value: function remove(key) {\n      this.meshs[key].destroy && this.meshs[key].destroy();\n      delete this.meshs[key];\n    }\n  }, {\n    key: "render",\n    value: function render(delta) {\n      var gl = this.gl;\n      this.miniGL.fire("beforerender"); // 清空\n\n      gl.clearColor(1.0, 1.0, 1.0, 1.0);\n      gl.clearDepth(1.0);\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n      for (var key in this.meshs) {\n        var mesh = this.meshs[key]; // 是否支持深度测试\n\n        if (mesh.depthTest) {\n          gl.enable(gl.DEPTH_TEST);\n        } else {\n          gl.disable(gl.DEPTH_TEST);\n        } // 是否支持透明混色\n\n\n        if (mesh.transparent) {\n          gl.enable(gl.BLEND);\n          gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        } else {\n          gl.disable(gl.BLEND);\n        } // 写入深度缓冲\n\n\n        gl.depthMask(mesh.depthMask);\n\n        if (mesh.needRender) {\n          mesh.render(delta);\n          mesh.afterRender();\n        }\n      }\n    }\n  }]);\n\n  return Canvas;\n}();\n\n/* harmony default export */ var View_Canvas = (Canvas_Canvas);\n// CONCATENATED MODULE: ./src/Shaders/flyline.js\n/* harmony default export */ var flyline = ({\n  // shader中进行坐标转换会不会快？CPU只会调用一次，GPU每帧都要重复去运算，2d情况下没有相机，\n  // 没有坐标因相机而变化的情况，所以不用再shader中运算，可以减少cpu的调用率\n  vertexShader: "\\n\\tprecision mediump float;\\n\\tattribute vec4 position;\\n\\tattribute float number;\\n\\tuniform vec4 startColor;\\n\\tuniform vec4 endColor;\\n\\tuniform float length;\\n\\tuniform float t;\\n\\tuniform float z;\\n\\tvarying vec4 vColor;\\n\\tvoid main()\\n\\t{\\n\\t\\tgl_Position = vec4(position.xy,z,1.);\\n\\t\\tvColor = endColor - (length + t - number)/length*(endColor - startColor);\\n\\t}\\n\\t",\n  fragmentShader: "\\n\\tprecision mediump float;\\n\\tvarying vec4 vColor;\\n\\tvoid main()\\n\\t{\\n\\t\\tif(vColor.w<=0.02){\\n\\t\\t\\tdiscard;\\n\\t\\t}\\n\\t\\tgl_FragColor = vColor;\\n\\t}\\n\\t"\n});\n// CONCATENATED MODULE: ./src/Utils/vector.js\nfunction normalize(v) {\n  var length = Math.sqrt(v.x * v.x + v.y * v.y);\n  return {\n    x: v.x / length,\n    y: v.y / length\n  };\n}\n\nfunction addVector(v0, v1) {\n  return {\n    x: v0.x + v1.x,\n    y: v0.y + v1.y\n  };\n}\n\nfunction getVectorLength(v) {\n  var length = Math.sqrt(v.x * v.x + v.y * v.y);\n  return length;\n}\n\nfunction subVector(v0, v1) {\n  return {\n    x: v1.x - v0.x,\n    y: v1.y - v0.y\n  };\n}\n\nfunction multiple(v, t) {\n  return {\n    x: v.x * t,\n    y: v.y * t\n  };\n}\n\n\n// CONCATENATED MODULE: ./src/Utils/BezierLine.js\n\n\n\n\nvar BezierLine_BezierLine = /*#__PURE__*/function () {\n  function BezierLine() {\n    classCallCheck_default()(this, BezierLine);\n  }\n\n  createClass_default()(BezierLine, [{\n    key: "setControl",\n    value: function setControl(v0, v1, v2, v3) {\n      this.v0 = v0;\n      this.v1 = v1;\n      this.v2 = v2;\n      this.v3 = v3;\n    }\n  }, {\n    key: "setData",\n    value: function setData(data) {\n      this.data = data;\n    }\n  }, {\n    key: "getPoint",\n    value: function getPoint(t) {\n      var v0 = this.v0,\n          v1 = this.v1,\n          v2 = this.v2,\n          v3 = this.v3;\n      return {\n        x: this.cubicBezier(t, v0.x, v1.x, v2.x, v3.x),\n        y: this.cubicBezier(t, v0.y, v1.y, v2.y, v3.y)\n      };\n    }\n  }, {\n    key: "cubicBezier",\n    value: function cubicBezier(t, p0, p1, p2, p3) {\n      return CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n    }\n  }, {\n    key: "getSpacedPoints",\n    value: function getSpacedPoints(n) {\n      var points = [];\n      this.lengths = this.getLengths(n); // 缓存起来\n\n      for (var i = 0; i <= n; i++) {\n        var t = this.getUtoTmapping(i / n);\n        points.push(this.getPoint(t));\n      }\n\n      return points;\n    }\n  }, {\n    key: "getLengths",\n    value: function getLengths() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n      var length = 0;\n      var lengths = [0];\n\n      for (var i = 1; i <= n; i++) {\n        var current = this.getPoint(i / n);\n        var last = this.getPoint((i - 1) / n);\n        length += getVectorLength(subVector(last, current));\n        lengths.push(length);\n      }\n\n      return lengths;\n    }\n  }, {\n    key: "getLength",\n    value: function getLength(n) {\n      var lengths = this.getLengths(n);\n      return lengths[lengths.length - 1];\n    } // 根据总长度算出一定比例的长度所对应的t值，\n    // 这个等距划分的算法不知道为何在贝塞尔中间的部分间距过大不再等距，有空再看下吧\n\n  }, {\n    key: "getUtoTmapping",\n    value: function getUtoTmapping(u) {\n      var lengths = this.lengths;\n      var length = lengths[lengths.length - 1];\n      var targetLength = u * length;\n      var nextIndex,\n          nowIndex = 0;\n      lengths.find(function (item, index) {\n        if (item >= targetLength) {\n          nextIndex = index;\n          return true;\n        } else {\n          nowIndex = index;\n          return false;\n        }\n      });\n      var restRatio = u === 0 ? 0 : (targetLength - lengths[nowIndex]) / (lengths[nextIndex] - lengths[nowIndex]);\n      var t = (nowIndex + Math.max(restRatio, 0)) / (this.lengths.length - 1);\n      return t;\n    }\n  }]);\n\n  return BezierLine;\n}();\n\nfunction CubicBezierP0(t, p) {\n  var k = 1 - t;\n  return k * k * k * p;\n}\n\nfunction CubicBezierP1(t, p) {\n  var k = 1 - t;\n  return 3 * k * k * t * p;\n}\n\nfunction CubicBezierP2(t, p) {\n  return 3 * (1 - t) * t * t * p;\n}\n\nfunction CubicBezierP3(t, p) {\n  return t * t * t * p;\n}\n\n/* harmony default export */ var Utils_BezierLine = (BezierLine_BezierLine);\n// CONCATENATED MODULE: ./src/Meshs/FlyLine.js\n\n\n\n\n\n\nfunction FlyLine_createSuper(Derived) { var hasNativeReflectConstruct = FlyLine_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction FlyLine_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\nvar FlyLine_Line = /*#__PURE__*/function (_Base) {\n  inherits_default()(Line, _Base);\n\n  var _super = FlyLine_createSuper(Line);\n\n  function Line(config) {\n    var _this;\n\n    classCallCheck_default()(this, Line);\n\n    config = Object.assign({\n      z: 0.1,\n      length: 50,\n      lineHeight: 0.2,\n      speed: 1,\n      smoothNumber: 1\n    }, config);\n    _this = _super.call(this, config);\n    _this.drawType = "LINE_STRIP";\n    _this.shaders = {\n      vertex: flyline.vertexShader,\n      fragment: flyline.fragmentShader\n    };\n    _this.offset = 0;\n    _this.depthMask = false;\n\n    _this.init(config);\n\n    _this.bezierLine = new Utils_BezierLine();\n    _this.uniformData = {\n      t: {\n        value: 0,\n        type: "uniform1f"\n      },\n      length: {\n        value: config.length,\n        type: "uniform1f"\n      },\n      startColor: {\n        value: config.startColor || [1, 0, 0, 0],\n        type: "uniform4fv"\n      },\n      endColor: {\n        value: config.endColor || [1, 0, 0, 1],\n        type: "uniform4fv"\n      },\n      z: {\n        value: _this.config.z,\n        type: "uniform1f"\n      }\n    };\n    return _this;\n  }\n\n  createClass_default()(Line, [{\n    key: "setData",\n    value: function setData(data) {\n      var viewport = this.miniGL.viewport;\n      this.data = data;\n      this.data.startXY = viewport.convertScreenToClip(data.start.x, data.start.y);\n      this.data.endXY = viewport.convertScreenToClip(data.end.x, data.end.y);\n      var midPoint = {\n        x: this.data.start.x / 2 + this.data.end.x / 2,\n        y: this.data.start.y / 2 + this.data.end.y / 2\n      };\n      var end_start = {\n        x: this.data.end.x - this.data.start.x,\n        y: this.data.end.y - this.data.start.y\n      };\n      var normal = {\n        x: end_start.y,\n        y: -end_start.x\n      };\n\n      if (end_start.x < 0) {\n        normal = {\n          x: -end_start.y,\n          y: end_start.x\n        };\n      }\n\n      var length = getVectorLength(subVector(data.end, data.start));\n      var lineHeight = this.config.lineHeight * length;\n      var controlPoint = addVector(multiple(normalize(normal), lineHeight), midPoint);\n      this.bezierLine.setControl(this.data.start, this.data.start, controlPoint, this.data.end);\n      var allPoints = this.bezierLine.getSpacedPoints(length * this.config.smoothNumber);\n      var points = [];\n      var numbers = [];\n      allPoints.forEach(function (item, index) {\n        // 最后再近些坐标转换，避免因为画布缩放导致长度计算失准\n        var point = viewport.convertScreenToClip(item.x, item.y);\n        points.push(point.x, point.y);\n        numbers.push(index);\n      });\n      this.vertex = points; // this.pointsBufferLength = points.length*Float32Array.BYTES_PER_ELEMENT;\n\n      this.setBufferData(points, "position", 2);\n      this.setBufferData(numbers, "number", 1);\n    }\n  }, {\n    key: "start",\n    value: function start() {\n      this.startFlag = true;\n    }\n  }, {\n    key: "pause",\n    value: function pause() {\n      this.startFlag = false;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      // 2D 只需要两个坐标轴标识位置\n      var normalize = false;\n      var length = this.vertex.length / 2;\n      var _this$uniformData = this.uniformData,\n          uniformData = _this$uniformData === void 0 ? {} : _this$uniformData,\n          config = this.config;\n      if (!this.startFlag) return;\n      uniformData.t.value += this.config.speed;\n\n      if (uniformData.t.value >= length) {\n        uniformData.t.value = -this.config.length;\n      } // 分别绑定数据到shader程序中\n\n\n      for (var key in this.buffers) {\n        var bufferData = this.buffers[key];\n        var bufferPosition = this.getAttribLocation(key); // 分别绑定数据到shader程序中\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData);\n        this.gl.vertexAttribPointer(bufferPosition, this.buffersSize[key], this.gl.FLOAT, normalize, 0, 0);\n        this.gl.enableVertexAttribArray(bufferPosition);\n      } // 加载shader程序\n\n\n      this.gl.useProgram(this.shaderPorgram);\n      this.setUniformData(); // 渲染\n\n      if (this.vertex.length) {\n        //specifying the starting index in the array of vector points. \n        //specifying the number of indices to be rendered.\n        var offset = Math.max(uniformData.t.value, 0); //起步时要算出真实的减掉负数的size，到达时，不能超过整个数组长度\n\n        var size = Math.min(uniformData.t.value + config.length - offset, length - offset);\n        if (size === 0) return;\n        this.gl.drawArrays(this.gl[this.drawType], offset, size);\n      }\n    }\n  }]);\n\n  return Line;\n}(Meshs_Base);\n\n/* harmony default export */ var FlyLine = (FlyLine_Line);\n// CONCATENATED MODULE: ./src/Shaders/image.js\n/* harmony default export */ var Shaders_image = ({\n  vertexShader: "\\n\\tprecision lowp float;\\n\\tattribute vec2 position;\\n\\tattribute vec2 uv;\\n\\tvarying vec4 vColor;\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 transform;\\n\\tuniform float z;\\n\\tvoid main()\\n\\t{\\n\\t\\tvUv = uv;\\n\\t\\tvec3 mPosition = transform * vec3(position,1.0);\\n\\t\\tgl_Position = vec4(mPosition.xy,z,1.0);\\n\\n\\t}\\n\\t",\n  fragmentShader: "\\n\\tprecision lowp float;\\n\\tvarying vec2 vUv;\\n\\tuniform sampler2D u_Sampler;\\n\\tvoid main()\\n\\t{\\n\\t\\tgl_FragColor = texture2D(u_Sampler,vUv);\\n\\t\\t// if(gl_FragColor.x*gl_FragColor.y*gl_FragColor.z>0.5){\\n\\t\\t// \\tdiscard;\\n\\t\\t// }\\n\\t}\\n\\t"\n});\n// CONCATENATED MODULE: ./src/Utils/LoadTexture.js\nfunction LoadTexture_loadTexture(gl, imagePath) {\n  function lg2(n) {\n    return Math.log(n) / Math.log(2);\n  }\n\n  return new Promise(function (resove, reject) {\n    var image = new Image();\n    image.src = imagePath;\n\n    image.onload = function () {\n      var texture = gl.createTexture(); // 挂载当前的空材质开始操作\n\n      gl.bindTexture(gl.TEXTURE_2D, texture); // 灌入图形数据\n\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image); // 反转y轴\n\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1); // 支持放大缩小渐进加载和插值算法，整数倍情况\n\n      if (lg2(image.width) === 0 && lg2(image.height) === 0) {\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\n        gl.generateMipmap(gl.TEXTURE_2D);\n      } else {\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      } // 取消挂载\n\n\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      resove(texture);\n    };\n\n    image.onerror = function (e) {\n      reject(image, e);\n    };\n  });\n}\n// CONCATENATED MODULE: ./src/Meshs/Image.js\n\n\n\n\n\n\nfunction Image_createSuper(Derived) { var hasNativeReflectConstruct = Image_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction Image_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar Image_Image = /*#__PURE__*/function (_Base) {\n  inherits_default()(Image, _Base);\n\n  var _super = Image_createSuper(Image);\n\n  //array.BYTES_PER_ELEMENT * indicesEachLength\n  function Image(config) {\n    var _this;\n\n    classCallCheck_default()(this, Image);\n\n    _this = _super.call(this, config);\n    _this.drawType = "TRIANGLES";\n    _this.offset = 0;\n    _this.shaders = {\n      vertex: Shaders_image.vertexShader,\n      fragment: Shaders_image.fragmentShader\n    };\n    _this.uniformData = {\n      z: {\n        value: config.z || 1,\n        type: "uniform1f"\n      }\n    };\n\n    _this.init(config);\n\n    _this.vSize = 2;\n    return _this;\n  }\n\n  createClass_default()(Image, [{\n    key: "setTexture",\n    value: function setTexture(key, imagePath) {\n      var _this2 = this;\n\n      LoadTexture_loadTexture(this.gl, imagePath).then(function (texture) {\n        _this2.uniformData[key] = {\n          type: "uniform1i",\n          //image\n          value: 0,\n          //0号纹理传递\n          texture: texture\n        };\n        _this2.uniformsNeedUpdate = true;\n      });\n    }\n  }, {\n    key: "setData",\n    value: function setData(data) {\n      if (!this.miniGL) {\n        throw new Error("请先将组件通过minigl.canvas.add()加入实例中");\n      } // 释放内存空间\n\n\n      this.dispose();\n      var viewport = this.miniGL.viewport;\n      this.data = data; // 设置转换矩阵\n\n      this.uniformData.transform = {\n        value: viewport.transform,\n        type: "uniformMatrix3fv"\n      };\n      var width = data.width,\n          height = data.height,\n          src = data.src,\n          x = data.x,\n          y = data.y; // 设置纹理\n\n      this.setTexture(\'u_Sampler\', src); // 计算uv\n\n      var points = [x, y, x, y + height, x + width, y, x + width, y + height];\n      var indices = [0, 1, 2, 2, 1, 3];\n      var uv = [0, 0, 0, 1, 1, 0, 1, 1];\n      this.vertex = points;\n      this.setBufferData(points, "position", 2);\n      this.setBufferData(uv, "uv", 2);\n      this.setIndices(indices);\n      this.uniformsNeedUpdate = true;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      // 2D 只需要两个坐标轴标识位置\n      var offset = 0; // 从数据第几位开始偏移\n\n      var normalize = false;\n      var gl = this.gl; // 图片加载完了再说\n\n      if (!this.uniformData[\'u_Sampler\']) {\n        return;\n      } // 分别绑定数据到shader程序中\n\n\n      for (var key in this.buffers) {\n        var bufferData = this.buffers[key];\n        var bufferPosition = this.getAttribLocation(key); // 分别绑定数据到shader程序中\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, bufferData);\n        gl.vertexAttribPointer(bufferPosition, this.buffersSize[key], gl.FLOAT, normalize, 0, offset);\n        gl.enableVertexAttribArray(bufferPosition);\n      } // 使用顶点数据\n\n\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesPointer); // 加载shader程序\n\n      gl.useProgram(this.shaderPorgram);\n      this.setUniformData(); // 渲染\n\n      if (this.indices.length) // offset必须乘以类型数组的长度，意味着要从内存中数据的对应字节数开始算 根据类型乘对应的BYTES_PER_ELEMENT\n        gl.drawElements(gl[this.drawType], this.indices.length, gl.UNSIGNED_SHORT, this.offset);\n    }\n  }]);\n\n  return Image;\n}(Meshs_Base);\n\n/* harmony default export */ var Meshs_Image = (Image_Image);\n// CONCATENATED MODULE: ./src/Shaders/roundLine.js\n/* harmony default export */ var roundLine = ({\n  // 先求连接线然后再求垂线\n  // 求出等比放大的值\n  vertexShader: "\\n\\tprecision lowp float;\\n\\tattribute vec2 now;\\n\\tattribute vec2 pre;\\n\\tattribute vec2 next;\\n\\tattribute float side;\\n\\tattribute float status;\\n\\tuniform float width;\\n\\tuniform float aspect;\\n\\tuniform mat3 transform;\\n\\tuniform float offset;\\n\\tvarying float vSide;\\n\\tvoid main()\\n\\t{\\n\\t\\tvSide = side;\\n\\t\\t\\n\\t\\t// \\u5148\\u8F6C\\u6362\\u5750\\u6807\\u7CFB\\n\\t\\tvec2 mNow = (transform*vec3(now,1.)).xy;\\n\\t\\tvec2 mNext = (transform*vec3(next,1.)).xy;\\n\\t\\tvec2 mPre = (transform*vec3(pre,1.)).xy;\\n\\t\\tvec2 _now = vec2(mNow);\\n\\t\\tvec2 _next = vec2(mNext);\\n\\t\\tvec2 _pre =  vec2(mPre);\\n\\t\\n\\t\\t// \\u5148\\u628A\\u672C\\u5750\\u6807\\u7CFB\\u7684\\u5750\\u6807\\u653E\\u5927\\uFF0C\\u548C\\u771F\\u5B9E\\u7684\\u5916\\u754C\\u5750\\u6807\\u4E00\\u6837,\\u8FD9\\u6837\\u6C42\\u51FA\\u6765\\u7684\\u76F8\\u5BF9\\u5411\\u91CF\\u662F\\u51C6\\u786E\\u7684\\uFF0C\\u5982\\u679C\\u5728\\u540E\\u9762\\u4E4B\\u95F4\\u5BF9normal\\u8FDB\\u884C\\u53D8\\u5316\\uFF0C\\u5C31\\u4F1A\\u5F97\\u51FA\\u9519\\u8BEF\\u7684\\u7ED3\\u679C\\n\\t\\t_now.x *= aspect;\\n\\t\\t_next.x *= aspect;\\n\\t\\t_pre.x *= aspect;\\n\\t\\t\\n\\t\\tvec2 _dir = normalize(status*_now - status*_pre + (1.0-status)*_next - (1.0-status)*_now);\\n\\n\\t\\tvec2 normal = vec2( -_dir.y , _dir.x );\\n\\t\\tvec2 dir = normal * width * .5 * side;\\n\\n\\t\\t// \\u504F\\u79FB\\u91CF\\n\\t\\tif(offset!=0.){\\n\\t\\t\\tvec2 point21 = normalize(_next - _now);\\n\\t\\t\\tvec2 point10 = normalize(_now - _pre);\\n\\t\\t\\tvec2 offsetDir = normalize( point21 + point10);\\n\\t\\t\\tvec2 offsetNormal = vec2( -offsetDir.y, offsetDir.x);\\n\\t\\t\\tfloat ratio = sqrt(1.0 - pow(dot(offsetNormal,point10),2.0));\\n\\t\\t\\tvec2 offsets =  offsetNormal * offset/ratio  ;\\n\\t\\t\\tdir += offsets;\\n\\t\\t}\\n\\n\\t\\t// \\u5F97\\u51FA\\u7684x\\u5750\\u6807\\u4F1A\\u88AB\\u653E\\u5927\\uFF0C\\u8FD9\\u91CC\\u8981\\u9664\\u6389,\\u8BB0\\u5F97\\u8981\\u7528\\u8F6C\\u6362\\u540E\\u5750\\u6807\\u8FDB\\u884C\\u52A0\\u51CF\\n\\t\\tgl_Position = vec4(mNow.x + dir.x/aspect,mNow.y+dir.y , 1., 1.);\\n\\t}\\n\\t",\n  fragmentShader: "\\n\\tprecision lowp float;\\n\\tuniform vec4 color;\\n\\tvarying float vSide;\\n\\tvoid main()\\n\\t{\\n\\t\\tfloat smoothSideRatio = max(0.1,smoothstep(0.,0.3,(1. - abs(vSide))));\\n\\t\\tgl_FragColor = color;\\n\\t\\tgl_FragColor.w *= smoothSideRatio;\\n\\t}\\n\\t"\n});\n// CONCATENATED MODULE: ./src/Meshs/RoundLine/Line.js\n\n\n\n\n\n\nfunction RoundLine_Line_createSuper(Derived) { var hasNativeReflectConstruct = RoundLine_Line_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction RoundLine_Line_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar Line_RoundLine = /*#__PURE__*/function (_Base) {\n  inherits_default()(RoundLine, _Base);\n\n  var _super = RoundLine_Line_createSuper(RoundLine);\n\n  //"TRIANGLE_STRIP";\n  function RoundLine(config) {\n    var _this;\n\n    classCallCheck_default()(this, RoundLine);\n\n    _this = _super.call(this);\n    _this.drawType = "TRIANGLES";\n    _this.shaders = {\n      vertex: roundLine.vertexShader,\n      fragment: roundLine.fragmentShader\n    };\n    _this.offset = 0;\n    config = Object.assign({\n      width: 20,\n      z: 1,\n      offset: 0\n    }, config);\n    _this.uniformData = {\n      z: {\n        value: config.z || 1,\n        type: "uniform1f"\n      }\n    };\n\n    _this.init(config);\n\n    return _this;\n  }\n\n  createClass_default()(RoundLine, [{\n    key: "setData",\n    value: function setData(data) {\n      var viewport = this.miniGL.viewport;\n      if (!data.length && data.length < 2) return console.warn("need input data.length >= 2");\n      this.uniformData.transform = {\n        value: viewport.transform,\n        type: "uniformMatrix3fv"\n      };\n      this.uniformData.aspect = {\n        value: viewport.ratio,\n        type: "uniform1f"\n      };\n      this.uniformData.color = {\n        value: this.config.color || [1, 0, 1, 1],\n        type: "uniform4fv"\n      };\n      this.uniformData.width = {\n        value: 2 * this.config.width / this.miniGL.viewport.height,\n        type: "uniform1f"\n      };\n      this.uniformData.offset = {\n        value: 2 * this.config.offset / this.miniGL.viewport.height,\n        type: "uniform1f"\n      };\n      this.data = data;\n      var points = [];\n      data.forEach(function (item) {\n        points.push(item.position.x, item.position.y);\n      }); // 生产双倍点for两个边\n\n      var res = this.calcSidePoints(data);\n      this.setBufferData(res.nowData, "now", 2);\n      this.setBufferData(res.preData, "pre", 2);\n      this.setBufferData(res.nextData, "next", 2);\n      this.setBufferData(res.side, "side", 1);\n      this.setBufferData(res.status, "status", 1); // 生成顶点\n\n      var indices = [];\n\n      for (var j = 0; j < data.length - 1; j++) {\n        var n = j * 4;\n        indices.push(n, n + 1, n + 2, n + 2, n + 1, n + 3);\n      }\n\n      this.setIndices(indices);\n      this.res = res;\n    }\n  }, {\n    key: "calcSidePoints",\n    value: function calcSidePoints() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var length = data.length;\n      var side = [];\n      var nextData = [];\n      var preData = [];\n      var nowData = [];\n      var status = []; // 生产双倍点for两个边\n\n      for (var i = 0; i < length - 1; i++) {\n        var point1 = data[i].position;\n        var point0 = data[i - 1] ? data[i - 1].position : {\n          x: 2 * data[i].position.x - data[i + 1].position.x,\n          y: 2 * data[i].position.y - data[i + 1].position.y\n        };\n        var point2 = data[i + 1] ? data[i + 1].position : {\n          x: 2 * data[i].position.x - data[i - 1].position.x,\n          y: 2 * data[i].position.y - data[i - 1].position.y\n        };\n        side.push(1, -1);\n        preData.push(point0.x, point0.y, point0.x, point0.y);\n        nowData.push(point1.x, point1.y, point1.x, point1.y);\n        nextData.push(point2.x, point2.y, point2.x, point2.y);\n        var j = i + 1;\n        point1 = data[j].position;\n        point0 = data[j - 1] ? data[j - 1].position : {\n          x: 2 * data[j].position.x - data[j + 1].position.x,\n          y: 2 * data[j].position.y - data[j + 1].position.y\n        };\n        point2 = data[j + 1] ? data[j + 1].position : {\n          x: 2 * data[j].position.x - data[j - 1].position.x,\n          y: 2 * data[j].position.y - data[j - 1].position.y\n        };\n        side.push(1, -1);\n        preData.push(point0.x, point0.y, point0.x, point0.y);\n        nowData.push(point1.x, point1.y, point1.x, point1.y);\n        nextData.push(point2.x, point2.y, point2.x, point2.y);\n        status.push(0, 0, 1, 1);\n      }\n\n      return {\n        preData: preData,\n        nowData: nowData,\n        nextData: nextData,\n        side: side,\n        status: status\n      };\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      // 2D 只需要两个坐标轴标识位置\n      var offset = 0; // 从数据第几位开始偏移\n\n      var normalize = false;\n\n      for (var key in this.buffers) {\n        var bufferData = this.buffers[key];\n        var bufferPosition = this.getAttribLocation(key); // 分别绑定数据到shader程序中\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData);\n        this.gl.vertexAttribPointer(bufferPosition, this.buffersSize[key], this.gl.FLOAT, normalize, 0, offset); //todo:webgl2.0 实例数组能减少同样形状但渲染不同的高性能方案\n\n        this.gl.enableVertexAttribArray(bufferPosition);\n      } // 使用顶点数据\n\n\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indicesPointer); // 加载shader程序\n\n      this.gl.useProgram(this.shaderPorgram);\n      this.setUniformData(); // 渲染\n\n      if (this.indices.length) {\n        this.gl.drawElements(this.gl[this.drawType], this.indices.length, this.gl.UNSIGNED_SHORT, this.offset);\n      }\n    }\n  }]);\n\n  return RoundLine;\n}(Meshs_Base);\n\n/* harmony default export */ var RoundLine_Line = (Line_RoundLine);\n// CONCATENATED MODULE: ./src/Shaders/roundLinePoint.js\n/* harmony default export */ var roundLinePoint = ({\n  // 先求连接线然后再求垂线\n  // 求出等比放大的值\n  vertexShader: "\\n\\tprecision highp float;\\n\\tattribute vec2 now;\\n\\tattribute vec2 pre;\\n\\tattribute vec2 next;\\n\\tuniform float width;\\n\\tuniform float aspect;\\n\\tuniform float z;\\n\\tuniform mat3 transform;\\n\\tuniform float offset;\\n\\tvoid main()\\n\\t{\\n\\t\\t// \\u5148\\u8F6C\\u6362\\u5750\\u6807\\u7CFB\\n\\t\\tvec2 mNow = (transform*vec3(now,1.)).xy;\\n\\t\\tvec2 mNext = (transform*vec3(next,1.)).xy;\\n\\t\\tvec2 mPre = (transform*vec3(pre,1.)).xy;\\n\\t\\tvec2 _now = vec2(mNow);\\n\\t\\tvec2 _next = vec2(mNext);\\n\\t\\tvec2 _pre =  vec2(mPre);\\n\\t\\n\\t\\t// \\u5148\\u628A\\u672C\\u5750\\u6807\\u7CFB\\u7684\\u5750\\u6807\\u653E\\u5927\\uFF0C\\u548C\\u771F\\u5B9E\\u7684\\u5916\\u754C\\u5750\\u6807\\u4E00\\u6837,\\u8FD9\\u6837\\u6C42\\u51FA\\u6765\\u7684\\u76F8\\u5BF9\\u5411\\u91CF\\u662F\\u51C6\\u786E\\u7684\\uFF0C\\u5982\\u679C\\u5728\\u540E\\u9762\\u4E4B\\u95F4\\u5BF9normal\\u8FDB\\u884C\\u53D8\\u5316\\uFF0C\\u5C31\\u4F1A\\u5F97\\u51FA\\u9519\\u8BEF\\u7684\\u7ED3\\u679C\\n\\t\\t_now.x *= aspect;\\n\\t\\t_next.x *= aspect;\\n\\t\\t_pre.x *= aspect;\\n\\t\\t\\n\\t\\t// \\u504F\\u79FB\\n\\t\\tif(offset!=0.){\\n\\t\\t\\tvec2 point21 = normalize(_next - _now);\\n\\t\\t\\tvec2 point10 = normalize(_now - _pre);\\n\\t\\t\\tvec2 offsetDir = normalize( point21 + point10);\\n\\t\\t\\tvec2 offsetNormal = vec2( -offsetDir.y, offsetDir.x);\\n\\t\\t\\tfloat ratio = sqrt(1.0 - pow(dot(offsetNormal,point10),2.0));\\n\\t\\t\\tvec2 offsets =  offsetNormal * offset/ratio ;\\n\\t\\t\\toffsets.x /= aspect;\\n\\t\\t\\tmNow += offsets;\\n\\t\\t}\\n\\n\\t\\t// \\u5F97\\u51FA\\u7684x\\u5750\\u6807\\u4F1A\\u88AB\\u653E\\u5927\\uFF0C\\u8FD9\\u91CC\\u8981\\u9664\\u6389,\\u8BB0\\u5F97\\u8981\\u7528\\u8F6C\\u6362\\u540E\\u5750\\u6807\\u8FDB\\u884C\\u52A0\\u51CF\\n\\t\\tgl_PointSize = width;\\n\\n\\t\\tgl_Position = vec4(mNow.x,mNow.y , z, 1.);\\n\\t}\\n\\t",\n  fragmentShader: "\\n\\tprecision highp float;\\n\\tuniform vec4 color;\\n\\tvoid main()\\n\\t{\\n\\t\\tfloat l = length(gl_PointCoord - vec2(0.5,0.5));\\n\\t\\t\\n\\t\\tfloat smoothSideRatio = smoothstep(0.,0.3,(0.5-l));\\n\\t\\tgl_FragColor = color;\\n\\t\\tgl_FragColor.w *= smoothSideRatio;\\n\\t}\\n\\t"\n});\n// CONCATENATED MODULE: ./src/Meshs/RoundLine/LinePoint.js\n\n\n\n\n\n\nfunction LinePoint_createSuper(Derived) { var hasNativeReflectConstruct = LinePoint_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction LinePoint_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar LinePoint_LinePoint = /*#__PURE__*/function (_Base) {\n  inherits_default()(LinePoint, _Base);\n\n  var _super = LinePoint_createSuper(LinePoint);\n\n  //"TRIANGLE_STRIP";\n  function LinePoint(config) {\n    var _this;\n\n    classCallCheck_default()(this, LinePoint);\n\n    _this = _super.call(this);\n    _this.drawType = "POINTS";\n    _this.shaders = {\n      vertex: roundLinePoint.vertexShader,\n      fragment: roundLinePoint.fragmentShader\n    };\n    _this.offset = 0;\n    config = Object.assign({\n      width: 20,\n      z: 1,\n      offset: 0\n    }, config);\n    _this.uniformData = {\n      z: {\n        value: config.z || 1,\n        type: "uniform1f"\n      }\n    };\n\n    _this.init(config);\n\n    return _this;\n  }\n\n  createClass_default()(LinePoint, [{\n    key: "setData",\n    value: function setData(res) {\n      var viewport = this.miniGL.viewport;\n      this.uniformData.transform = {\n        value: viewport.transform,\n        type: "uniformMatrix3fv"\n      };\n      this.uniformData.aspect = {\n        value: viewport.ratio,\n        type: "uniform1f"\n      };\n      this.uniformData.color = {\n        value: this.config.color || [1, 0, 1, 1],\n        type: "uniform4fv"\n      };\n      this.uniformData.width = {\n        value: this.config.width,\n        type: "uniform1f"\n      };\n      this.uniformData.offset = {\n        value: 2 * this.config.offset / this.miniGL.viewport.height,\n        type: "uniform1f"\n      }; // 生产双倍点for两个边\n\n      this.vertex = res.nowData;\n      this.setBufferData(res.nowData, "now", 2);\n      this.setBufferData(res.preData, "pre", 2);\n      this.setBufferData(res.nextData, "next", 2);\n    }\n  }]);\n\n  return LinePoint;\n}(Meshs_Base);\n\n/* harmony default export */ var RoundLine_LinePoint = (LinePoint_LinePoint);\n// CONCATENATED MODULE: ./src/Meshs/RoundLine/index.js\n\n\n\n\n\nvar RoundLine_RoundLine = /*#__PURE__*/function () {\n  function RoundLine(config) {\n    classCallCheck_default()(this, RoundLine);\n\n    this.depthMask = true;\n    this.depthTest = true;\n    this.transparent = true;\n    this.line = new RoundLine_Line(config);\n    this.linePoint = new RoundLine_LinePoint(config);\n  }\n\n  createClass_default()(RoundLine, [{\n    key: "onAdd",\n    value: function onAdd() {\n      var _this$line, _this$linePoint;\n\n      (_this$line = this.line).onAdd.apply(_this$line, arguments);\n\n      (_this$linePoint = this.linePoint).onAdd.apply(_this$linePoint, arguments);\n    }\n  }, {\n    key: "setData",\n    value: function setData() {\n      var _this$line2;\n\n      (_this$line2 = this.line).setData.apply(_this$line2, arguments);\n\n      this.linePoint.setData(this.line.res);\n    }\n  }, {\n    key: "dispose",\n    value: function dispose() {\n      var _this$line3, _this$linePoint2;\n\n      (_this$line3 = this.line).dispose.apply(_this$line3, arguments);\n\n      (_this$linePoint2 = this.linePoint).dispose.apply(_this$linePoint2, arguments);\n    }\n  }, {\n    key: "destroy",\n    value: function destroy() {\n      var _this$line4, _this$linePoint3;\n\n      (_this$line4 = this.line).destroy.apply(_this$line4, arguments);\n\n      (_this$linePoint3 = this.linePoint).destroy.apply(_this$linePoint3, arguments);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$linePoint4, _this$line5;\n\n      (_this$linePoint4 = this.linePoint).render.apply(_this$linePoint4, arguments);\n\n      (_this$line5 = this.line).render.apply(_this$line5, arguments);\n    }\n  }]);\n\n  return RoundLine;\n}();\n\n/* harmony default export */ var Meshs_RoundLine = (RoundLine_RoundLine);\n// CONCATENATED MODULE: ./src/Shapes/Rect.js\n\n\n\n/**\n * @class\n */\n\nvar Rect_Rect = /*#__PURE__*/function () {\n  /**\n   * 数据\n   */\n\n  /**\n   * 索引\n   */\n\n  /**\n   * @param  {} width\n   * @param  {} height\n   * @param  {} x\n   * @param  {} y\n   */\n  function Rect(x, y, width, height) {\n    classCallCheck_default()(this, Rect);\n\n    this.data = [];\n    this.indices = [];\n    this.width = width;\n    this.height = height;\n    this.x = x;\n    this.y = y;\n    this.makeData();\n  }\n\n  createClass_default()(Rect, [{\n    key: "makeData",\n    value: function makeData() {\n      this.data = [{\n        position: {\n          x: this.x,\n          y: this.y\n        }\n      }, {\n        position: {\n          x: this.x,\n          y: this.y + this.height\n        }\n      }, {\n        position: {\n          x: this.x + this.width,\n          y: this.y\n        }\n      }, {\n        position: {\n          x: this.x + this.width,\n          y: this.y + this.height\n        }\n      }];\n      this.indices = [0, 1, 2, 2, 1, 3];\n    }\n  }, {\n    key: "addTo",\n    value: function addTo(app) {\n      if (this.meshKey) {\n        app.canvas.remove(this.meshKey);\n      }\n\n      this.mesh = new Meshs_Mesh();\n      this.meshKey = app.canvas.add(this.mesh);\n      this.mesh.setData(this.data, this.indices);\n    }\n  }]);\n\n  return Rect;\n}();\n\n/* harmony default export */ var Shapes_Rect = (Rect_Rect);\n// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\n\nfunction src_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction src_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { src_ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { src_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction src_createSuper(Derived) { var hasNativeReflectConstruct = src_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction src_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar src_MiniGL = /*#__PURE__*/function (_Base) {\n  inherits_default()(MiniGL, _Base);\n\n  var _super = src_createSuper(MiniGL);\n\n  function MiniGL(config) {\n    var _this;\n\n    classCallCheck_default()(this, MiniGL);\n\n    _this = _super.call(this, config);\n    _this.autoUpdate = false;\n    _this.container = config.container;\n    _this.config = Object.assign({}, config);\n    return _this;\n  }\n\n  createClass_default()(MiniGL, [{\n    key: "init",\n    value: function init() {\n      this.canvas = document.createElement("canvas");\n      this.container.appendChild(this.canvas);\n      this.gl = this.canvas.getContext("webgl", {\n        antialias: true,\n        antialiasSamples: 16,\n        preserveDrawingBuffer: true\n      });\n      if (this.gl == null) console.error("你的浏览器不支持webgl,请更新使用chrome浏览器");\n      this.viewport = new Viewport(src_objectSpread({\n        miniGL: this\n      }, this.config));\n      this.viewport.resize();\n      this.canvas = new View_Canvas(src_objectSpread({\n        miniGL: this\n      }, this.config));\n      this.canvas.update();\n    }\n  }]);\n\n  return MiniGL;\n}(src_Base);\n\nsrc_MiniGL.FlyLine = FlyLine;\nsrc_MiniGL.Image = Meshs_Image;\nsrc_MiniGL.Mesh = Meshs_Mesh;\nsrc_MiniGL.Point = Meshs_Point;\nsrc_MiniGL.MeshBase = Meshs_Base;\nsrc_MiniGL.WidthLine = Meshs_WidthLine;\nsrc_MiniGL.RoundLine = Meshs_RoundLine; // 暂时做形状没有意义，本来是要专心做2d特效库的,另外去做形状，做重了和canvas性能没差了，还是专心利用gpu多进程运算\n\nsrc_MiniGL.Rect = Shapes_Rect;\n/* harmony default export */ var src = __webpack_exports__["default"] = (src_MiniGL);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///23\n')}]).default}));